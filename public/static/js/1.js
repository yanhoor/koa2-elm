(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/core-js/internals/regexp-flags.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-flags.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/core-js/internals/an-object.js\");\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/internals/regexp-flags.js?");

/***/ }),

/***/ "./node_modules/core-js/internals/string-trim-forced.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim-forced.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/core-js/internals/fails.js\");\nvar whitespaces = __webpack_require__(/*! ../internals/whitespaces */ \"./node_modules/core-js/internals/whitespaces.js\");\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/internals/string-trim-forced.js?");

/***/ }),

/***/ "./node_modules/core-js/internals/string-trim.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ \"./node_modules/core-js/internals/require-object-coercible.js\");\nvar whitespaces = __webpack_require__(/*! ../internals/whitespaces */ \"./node_modules/core-js/internals/whitespaces.js\");\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/internals/string-trim.js?");

/***/ }),

/***/ "./node_modules/core-js/internals/whitespaces.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/whitespaces.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n//# sourceURL=webpack:///./node_modules/core-js/internals/whitespaces.js?");

/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.to-string.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar redefine = __webpack_require__(/*! ../internals/redefine */ \"./node_modules/core-js/internals/redefine.js\");\nvar anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/core-js/internals/an-object.js\");\nvar fails = __webpack_require__(/*! ../internals/fails */ \"./node_modules/core-js/internals/fails.js\");\nvar flags = __webpack_require__(/*! ../internals/regexp-flags */ \"./node_modules/core-js/internals/regexp-flags.js\");\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n\n\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.regexp.to-string.js?");

/***/ }),

/***/ "./node_modules/core-js/modules/es.string.trim.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.trim.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $ = __webpack_require__(/*! ../internals/export */ \"./node_modules/core-js/internals/export.js\");\nvar $trim = __webpack_require__(/*! ../internals/string-trim */ \"./node_modules/core-js/internals/string-trim.js\").trim;\nvar forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ \"./node_modules/core-js/internals/string-trim-forced.js\");\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.string.trim.js?");

/***/ }),

/***/ "./src/config/rules.ts":
/*!*****************************!*\
  !*** ./src/config/rules.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"./node_modules/core-js/modules/es.object.to-string.js\");\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ \"./node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ \"./node_modules/core-js/modules/es.string.trim.js\");\n/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"./node_modules/core-js/modules/es.regexp.to-string.js\");\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n//规则\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  //必填\n  //trigger：触发校验的事件，blur 或者 change，默认为change\n  required: function required(trigger) {\n    return {\n      required: true,\n      validator: function validator(rule, value) {\n        return new Promise(function (r, j) {\n          if (!rule.required) {\n            j();\n          }\n\n          if (typeof value == \"undefined\" || value == null) {\n            j(new Error('不能为空'));\n          } else {\n            if (value instanceof Array) {\n              //数组，判断是否有值\n              if (value.length == 0) {\n                j(new Error('不能为空'));\n              }\n            } else if (typeof value == \"string\") {\n              //字符串，判断是否有值\n              if (value.length == 0) {\n                j(new Error('不能为空'));\n              }\n            }\n\n            r();\n          }\n        });\n      },\n      trigger: trigger\n    };\n  },\n  //长度显示\n  //min：最小长度\n  //max：最大长度\n  //trigger：触发校验的事件，blur 或者 change，默认为change\n  limit: function limit(min, max, trigger) {\n    if (typeof min == 'undefined' || !min) {\n      min = 0;\n    }\n\n    if (typeof max == 'undefined' || !max) {\n      max = 0;\n    }\n\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"change\";\n    }\n\n    return {\n      min: min,\n      max: max,\n      message: \"\\u4EC5\\u9650\\u8F93\\u5165\".concat(min, \"-\").concat(max, \"\\u4E2A\\u5B57\\u7B26\"),\n      trigger: trigger\n    };\n  },\n  //电子邮箱\n  //trigger：触发校验的事件，blur 或者 change，默认为change\n  email: function email(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      message: '邮箱格式错误',\n      type: 'email',\n      trigger: trigger\n    };\n  },\n  //固定话和手机号码校验\n  //trigger：触发校验的事件，blur 或者 change，默认为blur\n  phone: function phone(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value) {\n        return new Promise(function (r, j) {\n          if (value) {\n            var mobileReg = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\n\n            if (!mobileReg.test(value.trim())) {\n              var tel = value.toString();\n\n              if (tel.substring(0, 1) == \"1\") {\n                //说明不是手机号码，可能是固话\n                j(new Error('是手机电话，请输入正确的手机号'));\n              } else if (tel.substring(0, 1) != \"0\") {\n                //先检查前面3位或4位是否区号\n                j(new Error('是固话电话，请输入正确的区号'));\n              } else {\n                if (value.indexOf(\"-\") == -1) {\n                  j(new Error('请在区号后加上\"-\"'));\n                } else {\n                  var telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\n\n                  if (!telephoneReg.test(value.trim())) {\n                    j(new Error('请输入正确的固定电话'));\n                  } else {\n                    r();\n                  }\n                }\n              }\n            } else {\n              //说明是手机号码\n              if (value) {\n                var _mobileReg = /^0{0,1}(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\n\n                if (!_mobileReg.test(value.trim())) {\n                  j(new Error('请输入正确的手机号'));\n                } else {\n                  r();\n                }\n              } else {\n                r();\n              }\n            }\n          } else {\n            r();\n          }\n        });\n      },\n      trigger: trigger\n    };\n  },\n  // 手机号码校验\n  mobile: function mobile(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value) {\n        return new Promise(function (r, j) {\n          if (value) {\n            var mobileReg = /^(1[3-9][0-9])[0-9]{8}$/;\n\n            if (!mobileReg.test(value.trim())) {\n              j(new Error('请输入正确的手机号'));\n            } else {\n              r();\n            }\n          } else {\n            r();\n          }\n        });\n      },\n      trigger: trigger\n    };\n  },\n  // 固定话校验\n  telephone: function telephone(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value, callback) {\n        if (value) {\n          //先检查前面3位或4位是否区号\n          var tel = value.toString();\n\n          if (tel.substring(0, 1) != \"0\") {\n            callback(new Error('请输入正确的区号'));\n          } else {\n            if (value.indexOf(\"-\") == -1) {\n              callback(new Error('请在区号后加上\"-\"'));\n            } else {\n              var telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\n\n              if (!telephoneReg.test(value.trim())) {\n                callback(new Error('请输入正确的固定电话'));\n              } else {\n                callback();\n              }\n            }\n          }\n        } else {\n          callback();\n        }\n      },\n      trigger: trigger\n    };\n  },\n  // 邮编校验\n  postCode: function postCode(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value, callback) {\n        if (value) {\n          var maxLength = 6;\n          var postCodeReg = /^[1-9]\\d{5}(?!\\d)$/;\n\n          if (maxLength != value.trim().length && !postCodeReg.test(value.trim())) {\n            callback(new Error('请输入正确的邮政编码'));\n          } else {\n            callback();\n          }\n        } else {\n          callback();\n        }\n      },\n      trigger: trigger\n    };\n  },\n  // 身份证号校验\n  idCard: function idCard(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value, callback) {\n        if (value) {\n          //15位和18位身份证号码的正则表达式\n          var idCardReg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/; //如果通过该验证，说明身份证格式正确，但准确性还需计算\n\n          if (idCardReg.test(value)) {\n            if (value.length == 18) {\n              var idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); //将前17位加权因子保存在数组里\n\n              var idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2); //这是除以11后，可能产生的11位余数、验证码，也保存成数组\n\n              var idCardWiSum = 0; //用来保存前17位各自乖以加权因子后的总和\n\n              for (var i = 0; i < 17; i++) {\n                idCardWiSum += value.substring(i, i + 1) * idCardWi[i];\n              }\n\n              var idCardMod = idCardWiSum % 11; //计算出校验码所在数组的位置\n\n              var idCardLast = value.substring(17); //得到最后一位身份证号码\n              //如果等于2，则说明校验码是10，身份证号码最后一位应该是X\n\n              if (idCardMod == 2) {\n                if (idCardLast == \"X\" || idCardLast == \"x\") {\n                  callback();\n                } else {\n                  callback(\"身份证号码不正确\");\n                }\n              } else {\n                //用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\n                if (idCardLast == idCardY[idCardMod]) {\n                  callback();\n                } else {\n                  callback(\"身份证号码不正确\");\n                }\n              }\n            }\n          } else {\n            callback(\"身份证号码不正确\");\n          }\n        } else {\n          callback();\n        }\n      },\n      trigger: trigger\n    };\n  },\n  // 数值范围\n  range: function range(min, max, trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value) {\n        return new Promise(function (r, j) {\n          if (value + \"\") {\n            var min2 = null;\n            var max2 = null;\n\n            if (typeof min == \"undefined\") {\n              min2 = null;\n            } else if (typeof min == \"function\") {\n              min2 = min();\n            } else if (min < 0 || isNaN(min)) {\n              min2 = null;\n            } else {\n              min2 = min;\n            }\n\n            if (typeof max == \"undefined\") {\n              max2 = null;\n            } else if (typeof max == \"function\") {\n              max2 = max();\n            } else if (max < 0 || isNaN(max)) {\n              max2 = null;\n            } else {\n              max2 = max;\n            }\n\n            if (isNaN(value * 1)) {\n              j(new Error('必须为数字'));\n            } else {\n              if (min2 != null && value * 1 < min2 * 1) {\n                j(new Error('必须大于等于' + min2));\n              } else if (max2 != null && value * 1 > max2 * 1) {\n                j(new Error('必须小于等于' + max2));\n              } else {\n                r();\n              }\n            }\n          } else {\n            r();\n          }\n        });\n      },\n      trigger: trigger\n    };\n  },\n  //数字精度长度校验\n  //maxLength：最大长度\n  //precision：是精度,可以是数字，或者函数\n  precision: function precision(_precision, maxLength, trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value, callback) {\n        if (value) {\n          if (isNaN(value)) {\n            callback(new Error('必须为数字'));\n          } else {\n            //若是数字，则进行进度校验\n            var precision2 = 2;\n\n            if (typeof _precision == \"undefined\") {\n              precision2 = 2; //默认是2位小数\n            } else if (typeof _precision == \"function\") {\n              precision2 = _precision();\n            } else if (_precision < 0 || isNaN(_precision)) {\n              precision2 = 2; //默认是2位小数\n            } else {\n              precision2 = _precision;\n            }\n\n            var val = value.toString();\n\n            if (val.indexOf(\".\") != -1) {\n              if (precision2 == 0) {\n                callback(new Error('只能为整数'));\n              } else {\n                var length = val.substring(val.indexOf(\".\") + 1, val.length).length * 1; //获取小数点后面的精度\n\n                if (length > precision2) {\n                  callback(new Error('小数位后只能保留' + precision2 + '位'));\n                } else {\n                  callback();\n                }\n              }\n            } else {\n              if (val.length > maxLength) {\n                callback(new Error('只能' + maxLength + '位数'));\n              } else {\n                callback();\n              }\n            }\n          }\n        } else {\n          callback();\n        }\n      },\n      trigger: trigger\n    };\n  },\n  // 限制不输入中文校验，且长度大于3位\n  notChinese: function notChinese(trigger) {\n    if (typeof trigger == 'undefined' || !trigger) {\n      trigger = \"blur\";\n    }\n\n    return {\n      validator: function validator(rule, value, callback) {\n        if (value) {\n          var chineseReg = /[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\n\n          if (chineseReg.test(value)) {\n            callback(\"字符不能为中文\");\n          } else {\n            if (value.length > 3 && value.length < 20) {\n              callback();\n            } else {\n              callback(\"长度在 4 到 20个字符\");\n            }\n          }\n        } else {\n          callback();\n        }\n      },\n      trigger: trigger\n    };\n  }\n});\n\n//# sourceURL=webpack:///./src/config/rules.ts?");

/***/ })

}]);