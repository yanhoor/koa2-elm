{"version":3,"sources":["views/layout/layout.module.less","views/login/Login.module.css","views/goods/goods.module.less","http/index.ts","http/urls.ts","store/UserStore.ts","views/layout/menus.ts","views/layout/components/_menu.tsx","views/layout/components/_header.tsx","views/layout/Layout.tsx","views/home/About.tsx","config/rules.ts","views/login/Login.tsx","components/customAnt/upload.tsx","views/admin/Admin.tsx","views/layout/components/_listContent.tsx","components/customAnt/table.tsx","hooks/index.ts","views/admin/List.tsx","components/customAnt/drawer.tsx","views/goodsLabel/Edit.tsx","views/goodsLabel/List.tsx","components/customAnt/addressPicker.tsx","components/business/shopCategorySelect.tsx","views/shop/Edit.tsx","views/shop/List.tsx","views/shopCategory/Edit.tsx","views/shopCategory/List.tsx","views/shop/_goodsCategory.tsx","views/shop/Management.tsx","components/customAnt/uploadList.tsx","views/goods/components/_goodsLabelSelect.tsx","views/goods/components/_goodsCategoryCascader.tsx","views/goods/Edit.tsx","views/goods/List.tsx","views/PageNotFound.tsx","router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/shop/shop.module.less","components/components.module.less"],"names":["module","exports","baseURL","process","REACT_APP_ENV","console","log","DEFAULT_CONFIG","timeout","withCredentials","method","headers","mobile_login_token","$http","api","axios","create","this","interceptors","request","use","config","error","Promise","reject","response","data","url","params","options","a","op","Object","assign","formData","loading","reqConfig","FormData","par","keys","forEach","key","append","resolve","then","res","catch","e","userInfo","id","name","mobile","password","type","roles","makeAutoObservable","fetch","urls","r","success","runInAction","info","updateUser","menus","title","icon","TeamOutlined","children","path","PaperClipOutlined","ShopOutlined","PartitionOutlined","TagOutlined","UserOutlined","SubMenu","Menu","inject","observer","UserStore","history","useHistory","location","useLocation","userRoles","accessRoutes","routeList","filter","route","some","includes","map","mode","theme","getMenuItem","item","Item","onClick","pathname","push","filterMenus","result","temp","length","LayoutHeader","useState","userStore","avatar","handleClickMenu","index","Modal","confirm","ExclamationCircleOutlined","onOk","message","msg","DropMenu","LogoutOutlined","overlay","src","Header","Layout","Sider","Content","props","rules","required","trigger","validator","rule","value","j","Error","Array","limit","min","max","email","phone","test","trim","tel","toString","substring","indexOf","telephone","callback","postCode","idCard","idCardWi","idCardY","idCardWiSum","i","idCardMod","idCardLast","range","min2","max2","isNaN","precision","maxLength","precision2","val","notChinese","layout","labelCol","span","wrapperCol","CustomUpload","maxSize","typeList","uploadPath","onChange","imgFullPath","beforeUpload","file","fileList","ldx","lastIndexOf","ext","isLimit","size","isAllow","join","accept","showUploadList","customRequest","prop","lastFilePath","className","styles","img_preview","upload_action","PlusOutlined","style","fontSize","bordered","label","create_time","modify_time","LayoutList","top","table","actions","filter_actions","CustomTable","columns","rowKey","pagination","dataSource","expandable","tableScrollHeight","setTableScrollHeight","useEffect","window","addEventListener","adjustTable","removeEventListener","debounce","rh","document","querySelector","clientHeight","dh","documentElement","offset","getBoundingClientRect","height","rowClassName","record","table_striped","scroll","y","hasIndex","column","hasLastTime","unshift","dataIndex","render","text","splice","modifyColumns","Column","usePageList","pageList","setPageList","current","pageSize","total","pageSizeOptions","showSizeChanger","setPagination","getPaginationParams","getPageList","p","list","preVal","amount","Form","useForm","formRef","onQuery","init","getFieldsValue","handleChangeAdminState","state","form","gutter","resetFields","color","maxWidth","disabled","page","filters","sorter","CustomDrawer","onClose","visible","content","width","GoodsLabelEdit","initForm","setFieldsValue","validateFields","editVisible","setEditVisible","editId","setEditId","onCloseEdit","shop_id","AddressPicker","addressName","onUpdate","React","setOptions","addressText","setAddressText","initData","fetchChildren","d","level","isLeaf","loadData","selectedOptions","targetOption","parentCode","picker_container","fieldNames","adr","fullname","EditOutlined","ShopCategorySelect","cateList","setCateList","allowClear","cate","Option","setAddressName","address","setAddress","contract","shop_category_id","desc","slogan","opening_range","business_license","service_permission","deliver_fee","deliver_fee_start_amount","provinceCode","cityCode","countyCode","codeList","headAddress","tailAddress","timeRange","t","moment","TextArea","RangePicker","format","number_input","RowExpanded","admin","expanded_form","expand_item_content","shop_category","time","expandedRowRender","ShopCategoryEdit","GoodsCategory","treeData","setTreeData","editNode","setEditNode","menuKey","setMenuKey","showEdit","setShowEdit","postForm","setPostForm","getChildren","appendTreeChildren","node","parent_id","showLine","treeNode","origin","titleRender","nodeData","onContextMenuClick","postData","old","newData","onCancel","placeholder","shop_manage_wrapper","UploadList","maxCount","showPreview","setShowPreview","previewImage","setPreviewImage","completedFileList","useMemo","uid","listType","typeCheck","onPreview","onRemove","idx","footer","alt","GoodsLabelSelect","optionList","setOptionList","option","GoodsCategoryCascader","changeOnSelect","category_ids","label_ids","sku_list","pic_list","price","pack_fee","List","fields","add","remove","fieldKey","restField","sku_item_wrapper","submit","label_list","category_list","c","display","action","target","PageNotFound","status","subTitle","extra","replace","RouterView","useRouteMatch","redirect","exact","strict","from","to","AuthRoute","routeProps","component","sid","jsCookie","get","routeRoles","adminRoles","checkAndGetUserInfo","allAuth","superAuth","routes","layout_left","collapsible","layout_right","layout_header","AdminList","About","ShopCategoryList","ShopList","ShopManagement","GoodsList","GoodsLabelList","AdminIndex","isRegister","setIsRegister","validateForm","handleLogin","handleRegister","login_page","container","prefix","PhoneOutlined","Password","LockOutlined","Group","optionType","buttonStyle","RouteTree2List","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","locale","ReactDOM","Store","zhCN","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,qBAAqB,aAAe,sBAAsB,cAAgB,uBAAuB,eAAiB,0B,oBCAlJD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,UAAY,yBAAyB,QAAU,yB,oBCAxGD,EAAOC,QAAU,CAAC,iBAAmB,4B,2TCC/BC,EAAwC,QAA9BC,2LAAYC,cAA0B,OAASD,KAE/DE,QAAQC,IAAI,iBAAkBJ,GAE9B,IAAMK,EAAqC,CACvCL,QAASA,EACTM,QAAS,KACTC,iBAAiB,EACjBC,OAAQ,OACRC,QAAS,CACLC,mBAAoB,eAgEbC,EAFD,I,WAvDV,aAAe,yBAFfC,IAAMC,IAAMC,SAIRC,KAAKH,IAAII,aAAaC,QAAQC,KAAI,SAAAC,GAE9B,OAAOA,KACR,SAAAC,GAEC,OADAjB,QAAQC,IAAR,8CAA0BgB,GACnBC,QAAQC,OAAOF,MAI1BL,KAAKH,IAAII,aAAaO,SAASL,KAAI,SAAAK,GAU/B,OAAOA,EAASC,QACjB,SAAAJ,GAEC,OADAjB,QAAQC,IAAR,6CAAyBgB,GAClBC,QAAQC,OAAOF,M,gFAI9B,WAAYK,EAAaC,EAAsBC,GAA/C,gCAAAC,EAAA,6DACUC,EAAKC,OAAOC,OAAO,GAAI1B,EAAgBsB,GACtCK,EAA6BH,EAA7BG,SAA6BH,EAAnBI,QAASzB,EAAUqB,EAAVrB,OACpB0B,EAHV,2BAG0B7B,GAH1B,IAG0CoB,MAAKjB,WAC5B,QAAXA,GACA0B,EAAU1B,OAASA,EACnB0B,EAAUR,OAASA,GACZM,GACDA,EAAW,IAAIG,SACfC,EAFW,OAELV,QAFK,IAELA,IAAU,GACtBI,OAAOO,KAAKD,GAAKE,SAAQ,SAAAC,GACrBP,EAASQ,OAAOD,EAAKH,EAAIG,OAE7BL,EAAUV,KAAOQ,GAEjBE,EAAUV,KAAOE,EAfzB,kBAiBW,IAAIL,SAAQ,SAACoB,EAASnB,GACzB,EAAKV,IAAIK,QAAQiB,GAAWQ,MAAK,SAAAC,GAC7B,OAAOF,EAAQE,MAChBC,OAAM,SAAAC,GACL,OAAOvB,EAAOuB,UArB1B,2C,mEC/CW,EACD5C,YADC,EAEI,kBAFJ,EAGA,cAHA,EAIC,eAJD,EAKE,gBALF,EAMA,mBANA,EAOQ,uBAPR,EAQO,sBARP,EAcO,sBAdP,EAeO,sBAfP,EAgBS,wBAhBT,EAiBD,aAjBC,EAkBD,aAlBC,EAmBC,eAnBD,EAoBQ,uBApBR,EAqBY,2BArBZ,EAsBA,cAtBA,EAuBE,gBAvBF,EAwBA,cAxBA,EAyBK,oBAzBL,EA0BO,sBA1BP,EA2BK,oBA3BL,EA4BM,0BCoBN,M,WAjCX,aAAe,yBAIf6C,SAAiB,CACbC,GAAI,GACJC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,KAAM,EACNC,MAAO,IATPC,YAAmBtC,M,qFAYvB,iCAAAa,EAAA,+EACWjB,EAAM2C,MAAMC,GAAgBb,MAAK,SAAAc,GACpC,GAAGA,EAAEC,QAID,OAHAC,aAAY,WACR,EAAKZ,SAAWU,EAAEG,SAEf,MANnB,2C,8HAWA,sBAAA/B,EAAA,yDACQb,KAAK+B,SAASC,GADtB,yCAEehC,KAAK6C,cAFpB,iCAIe,GAJf,gD,wKC6DWC,GAlGD,CACV,CACItB,IAAK,GACLuB,MAAO,2BACPC,KAAMC,KACNC,SAAU,CACN,CACI1B,IAAK,GACLuB,MAAO,2BACPC,KAAMC,KACNE,KAAM,iBAIlB,CACI3B,IAAK,GACLuB,MAAO,2BACPC,KAAMI,KACNF,SAAU,CACN,CACI1B,IAAK,GACLuB,MAAO,iCACPC,KAAMC,KACNE,KAAM,eAqBV,CACI3B,IAAK,EACLuB,MAAO,2BACPC,KAAMK,KACNH,SAAU,CACN,CACI1B,IAAK,EACLuB,MAAO,2BACPC,KAAMK,KACNF,KAAM,kBAEV,CACI3B,IAAK,EACLuB,MAAO,2BACPC,KAAMK,KACNF,KAAM,oBAEV,CACI3B,IAAK,EACLuB,MAAO,2BACPC,KAAMM,KACNH,KAAM,wBAIlB,CACI3B,IAAK,EACLuB,MAAO,2BACPC,KAAMC,KACNC,SAAU,CACN,CACI1B,IAAK,GACLuB,MAAO,2BACPC,KAAMC,KACNE,KAAM,eAEV,CACI3B,IAAK,GACLuB,MAAO,2BACPC,KAAMO,KACNJ,KAAM,wBAM1B,CACI3B,IAAK,EACLuB,MAAO,2BACPC,KAAMQ,KACNL,KAAM,a,QCzFNM,GAAYC,KAAZD,QAsDOE,mBAAO,YAAPA,CAAoBC,aApDnC,YAAyC,IAAnBC,EAAkB,EAAlBA,UACdC,EAAUC,cACVC,EAAWC,cACTC,EAAYL,EAAU9B,SAASM,MAE/B8B,EAAeC,GAAUC,QAAO,SAACC,GACnC,OAAOA,EAAMjC,OAASiC,EAAMjC,MAAMkC,MAAM,SAAC9B,GAAD,OAAYyB,EAAUM,SAAS/B,SACxEgC,KAAK,SAAAhC,GAAC,OAAIA,EAAEU,QAsCf,OACI,eAAC,KAAD,CAAMuB,KAAK,SAASC,MAAM,OAA1B,SAxBJ,SAASC,EAAY1B,GAQjB,OAAOA,EAASuB,KAAI,SAAAI,GAChB,OAAGA,EAAK3B,SAEA,eAACO,GAAD,CAAwBV,MAAO8B,EAAK9B,MAAOC,KAAM,eAAC6B,EAAK7B,KAAN,IAAjD,SACK4B,EAAYC,EAAK3B,WADR2B,EAAKrD,KAMnB,gBAAC,KAAKsD,KAAN,CAA0B9B,KAAM,eAAC6B,EAAK7B,KAAN,IAAc+B,QAAS,kBAf5C5B,EAekE0B,EAAK1B,UAdvFa,EAASgB,WAAa7B,GACrBW,EAAQmB,KAAK9B,IAFC,IAACA,GAeX,cAA2F0B,EAAK9B,MAAhG,MAAgB8B,EAAKrD,QAQ5BoD,CAtCW,SAAdM,EAAepC,GACjB,IAAIqC,EAAgB,GASpB,OARArC,EAAMvB,SAAQ,SAAAsD,GACV,IAAMO,EAAI,eAAQP,GAClB,GAAGA,EAAK3B,SAAS,CACb,IAAIA,EAAWgC,EAAYL,EAAK3B,UAChCkC,EAAKlC,SAAWA,GAEjBiB,EAAaK,SAASY,EAAKjC,OAAUiC,EAAKlC,UAAYkC,EAAKlC,SAASmC,SAASF,EAAOF,KAAKG,MAEzFD,EA4BUD,CAAYpC,W,kDCItBwC,GAnDM1B,aAAS,WAAO,IAAD,EACZ2B,oBAAS,kBAAM1B,KAA7B2B,EAD0B,oBAE1BrC,EAAOX,EAAgBgD,EAAUzD,SAAS0D,OAC1C3B,EAAUC,cACVC,EAAWC,cAEXyB,EAAkB,SAACC,GACrB,OAAQA,GACJ,KAAK,EACwB,aAAtB3B,EAASgB,UACRlB,EAAQmB,KAAK,YAEjB,MACJ,KAAK,EACDW,KAAMC,QAAQ,CACV9C,MAAO,iCACPC,KAAM,eAAC8C,GAAA,EAAD,IACNC,KAHU,WAINnG,EAAM2C,MAAMC,GAAkBb,MAAK,SAAAc,GAC5BA,EAAEC,SACDoB,EAAQmB,KAAK,UAEjBe,IAAQtD,QAAQD,EAAEwD,aAQpCC,EACF,gBAAC,KAAD,WACI,eAAC,KAAKpB,KAAN,CAAmB9B,KAAM,eAACQ,GAAA,EAAD,IAAiBuB,QAAS,kBAAMW,EAAgB,IAAzE,qCAAe,KAGf,eAAC,KAAKZ,KAAN,CAAmB9B,KAAM,eAACmD,GAAA,EAAD,IAAmBpB,QAAS,kBAAMW,EAAgB,IAA3E,qCAAe,QAMvB,OACI,uCACI,yBACA,eAAC,KAAD,CAAUU,QAASF,EAAnB,SACI,eAAC,KAAD,CAAQG,IAAKlD,YC9CrBmD,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,MAAOC,GAAYF,IAAZE,QCAR9C,mBAAO,YAAPA,CAAoBC,aANnC,SAAe8C,GACX,OACI,8CAAgBA,EAAM7C,UAAU9B,SAASE,Y,uCCuXlC0E,GAzXD,CAGVC,SAHU,SAGDC,GACL,MAAO,CACHD,UAAU,EACVE,UAAW,SAACC,EAAWC,GACnB,OAAO,IAAI1G,SAAc,SAACmC,EAAGwE,GACpBF,EAAKH,UACNK,IAEkB,oBAAVD,GAAkC,MAATA,EACjCC,EAAE,IAAIC,MAAM,8BAERF,aAAiBG,MAEG,GAAhBH,EAAM3B,QACN4B,EAAE,IAAIC,MAAM,6BAES,iBAAVF,GAEK,GAAhBA,EAAM3B,QACN4B,EAAE,IAAIC,MAAM,6BAGpBzE,SAIZoE,QAASA,IAQjBO,MArCU,SAqCJC,EAAaC,EAAaT,GAU5B,MAToB,oBAARQ,GAAwBA,IAChCA,EAAM,GAEU,oBAARC,GAAwBA,IAChCA,EAAM,GAEc,oBAAZT,GAA4BA,IACpCA,EAAU,UAEP,CACHQ,IAAKA,EACLC,IAAKA,EACLtB,QAAQ,2BAAD,OAASqB,EAAT,YAAgBC,EAAhB,sBACPT,QAASA,IAMjBU,MAzDU,SAyDJV,GAIF,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHb,QAAS,uCACT5D,KAAM,QACNyE,QAASA,IAMjBW,MAtEU,SAsEJX,GAIF,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,GACnB,OAAO,IAAI1G,SAAc,SAACmC,EAAGwE,GACzB,GAAID,EAAO,CAEP,GADgB,sDACDS,KAAKT,EAAMU,QAsBtB,GAAIV,EAAO,CACS,4DACDS,KAAKT,EAAMU,QAGtBjF,IAFAwE,EAAE,IAAIC,MAAM,gEAKhBzE,QA9B2B,CAC/B,IAAIkF,EAAMX,EAAMY,WAChB,GAA2B,KAAvBD,EAAIE,UAAU,EAAG,GAEjBZ,EAAE,IAAIC,MAAM,oGACT,GAA2B,KAAvBS,EAAIE,UAAU,EAAG,GAExBZ,EAAE,IAAIC,MAAM,8FAEZ,IAA2B,GAAvBF,EAAMc,QAAQ,KACdb,EAAE,IAAIC,MAAM,sDACT,CACgB,uCACDO,KAAKT,EAAMU,QAGzBjF,IAFAwE,EAAE,IAAIC,MAAM,wEAoB5BzE,QAIZoE,QAASA,IAKjB3E,OA1HU,SA0HH2E,GAIH,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,GACnB,OAAO,IAAI1G,SAAc,SAACmC,EAAGwE,GACzB,GAAID,EAAO,CACS,0BACDS,KAAKT,EAAMU,QAGtBjF,IAFAwE,EAAE,IAAIC,MAAM,gEAKhBzE,QAIZoE,QAASA,IAKjBkB,UAlJU,SAkJAlB,GAIN,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,EAAegB,GAClC,GAAIhB,EAGA,GAA2B,KADjBA,EAAMY,WACRC,UAAU,EAAG,GACjBG,EAAS,IAAId,MAAM,0DAEnB,IAA2B,GAAvBF,EAAMc,QAAQ,KACdE,EAAS,IAAId,MAAM,sDAChB,CACgB,uCACDO,KAAKT,EAAMU,QAGzBM,IAFAA,EAAS,IAAId,MAAM,sEAO/Bc,KAGRnB,QAASA,IAKjBoB,SAlLU,SAkLDpB,GAIL,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,EAAegB,GAClC,GAAIhB,EAAO,CACS,GAECA,EAAMU,OAAOrC,QADZ,qBACmCoC,KAAKT,EAAMU,QAG5DM,IAFAA,EAAS,IAAId,MAAM,sEAKvBc,KAGRnB,QAASA,IAKjBqB,OAzMU,SAyMHrB,GAIH,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,EAAYgB,GAC/B,GAAIhB,EAAO,CAIP,GAFgB,4IAEFS,KAAKT,IACf,GAAoB,IAAhBA,EAAM3B,OAAc,CAIpB,IAHA,IAAI8C,EAAW,IAAIhB,MAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GACvEiB,EAAU,IAAIjB,MAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDkB,EAAc,EACTC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,GAAerB,EAAMa,UAAUS,EAAGA,EAAI,GAAKH,EAASG,GAExD,IAAIC,EAAYF,EAAc,GAC1BG,EAAaxB,EAAMa,UAAU,IAEhB,GAAbU,EACkB,KAAdC,GAAmC,KAAdA,EACrBR,IAEAA,EAAS,oDAITQ,GAAcJ,EAAQG,GACtBP,IAEAA,EAAS,0DAKrBA,EAAS,yDAGbA,KAGRnB,QAASA,IAKjB4B,MAzPU,SAyPJpB,EAAwBC,EAAwBT,GAIlD,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,GACnB,OAAO,IAAI1G,SAAc,SAACmC,EAAGwE,GACzB,GAAID,EAAQ,GAAI,CACZ,IAAI0B,EAAO,KACPC,EAAO,KAEPD,EADc,oBAAPrB,EACA,KACY,mBAAPA,EACLA,IACFA,EAAM,GAAKuB,MAAMvB,GACf,KAEAA,EAGPsB,EADc,oBAAPrB,EACA,KACY,mBAAPA,EACLA,IACFA,EAAM,GAAKsB,MAAMtB,GACf,KAEAA,EAEPsB,MAAc,EAAR5B,GACNC,EAAE,IAAIC,MAAM,mCAEF,MAANwB,GAAsB,EAAR1B,EAAmB,EAAP0B,EAC1BzB,EAAE,IAAIC,MAAM,uCAASwB,IACT,MAANC,GAAsB,EAAR3B,EAAmB,EAAP2B,EAChC1B,EAAE,IAAIC,MAAM,uCAAUyB,IAEtBlG,SAIRA,QAIZoE,QAASA,IAOjBgC,UA5SU,SA4SAA,EAA8BC,EAAmBjC,GAIvD,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,EAAYgB,GAC/B,GAAIhB,EACA,GAAI4B,MAAM5B,GACNgB,EAAS,IAAId,MAAM,uCAChB,CAEH,IAAI6B,EAAa,EAEbA,EADoB,oBAAbF,EACM,EACY,mBAAbA,EACCA,IACRA,EAAY,GAAKD,MAAMC,GACf,EAEAA,EAEjB,IAAIG,EAAMhC,EAAMY,WAChB,IAAyB,GAArBoB,EAAIlB,QAAQ,KACZ,GAAkB,GAAdiB,EACAf,EAAS,IAAId,MAAM,wCAEqD,EAA1D8B,EAAInB,UAAUmB,EAAIlB,QAAQ,KAAO,EAAGkB,EAAI3D,QAASA,OAClD0D,EACTf,EAAS,IAAId,MAAM,mDAAa6B,EAAa,WAE7Cf,SAILgB,EAAI3D,OAASyD,EACZd,EAAS,IAAId,MAAM,eAAK4B,EAAU,iBAElCd,SAKZA,KAGRnB,QAASA,IAKjBoC,WA9VU,SA8VCpC,GAIP,MAHwB,oBAAZA,GAA4BA,IACpCA,EAAU,QAEP,CACHC,UAAW,SAACC,EAAWC,EAAYgB,GAC/B,GAAIhB,EAAO,CACS,oCACDS,KAAKT,GAChBgB,EAAS,8CAELhB,EAAM3B,OAAS,GAAK2B,EAAM3B,OAAS,GACnC2C,IAEAA,EAAS,yDAIjBA,KAIRnB,QAASA,K,yCC5WfqC,GAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,K,+DCMT,SAASE,GAAa5C,GAAc,IAAD,EAQ1CA,EALAM,aAH0C,MAGlC,GAHkC,IAQ1CN,EAJA6C,eAJ0C,MAIhC,GAJgC,IAQ1C7C,EAHA8C,gBAL0C,MAK/B,CAAC,OAAQ,QAAS,OAAQ,QALK,IAQ1C9C,EAFA+C,kBAN0C,MAM7B,eAN6B,EAO1CC,EACAhD,EADAgD,SAGEC,EAAcnH,EAAgBwE,EAE9B4C,EAAe,SAACC,EAAgBC,GAAgC,IAAD,IAC3DC,EAAG,UAAGF,EAAK5H,YAAR,aAAG,EAAW+H,YAAY,KAC7BC,EAAG,UAAGJ,EAAK5H,YAAR,aAAG,EAAW4F,UAAUkC,GAC3BG,EAAUL,EAAKM,KAAO,KAAO,KAAOZ,EACpCa,EAAUZ,EAAShF,SAASyF,GAOlC,OANIG,GACApE,IAAQ3F,MAAR,6BAAqBmJ,EAASa,KAAK,KAAnC,kBAEAH,GACAlE,IAAQ3F,MAAR,+CAAwBkJ,EAAxB,MAEGa,IAAYF,GAcvB,OACI,eAAC,KAAD,CACII,OAAO,UACPC,gBAAgB,EAChBX,aAAcA,EACdY,cAhBc,SAACC,GAAe,IAC1BZ,EAASY,EAATZ,KACLD,EAAaC,IACZjK,EAAM2C,MAAMkH,EAAY,CAAEI,OAAMa,aAAc1D,GAAS,CAAE/F,UAAU,IAAQU,MAAK,SAAAc,GACzEA,EAAEC,UACO,OAARgH,QAAQ,IAARA,KAAWjH,EAAEU,WAOzB,SAOQ6D,EACM,eAAC,KAAD,CAASjE,MAAM,2BAAf,SACE,sBAAKsD,IAAKsD,EAAagB,UAAWC,KAAOC,gBAE3C,uBAAKF,UAAS,UAAKC,KAAOE,cAAZ,kBAAd,UACE,eAACC,GAAA,EAAD,CAAcC,MAAO,CAACC,SAAU,UAChC,+DCpCTtH,mBAAO,YAAPA,CAAoBC,aAvBnC,YAAwC,IAAnBC,EAAkB,EAAlBA,UACT9B,EAAa8B,EAAb9B,SAMR,OACI,qCACI,gBAAC,KAAD,CAAcgB,MAAM,2BAAOmI,UAAQ,EAAnC,UACI,eAAC,KAAapG,KAAd,CAAmBqG,MAAM,qBAAzB,SAAiCpJ,EAASE,OAC1C,eAAC,KAAa6C,KAAd,CAAmBqG,MAAM,qBAAzB,SAAiCpJ,EAASG,SAC1C,eAAC,KAAa4C,KAAd,CAAmBqG,MAAM,eAAzB,SAAgCpJ,EAASI,WACzC,eAAC,KAAa2C,KAAd,CAAmBqG,MAAM,2BAAzB,SAAkCpJ,EAASqJ,cAC3C,eAAC,KAAatG,KAAd,CAAmBqG,MAAM,uCAAzB,SAAoCpJ,EAASsJ,cAC7C,eAAC,KAAavG,KAAd,CAAmBqG,MAAM,eAAzB,SACI,eAAC7B,GAAD,CAActC,MAAOjF,EAAS0D,OAAQiE,SAb/B,WACnB7F,EAAUhB,cAYkE4G,WAAYjH,e,6BCjBjF,SAAS8I,GAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAC5C,OACI,uBAAKd,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,SACMY,IAEN,sBAAKZ,UAAWC,KAAOc,eAAvB,SACMD,IAEN,sBAAKd,UAAU,eAAf,SACMa,O,wBCEH,SAASG,GAAT,GAAsG,IAA/EC,EAA8E,EAA9EA,QAA8E,IAArEC,cAAqE,MAA5D,KAA4D,EAAtDnC,EAAsD,EAAtDA,SAAUoC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,WAAoB,EAE9DzG,qBAF8D,mBAEzG0G,EAFyG,KAEtFC,EAFsF,KAIhHC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,SAAUC,GAC3B,kBAAMF,OAAOG,oBAAoB,SAAUD,MACnD,IAEHH,qBAAU,WACNG,MACD,CAACP,IAEJ,IAuBMO,EAAcE,oBAAQ,sBAAC,oCAAA3L,EAAA,sDACnB4L,EADmB,UACdC,SAASC,cAAc,uBADT,aACd,EAAwCC,aAC7CC,EAAKH,SAASI,gBAAgBF,cAC9BpB,EAAQkB,SAASC,cAAc,iBAE3BI,EAASvB,EAAMwB,wBAEjBd,EADDO,EAAKI,EACiBE,EAAOE,QAAUR,EAAKI,GAAM,IAE5BJ,EAAKM,EAAOxB,IAAM,MATtB,2CAY1B,IAEH,OACI,eAAC,KAAD,CACIvJ,GAAG,YACHmI,KAAK,SACL+C,aAAc,SAACC,EAAQxH,GACnB,OAAGA,EAAQ,IAAM,EAAUiF,KAAOwC,cAC3B,IAEXtB,WAAYA,EACZpC,SAAUA,EACVqC,WAAaA,EACbC,WAAYA,EACZqB,OAAQ,CAACC,EAAGrB,GACZJ,OAAQA,EAZZ,SAtCkB,WAClB,IAAM0B,EAAW3B,EAAQrH,MAAK,SAACiJ,GAAD,MAA2B,UAAfA,EAAOhM,OAC3CiM,EAAc7B,EAAQrH,MAAK,SAACiJ,GAAD,MAA2B,gBAAfA,EAAOhM,OAkBpD,OAjBI+L,GACA3B,EAAQ8B,QAAQ,CACZ3K,MAAO,IACP4K,UAAW,GACXnM,IAAK,QACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOA,EAAQ,KAIvB8H,GACA7B,EAAQkC,QAAQ,EAAG,EAAG,CAClB/K,MAAO,uCACP4K,UAAW,cACXnM,IAAK,gBAGNoK,EAgCCmC,GAAgBtJ,KAAI,SAAA+I,GAChB,OACI,eAAC,KAAMQ,OAAP,eACQR,SC9EhC,SAASS,GAAT,GAA8D,IAAvCvN,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAAyB,EAC3B2E,mBAAS,IADkB,mBACpD2I,EADoD,KAC1CC,EAD0C,OAEvB5I,mBAA0B,CACxD6I,QAAS,EACTC,SAAU,GACVC,MAAO,EACPC,gBAAiB,CAAC,IAAK,IAAK,KAAM,KAAM,MACxCC,iBAAiB,IAPoC,mBAEpD1C,EAFoD,KAExC2C,EAFwC,KAUnDC,EAAsB,WACxB,MAAO,CACHN,QAAStC,EAAWsC,QACpBC,SAAUvC,EAAWuC,WAIvBM,EAAc,WAA0B,IAAzBC,EAAwB,uDAAP,GAClChP,EAAM2C,MAAM7B,EAAZ,uCAAqBC,GAAW+N,KAA0BE,GAAIhO,GAASe,MAAM,SAAAc,GACzE0L,EAAY1L,EAAEoM,MACdJ,GAAc,SAAAK,GACV,OAAO,2BACAA,GADP,IAEIR,MAAO7L,EAAEsM,gBASzB,OAHA5C,oBAAUwC,EAAa,CAAC7C,EAAWsC,QAAStC,EAAWuC,WAGhD,CAAEH,WAAUpC,aAAY6C,cAAaF,iBCsHjC9K,mBAAO,YAAPA,CAAoBC,aAvJnC,SAAmB8C,GAAY,IAAD,EACNsI,KAAKC,UAAjBC,EADkB,oBAElBrL,EAAc6C,EAAd7C,UAFkB,EAGiCoK,GAAY,CACnEvN,IAAK8B,EACL5B,QAAS,CAAEnB,OAAQ,SAFjByO,EAHoB,EAGpBA,SAAUpC,EAHU,EAGVA,WAAY6C,EAHF,EAGEA,YAAaF,EAHf,EAGeA,cAKnCU,EAAU,WAA4B,IAA3BC,EAA0B,wDACjCpG,EAAMkG,EAAQG,iBACjBD,IACCpG,EAAIoF,QAAU,GAElBO,EAAY3F,IAYVsG,EAAyB,SAACtN,EAAYuN,GACxC3P,EAAM2C,MAAMC,EAAuB,CAAE+M,QAAOvN,OAAML,MAAK,SAAAc,GACnD,GAAGA,EAAEC,QAGD,OAFAsD,IAAQtD,QAAQD,EAAEwD,KAClBkJ,IACO1M,EAEPuD,IAAQ3F,MAAMoC,EAAEwD,SAKtBsF,EACF,eAAC,KAAD,CAAMiE,KAAMN,EAAZ,SACI,gBAAC,KAAD,CAAKO,OAAQ,CAAC,EAAG,IAAjB,UACI,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,OAA5B,SACI,eAAC,KAAD,QAGR,eAAC,KAAD,CAAKmH,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,SAA5B,SACI,eAAC,KAAD,aAOdwJ,EACF,uCACI,eAAC,KAAD,CAAQ1G,QAAS,kBAAMoK,KAAvB,0BACA,eAAC,KAAD,CAAQpK,QAzCK,SAACjD,GAClBoN,EAAQQ,cACRP,GAAQ,IAuCJ,6BAIFvD,EAAU,CACZ,CACI7I,MAAO,qBACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,qBACP4K,UAAW,SACXnM,IAAK,UAET,CACIuB,MAAO,2BACP4K,UAAW,OACXnM,IAAK,OACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,IAAIlD,EAAI,GACR,OAAQ0K,EAAO/K,MACX,KAAK,EACDK,EAAI,iCACJ,MACJ,QACA,KAAK,EACDA,EAAI,iCAGZ,OAAOA,IAGf,CACIM,MAAO,2BACP4K,UAAW,QACXnM,IAAK,QACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OACI,eAAC,KAAD,CAAKgK,MAAwB,IAAjBxC,EAAOoC,MAAc,QAAU,OAA3C,SACsB,IAAjBpC,EAAOoC,MAAc,eAAO,mBAK7C,CACIxM,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOwH,EAAO1H,OACV,sBAAKY,IAAK7D,EAAgB2K,EAAO1H,OAAQuF,MAAO,CAAC4E,SAAU,OAAQ3C,OAAQ,UAC3E,MAGZ,CACIlK,MAAO,2BACP4K,UAAW,cACXnM,IAAK,eAET,CACIuB,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,IAAMkK,EAAWhM,EAAU9B,SAASC,KAAOmL,EAAOnL,GAElD,OACI,6BAEyB,IAAjBmL,EAAOoC,MACD,eAAC,KAAD,CAAQnN,KAAK,OAAOyN,SAAUA,EAAU9K,QAAS,kBAAMuK,EAAuBnC,EAAOnL,GAAI,IAAzF,0BACA,eAAC,KAAD,CAAQI,KAAK,OAAOyN,SAAUA,EAAU9K,QAAS,kBAAMuK,EAAuBnC,EAAOnL,GAAI,IAAzF,+BAQ9B,OACI,eAACsJ,GAAD,CACIC,IAAKA,EACLE,QAASA,EACTD,MAAO,eAACG,GAAD,CACHC,QAASA,EACTlC,SA1Hc,SAACoG,EAA6BC,EAAcC,GAClEvB,EAAcqB,IA0HN/D,WAAYmC,EACZpC,WAAYA,U,UChJb,SAASmE,GAAT,GAAgF,IAAxDlN,EAAuD,EAAvDA,MAAOmN,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAA8B,IAArBC,aAAqB,MAAb,IAAa,EAC1F,OACI,eAAC,KAAD,CAAQtN,MAAOA,EAAOmN,QAASA,EAASC,QAASA,EAASE,MAAOA,EAAjE,SACKD,ICFE,SAASE,GAAT,GAAuD,IAA9BtO,EAA6B,EAA7BA,GAAIkO,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,QAAgB,EAC7CnB,KAAKC,UAAjBC,EADyD,oBAEjE/C,qBAAU,WACNoE,MACD,CAACJ,IAEJ,IAAMI,EAAW,WACTvO,EASJpC,EAAM2C,MAAMC,EAAuB,CAAER,MAAM,CAACvC,OAAQ,QAAQkC,MAAM,SAAAc,GAC3DA,EAAEC,QACDwM,EAAQsB,eAAe/N,EAAEhC,MAEzBuF,IAAQ3F,MAAMoC,EAAEwD,QAZpBiJ,EAAQsB,eAAe,CACnBxO,GAAI,GACJC,KAAM,GACN0N,MAAO,UA6BnB,OACI,uCACI,gBAAC,KAAD,CAAMH,KAAMN,EAAS/F,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,IAA7D,UACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAD,MAEJ,eAAC,KAAK9B,KAAN,CAAWqG,MAAM,eAAKlJ,KAAK,QAAQ0E,MAAO,CAACA,GAAMC,YAAjD,SACI,wBAAOxE,KAAK,eAGpB,eAAC,KAAD,CAAQA,KAAK,UAAU2C,QAzBd,WACbmK,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GAC1BpJ,EAAM2C,MAAMC,EAAZ,2BAAsCwG,GAAtC,IAA2ChH,QAAML,MAAM,SAAAc,GAChDA,EAAEC,SACDwN,IACAlK,IAAQtD,QAAQD,EAAEwD,MAElBD,IAAQ3F,MAAMoC,EAAEwD,WAGzBpE,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OAc9B,6BC4EG6B,mBAAO,YAAPA,CAAoBC,aA/HnC,SAAwB8C,GAAY,IAAD,EACXsI,KAAKC,UAAjBC,EADuB,sBAEO3J,oBAAS,GAFhB,mBAExBmL,EAFwB,KAEXC,EAFW,OAGHpL,mBAAS,IAHN,mBAGxBqL,EAHwB,KAGhBC,EAHgB,KAIvBhN,EAAc6C,EAAd7C,UAJuB,EAK4BoK,GAAY,CACnEvN,IAAK8B,EACL5B,QAAS,CAAEnB,OAAQ,SAFjByO,EALyB,EAKzBA,SAAUpC,EALe,EAKfA,WAAY6C,EALG,EAKHA,YAAaF,EALV,EAKUA,cAKnCU,EAAU,WAA4B,IAA3BC,EAA0B,wDACjCpG,EAAMkG,EAAQG,iBACjBD,IACCpG,EAAIoF,QAAU,GAElBO,EAAY3F,IA0BV8H,EAAc,WAChBH,GAAe,GACfxB,KAGE5D,EACF,eAAC,KAAD,CAAMiE,KAAMN,EAAZ,SACI,eAAC,KAAD,CAAKO,OAAQ,CAAC,EAAG,IAAjB,SACI,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAA7B,SACI,eAAC,KAAD,YAOdwJ,EACF,uCACI,eAAC,KAAD,CAAQ1G,QAAS,kBAAMoK,KAAvB,0BACA,eAAC,KAAD,CAAQpK,QA3CK,SAACjD,GAClBoN,EAAQQ,cACRP,GAAQ,IAyCJ,0BACA,eAAC,KAAD,CAAQpK,QAnCE,WACVlB,EAAU9B,SAASgP,SAIvBF,EAAU,IACVF,GAAe,IAJX3K,IAAQ3F,MAAM,yCAiCd,6BAIFuL,EAAU,CACZ,CACI7I,MAAO,eACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,eACP4K,UAAW,QACXnM,IAAK,QACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OACI,eAAC,KAAD,CAAKgK,MAAOxC,EAAOwC,MAAnB,SACKxC,EAAOwC,UAKxB,CACI5M,MAAO,2BACP4K,UAAW,cACXnM,IAAK,eAET,CACIuB,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OACI,6BACI,eAAC,KAAD,CAAQvD,KAAK,OAAO2C,QAAS,kBA9D7B/C,EA8D8CmL,EAAOnL,GA7DrE6O,EAAU7O,QACV2O,GAAe,GAFA,IAAC3O,GA8DA,+BAOpB,OACI,uCACI,eAACsJ,GAAD,CACIC,IAAKA,EACLE,QAASA,EACTD,MAAO,eAACG,GAAD,CACHC,QAASA,EACTlC,SAzFU,SAACoG,EAA6BC,EAAcC,GAClEvB,EAAcqB,IAyFF/D,WAAYmC,EACZpC,WAAYA,MAGpB,eAACmE,GAAD,CACIlN,MAAO6N,EAAS,2BAAS,2BACzBT,QAASO,EACTR,QAASY,EACTV,QAAS,eAACE,GAAD,CAAgBtO,GAAI4O,EAAQV,QAASY,EAAaX,QAASO,a,qECpGrE,SAASM,GAAT,GAA0E,IAAjDC,EAAgD,EAAhDA,YAAajK,EAAmC,EAAnCA,MAAO0C,EAA4B,EAA5BA,SAAUwH,EAAkB,EAAlBA,SAAkB,EACtDC,IAAM5L,SAAS,IADuC,mBAC7E3E,EAD6E,KACpEwQ,EADoE,OAE9C7L,mBAAS0L,GAFqC,mBAE7EI,EAF6E,KAEhEC,EAFgE,KAIpFnF,qBAAU,WACNoF,MACD,IAEHpF,qBAAU,WACNmF,EAAeL,KAChB,CAACA,IAEJ,IAAMM,EAAQ,uCAAG,8BAAA1Q,EAAA,sEACG2Q,IADH,OACPC,EADO,OAEPtM,EAASsM,EAAEtM,OAAO,GAAGV,KAAI,SAACI,GAG5B,OAFAA,EAAK6M,MAAQ,EACb7M,EAAK8M,QAAS,EACP9M,KAEXuM,EAAWjM,GAPE,2CAAH,qDAURyM,EAAQ,uCAAG,WAAOC,GAAP,mBAAAhR,EAAA,6DACPiR,EAAeD,EAAgBA,EAAgBxM,OAAS,IACjDnE,SAAU,EAFV,SAGGsQ,EAAcM,EAAa9P,IAH9B,OAGPyP,EAHO,OAIP5C,EAAO4C,EAAEtM,OAAO,GACG,GAAtB2M,EAAaJ,QACZI,EAAa5O,SAAW2L,EAAKpK,KAAI,SAACI,GAG9B,OAFAA,EAAK6M,MAAQI,EAAaJ,MAAQ,EAClC7M,EAAK8M,OAAwB,IAAf9M,EAAK6M,MACZ7M,MAGfiN,EAAa5Q,SAAU,EACvBkQ,EAAW,aAAIxQ,IAbF,2CAAH,sDAgBR4Q,EAAa,uCAAG,wCAAA3Q,EAAA,6DAAOmB,EAAP,+BAAY,GAAZ,kBACXpC,EAAM2C,MAAMC,EAAsB,CAAEuP,WAAY/P,GAAM,CAAEvC,OAAQ,SADrD,2CAAH,qDAWnB,OACI,uBAAKkL,UAAWC,KAAOoH,iBAAvB,UACI,eAAC,KAAD,CAAOnC,UAAQ,EAAC7I,MAAOqK,EAAatO,MAAOsO,IAC3C,eAAC,KAAD,CAEIrK,MAAOA,EACPpG,QAASA,EACTqR,WAAY,CAAE9G,MAAO,WAAYnE,MAAO,MACxC0C,SAfU,SAACV,EAAUpI,GAC7B,IAAMsR,EAAMtR,EAAQ6D,KAAI,SAAC3D,GAAD,OAAgBA,EAAKA,EAAGqR,SAAW,MAAI9H,KAAK,IACpEiH,EAAeY,GACP,OAARhB,QAAQ,IAARA,KAAWgB,GACH,OAARxI,QAAQ,IAARA,KAAWV,EAAKpI,IAYRgR,SAAU,SAAC5I,GAAD,OAAc4I,EAAS5I,IANrC,SASI,eAAC,KAAD,CAAQhG,KAAM,eAACoP,GAAA,EAAD,W,cClFf,SAASC,GAAT,GAAwD,IAA1BrL,EAAyB,EAAzBA,MAAO0C,EAAkB,EAAlBA,SAAkB,EAClCnE,mBAAS,IADyB,mBAC3D+M,EAD2D,KACjDC,EADiD,KASlE,OANApG,qBAAU,WACNvM,EAAM2C,MAAMC,EAAuB,GAAG,CAAE/C,OAAQ,QAASkC,MAAK,SAAAc,GACvDA,EAAEC,SAAS6P,EAAY9P,EAAEoM,WAEjC,IAGC,eAAC,KAAD,CAAQ7H,MAAOA,EAAO0C,SAAUA,EAAU8I,YAAU,EAApD,SAEQF,EAAS7N,KAAI,SAACgO,GAAD,OACT,eAAC,KAAOC,OAAR,CAAe1L,MAAOyL,EAAKzQ,GAA3B,SACKyQ,EAAKxQ,MAD0BwQ,EAAKzQ,S,wBCmH9C2B,mBAAO,YAAPA,CAAoBC,aAxHnC,YAA4D,IAAzC5B,EAAwC,EAAxCA,GAAIkO,EAAoC,EAApCA,QAAkBrM,GAAkB,EAA3BsM,QAA2B,EAAlBtM,WAAkB,EACnCmL,KAAKC,UAAjBC,EAD+C,sBAEnB3J,mBAAc,IAFK,mBAElD0L,EAFkD,KAErC0B,EAFqC,OAGzBpN,mBAAS,IAHgB,mBAGhDqN,EAHgD,KAGvCC,EAHuC,KAKvD1G,qBAAU,WACNoE,MACD,CAACvO,IAEJ,IAAMuO,EAAW,WACb,IAAIvO,EAwBA,OAvBA2Q,EAAe,SACfzD,EAAQsB,eAAe,CACnBxO,GAAI,GACJoJ,YAAa,GACbC,YAAa,GACbpJ,KAAM,GACN6Q,SAAU,GACVC,iBAAkB,GAClBC,KAAM,GACNC,OAAQ,GACRC,cAAe,GACfzN,OAAQ,GACR0N,iBAAkB,GAClBC,mBAAoB,GACpBC,YAAa,GACbC,yBAA0B,GAC1BC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbC,YAAa,KAKrBhU,EAAM2C,MAAMC,EAAiB,CAAER,MAAM,CAACvC,OAAQ,QAAQkC,MAAM,SAAAc,GACxD,GAAGA,EAAEC,QAAQ,CACT,IAAMjC,EAAOgC,EAAEG,KACTiR,EAAYpT,EAAKyS,cAAgBzS,EAAKyS,cAAczO,KAAI,SAACqP,GAAD,OAAeC,KAAOD,MAAM,GAC1F5E,EAAQsB,eAAR,2BACO/N,EAAEG,MADT,IAEIsQ,cAAeW,EACfH,SAAU,CAACjR,EAAEG,KAAK2Q,aAAc9Q,EAAEG,KAAK4Q,SAAU/Q,EAAEG,KAAK6Q,eAE5Dd,EAAelQ,EAAEG,KAAK+Q,kBAEtB3N,IAAQ3F,MAAMoC,EAAEwD,SAwB5B,OACI,uCACI,gBAAC,KAAD,CAAMuJ,KAAMN,EAAS/F,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,IAA7D,UACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAD,MAEJ,eAAC,KAAK9B,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,WAAW0E,MAAO,CAACA,GAAMC,WAAYD,GAAMzE,UAAxE,SACI,eAAC,KAAD,CAAO4G,UAAW,OAEtB,eAAC,KAAKhE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,mBAAmB0E,MAAO,CAACA,GAAMC,YAA9D,SACI,eAACyL,GAAD,MAEJ,eAAC,KAAKvN,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAMoN,SAAP,MAEJ,eAAC,KAAKlP,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,SAA7B,SACI,eAAC,KAAM+R,SAAP,MAEJ,eAAC,KAAKlP,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,gBAA7B,SACI,eAAC,KAAWgS,YAAZ,CAAwBC,OAAQ,YAEpC,eAAC,KAAKpP,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,SAAS0E,MAAO,CAACA,GAAMC,YAApD,SACI,eAAC0C,GAAD,MAEJ,eAAC,KAAKxE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,mBAAmB0E,MAAO,CAACA,GAAMC,YAA9D,SACI,eAAC0C,GAAD,MAEJ,eAAC,KAAKxE,KAAN,CAAWqG,MAAM,iCAAQlJ,KAAK,qBAAqB0E,MAAO,CAACA,GAAMC,YAAjE,SACI,eAAC0C,GAAD,MAEJ,eAAC,KAAKxE,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,cAAc0E,MAAO,CAACA,GAAMC,YAAxD,SACI,eAAC,KAAD,CAAa+D,UAAWC,KAAOuJ,iBAEnC,eAAC,KAAKrP,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,2BAA2B0E,MAAO,CAACA,GAAMC,YAArE,SACI,eAAC,KAAD,CAAa+D,UAAWC,KAAOuJ,iBAEnC,eAAC,KAAKrP,KAAN,CAAWqG,MAAM,eAAKlJ,KAAK,WAAW0E,MAAO,CAACA,GAAMC,YAApD,SACI,eAACoK,GAAD,CAAeC,YAAaA,EAAaC,SAAW,SAACgB,GAAD,OAAiBW,EAAWX,QAEpF,eAAC,KAAKpN,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,cAAc0E,MAAO,CAACA,GAAMC,YAAzD,SACI,eAAC,KAAD,SAGR,eAAC,KAAD,CAAQxE,KAAK,UAAU2C,QA9Dd,WACbmK,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GAAQ,IAAD,cACcA,EAAI0K,SADlB,GACzBH,EADyB,KACXC,EADW,KACDC,EADC,KAEjC7T,EAAM2C,MAAMC,EAAZ,2BAAgCwG,GAAhC,IAAqCuK,eAAcC,WAAUC,aAAYE,YAAaf,GAAW3B,EAAajP,QAAML,MAAM,SAAAc,GACnHA,EAAEC,SACM,OAAPwN,QAAO,IAAPA,OACAlK,IAAQtD,QAAQD,EAAEwD,KACdjE,GACA6B,EAAUhB,cAGdmD,IAAQ3F,MAAMoC,EAAEwD,WAGzBpE,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OA+C9B,iCC6BZ,SAASsS,GAAT,GAAmD,IAA5BjH,EAA2B,EAA3BA,OACXkH,EAAUlH,EAAVkH,MACR,OACI,gBAAC,KAAD,CAAMnL,OAAO,SAASC,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,IAAKuB,UAAWC,KAAO0J,cAArF,UACI,eAAC,KAAKxP,KAAN,CAAWqG,MAAM,2BAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAOlL,SAEzD,eAAC,KAAK6C,KAAN,CAAWqG,MAAM,2BAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAO2F,aAEzD,eAAC,KAAKhO,KAAN,CAAWqG,MAAM,2BAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAOqH,cAAcvS,SAEvE,eAAC,KAAK6C,KAAN,CAAWqG,MAAM,eAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAO6F,SAEzD,eAAC,KAAKlO,KAAN,CAAWqG,MAAM,eAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAO8F,WAEzD,eAAC,KAAKnO,KAAN,CAAWqG,MAAM,2BAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SACIpH,EAAO+F,cAAczO,KAAI,SAACgQ,GAAD,OAAeV,KAAOU,GAAMP,OAAO,eAAa7J,KAAK,gBAGtF,eAAC,KAAKvF,KAAN,CAAWqG,MAAM,qBAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAOkG,gBAEzD,eAAC,KAAKvO,KAAN,CAAWqG,MAAM,qBAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAOmG,6BAEzD,eAAC,KAAKxO,KAAN,CAAWqG,MAAM,eAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA+CpH,EAAOwG,YAAcxG,EAAOyG,gBAE/E,eAAC,KAAK9O,KAAN,CAAWqG,MAAM,qBAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CF,EAAMpS,SAExD,eAAC,KAAK6C,KAAN,CAAWqG,MAAM,2BAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAO/B,gBAEzD,eAAC,KAAKtG,KAAN,CAAWqG,MAAM,uCAAjB,SACI,uBAAMR,UAAWC,KAAO2J,oBAAxB,SAA8CpH,EAAO9B,mBAMtD1H,mBAAO,YAAPA,CAAoBC,aAnMnC,SAAkB8C,GAAY,IAAD,EACLsI,KAAKC,UAAjBC,EADiB,sBAEa3J,oBAAS,GAFtB,mBAElBmL,EAFkB,KAELC,EAFK,OAGGpL,mBAAS,IAHZ,mBAGlBqL,EAHkB,KAGVC,EAHU,QAIHnK,EAAd7C,UACmDoK,GAAY,CACnEvN,IAAK8B,EACL5B,QAAS,CAAEnB,OAAQ,UAFjByO,EALmB,EAKnBA,SAAUpC,EALS,EAKTA,WAAY6C,EALH,EAKGA,YAAaF,EALhB,EAKgBA,cAKnCU,EAAU,WAA4B,IAA3BC,EAA0B,wDACjCpG,EAAMkG,EAAQG,iBACjBD,IACCpG,EAAIoF,QAAU,GAElBO,EAAY3F,IAsBV8H,EAAc,WAChBH,GAAe,GACfxB,KAGE5D,EACF,eAAC,KAAD,CAAMiE,KAAMN,EAAZ,SACI,gBAAC,KAAD,CAAKO,OAAQ,CAAC,EAAG,IAAjB,UACI,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAA7B,SACI,eAAC,KAAD,QAGR,eAAC,KAAD,CAAKmH,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,mBAA7B,SACI,eAACoQ,GAAD,aAOd5G,EACF,uCACI,eAAC,KAAD,CAAQ1G,QAAS,kBAAMoK,KAAvB,0BACA,eAAC,KAAD,CAAQpK,QA5CK,SAACjD,GAClBoN,EAAQQ,cACRP,GAAQ,IA0CJ,0BACA,eAAC,KAAD,CAAQpK,QApCE,WACd8L,EAAU,IACVF,GAAe,IAkCX,6BAIF/E,EAAU,CACZ,CACI7I,MAAO,2BACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,2BACP4K,UAAW,WACXnM,IAAK,YAET,CACIuB,MAAO,2BACP4K,UAAW,gBACXnM,IAAK,gBACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OAAOwH,EAAOqH,cAAcvS,OAGpC,CACIc,MAAO,eACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,eACP4K,UAAW,cACXnM,IAAK,cACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOwH,EAAOwG,YAAcxG,EAAOyG,cAG3C,CACI7Q,MAAO,2BACP4K,UAAW,cACXnM,IAAK,eAET,CACIuB,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OACI,6BACI,eAAC,KAAD,CAAQvD,KAAK,OAAO2C,QAAS,kBAjF7B/C,EAiF8CmL,EAAOnL,GAhFrE6O,EAAU7O,QACV2O,GAAe,GAFA,IAAC3O,GAiFA,+BAOpB,OACI,uCACI,eAACsJ,GAAD,CACIC,IAAKA,EACLE,QAASA,EACTD,MAAO,eAACG,GAAD,CACHC,QAASA,EACTlC,SAxGU,SAACoG,EAA6BC,EAAcC,GAClEvB,EAAcqB,IAwGF/D,WAAYmC,EACZpC,WAAYA,EACZE,WAAY,CACR0I,kBAAmB,SAACvH,GAAD,OAAa,eAACiH,GAAD,CAAajH,OAAQA,UAIjE,eAAC8C,GAAD,CACIlN,MAAO6N,EAAS,2BAAS,2BACzBT,QAASO,EACTR,QAASY,EACTV,QAAS,eAAC,GAAD,CAAUpO,GAAI4O,EAAQV,QAASY,EAAaX,QAASO,aC5I/D,SAASiE,GAAT,GAAyD,IAA9B3S,EAA6B,EAA7BA,GAAIkO,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,QAAgB,EAC/CnB,KAAKC,UAAjBC,EAD2D,oBAEnE/C,qBAAU,WACNoE,MACD,CAACJ,IAEJ,IAAMI,EAAW,WACTvO,EASJpC,EAAM2C,MAAMC,EAAyB,CAAER,MAAM,CAACvC,OAAQ,QAAQkC,MAAM,SAAAc,GAC7DA,EAAEC,QACDwM,EAAQsB,eAAe/N,EAAEhC,MAEzBuF,IAAQ3F,MAAMoC,EAAEwD,QAZpBiJ,EAAQsB,eAAe,CACnBxO,GAAI,GACJC,KAAM,GACNe,KAAM,MA6BlB,OACI,uCACI,gBAAC,KAAD,CAAMwM,KAAMN,EAAS/F,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,IAA7D,UACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAD,MAEJ,eAAC,KAAK9B,KAAN,CAAWqG,MAAM,eAAKlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAhD,SACI,eAAC0C,GAAD,SAGR,eAAC,KAAD,CAAQlH,KAAK,UAAU2C,QAzBd,WACbmK,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GAC1BpJ,EAAM2C,MAAMC,EAAZ,2BAAwCwG,GAAxC,IAA6ChH,QAAML,MAAM,SAAAc,GAClDA,EAAEC,SACDwN,IACAlK,IAAQtD,QAAQD,EAAEwD,MAElBD,IAAQ3F,MAAMoC,EAAEwD,WAGzBpE,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OAc9B,6BCoEG6B,mBAAO,YAAPA,CAAoBC,aAxHnC,SAA0B8C,GAAY,IAAD,EACbsI,KAAKC,UAAjBC,EADyB,sBAEK3J,oBAAS,GAFd,mBAE1BmL,EAF0B,KAEbC,EAFa,OAGLpL,mBAAS,IAHJ,mBAG1BqL,EAH0B,KAGlBC,EAHkB,QAIXnK,EAAd7C,UACmDoK,GAAY,CACnEvN,IAAK8B,EACL5B,QAAS,CAAEnB,OAAQ,UAFjByO,EAL2B,EAK3BA,SAAUpC,EALiB,EAKjBA,WAAY6C,EALK,EAKLA,YAAaF,EALR,EAKQA,cAKnCU,EAAU,WAA4B,IAA3BC,EAA0B,wDACjCpG,EAAMkG,EAAQG,iBACjBD,IACCpG,EAAIoF,QAAU,GAElBO,EAAY3F,IAsBV8H,EAAc,WAChBH,GAAe,GACfxB,KAGE5D,EACF,eAAC,KAAD,CAAMiE,KAAMN,EAAZ,SACI,eAAC,KAAD,CAAKO,OAAQ,CAAC,EAAG,IAAjB,SACI,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAA7B,SACI,eAAC,KAAD,YAOdwJ,EACF,uCACI,eAAC,KAAD,CAAQ1G,QAAS,kBAAMoK,KAAvB,0BACA,eAAC,KAAD,CAAQpK,QAvCK,SAACjD,GAClBoN,EAAQQ,cACRP,GAAQ,IAqCJ,0BACA,eAAC,KAAD,CAAQpK,QA/BE,WACd8L,EAAU,IACVF,GAAe,IA6BX,6BAIF/E,EAAU,CACZ,CACI7I,MAAO,eACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,eACP4K,UAAW,OACXnM,IAAK,OACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOwH,EAAOnK,KACV,sBAAKqD,IAAK7D,EAAgB2K,EAAOnK,KAAMgI,MAAO,CAAC4E,SAAU,OAAQ3C,OAAQ,UACzE,MAGZ,CACIlK,MAAO,2BACP4K,UAAW,cACXnM,IAAK,eAET,CACIuB,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OACI,6BACI,eAAC,KAAD,CAAQvD,KAAK,OAAO2C,QAAS,kBA3D7B/C,EA2D8CmL,EAAOnL,GA1DrE6O,EAAU7O,QACV2O,GAAe,GAFA,IAAC3O,GA2DA,+BAOpB,OACI,uCACI,eAACsJ,GAAD,CACIC,IAAKA,EACLE,QAASA,EACTD,MAAO,eAACG,GAAD,CACHC,QAASA,EACTlC,SAlFU,SAACoG,EAA6BC,EAAcC,GAClEvB,EAAcqB,IAkFF/D,WAAYmC,EACZpC,WAAYA,MAGpB,eAACmE,GAAD,CACIlN,MAAO6N,EAAS,2BAAS,2BACzBT,QAASO,EACTR,QAASY,EACTV,QAAS,eAACuE,GAAD,CAAkB3S,GAAI4O,EAAQV,QAASY,EAAaX,QAASO,a,UC/FvE,SAASkE,GAAT,GAA2C,IAAD,EAAjB7D,EAAiB,EAAjBA,QAAiB,EACjC/B,KAAKC,UAAjBC,EAD6C,sBAErB3J,mBAAqB,IAFA,mBAE9CsP,EAF8C,KAEpCC,EAFoC,OAGrBvP,qBAHqB,mBAG9CwP,EAH8C,KAGpCC,EAHoC,OAIvBzP,mBAAS,IAJc,mBAI9C0P,EAJ8C,KAIrCC,EAJqC,OAKrB3P,oBAAS,GALY,mBAK9C4P,EAL8C,KAKpCC,EALoC,OAMrB7P,qBANqB,mBAM9C8P,EAN8C,KAMpCC,EANoC,KAQrDnJ,qBAAU,WACNoJ,EAAY,GAAG5T,MAAM,SAACc,GAClBqS,EAAYrS,QAEjB,IAEH,IAqBM+S,EAAqB,SAArBA,EAAsB3G,EAAkBrN,EAAgB0B,GAC1D,OAAO2L,EAAKpK,KAAI,SAAAgR,GACZ,OAAIA,EAAKjU,MAAQA,EACN,2BACAiU,GADP,IAEIvS,aAGJuS,EAAKvS,SACE,2BACAuS,GADP,IAEIvS,SAAUsS,EAAmBC,EAAKvS,SAAU1B,EAAK0B,KAGlDuS,MA4DTF,EAAc,SAACG,GAGjB,OAAO9V,EAAM2C,MAAMC,EAA4B,CAAEuO,UAAS2E,aAAa,CAAEjW,OAAQ,QAASkC,MAAM,SAAAc,GAC5F,GAAGA,EAAEC,QACD,OAAOD,EAAEoM,KAAKpK,KAAI,SAACI,GAEf,OADAA,EAAKrD,IAAMqD,EAAK7C,GACT6C,SAmDvB,OACI,uCACI,wEAAW,uBAAMmG,MAAO,CAACC,SAAU,QAAxB,mFACX,eAAC,KAAD,CAAQlG,QA5JG,WACXgM,GAKJiE,EAAY,MACZI,GAAY,GACZF,EAAW,KACXI,EAAY,CACRI,UAAW,EACXzT,KAAM,GACN8O,UACAW,MAAO,IAEXxC,EAAQsB,eAAe,CACnBvO,KAAM,MAdN+D,IAAQ3F,MAAM,yCA0Jd,kDACA,eAAC,KAAD,CAAMsV,UAAQ,EAAC/D,SAtHJ,SAACgE,GAChB,OAAO,IAAItV,SAAc,SAACoB,EAASnB,GAC/B,GAAIqV,EAAS1S,SACT,OAAOxB,IAEX6T,EAAYK,EAAS5T,IAAIL,MAAK,SAAAc,GAI1B,OAHAqS,GAAY,SAAAe,GACR,OAAOL,EAAmBK,EAAQD,EAASpU,IAAKiB,MAE7Cf,OACRG,OAAM,SAAAC,GACLvB,WA2GiCsU,SAAUA,EAAUiB,YA7E7C,SAACC,GACjB,IAAM3P,EACF,gBAAC,KAAD,CAAMrB,QAAS,mBA3BI,SAACvD,EAAaiU,GAGrC,OAFAP,EAAW1T,GACXwT,EAAYS,GACLjU,GACH,IAAK,IACD0N,EAAQsB,eAAeiF,GACvBH,EAAYG,GACZL,GAAY,GACZ,MAEJ,IAAK,IACDlG,EAAQsB,eAAe,CACnBvO,KAAM,KAEVqT,EAAY,CACRI,UAAWD,EAAKzT,GAChBC,KAAM,GACN8O,UACAW,MAAO+D,EAAK/D,MAAQ,IAExB0D,GAAY,IAOqBY,CAAtB,EAAGxU,IAA+CuU,IAAjE,UACI,eAAC,KAAKjR,KAAN,wCAAgB,KACK,IAAnBiR,EAASrE,MAAc,KAAO,eAAC,KAAK5M,KAAN,8CAAgB,KAChD,eAAC,KAAKA,KAAN,4EAAgB,QAGxB,OACI,eAAC,KAAD,CAAUsB,QAASA,EAASS,QAAS,CAAC,eAAtC,SACI,gCAAOkP,EAAS9T,YAsEpB,eAAC,KAAD,CAAOc,MAAmB,MAAZkS,EAAkB,uCAAW,uCAAU9E,QAASgF,EAAUpP,KApD/D,WACbmJ,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GAC1B,IAAIiN,EAAQ,2BACLZ,GACArM,GAEPpJ,EAAM2C,MAAMC,EAAwByT,GAAUtU,MAAK,SAAAc,GAC/C,GAAGA,EAAEC,QAAQ,CAIT,GAHA0S,GAAY,GAGG,MAAZH,EAAgB,CACfF,EAAS9S,KAAOQ,EAAEhC,KAAKwB,KACvB,IAAMiU,EAAMrB,EAGZ,OAFAC,EAAY,SACZA,EAAYoB,GAKhB,IAAIC,EAAU1T,EAAEhC,KAEhB,GADA0V,EAAQ3U,IAAM2U,EAAQnU,GAClB+S,EAEE,GAAGA,EAAS7R,SAAS,CACvB6R,EAAS7R,SAAS+B,KAAKkR,GACvB,IAAMD,EAAMrB,EACZC,EAAY,IACZA,EAAYoB,OACX,CACDnB,EAAS7R,SAAW,CAACiT,GACrB,IAAMD,EAAMrB,EACZC,EAAY,IACZA,EAAYoB,QAVZpB,EAAY,GAAD,oBAAKD,GAAL,CAAesB,KAY9BnQ,IAAQtD,QAAQD,EAAEwD,UAElBD,IAAQ3F,MAAMoC,EAAEwD,WAGzBpE,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OAW0DsU,SAAU,kBAAMhB,GAAY,IAApH,SACI,gBAAC,KAAD,CAAM5F,KAAMN,EAAZ,UAEoB,MAAZ+F,EACM,eAAC,KAAKnQ,KAAN,CAAWqG,MAAM,2BAAjB,SACE,eAAC,KAAD,CAAO0E,UAAQ,EAAC7I,MAAK,iBAAE+N,QAAF,IAAEA,OAAF,EAAEA,EAAU9S,YAAZ,QAAoB,aAE3C,KAEV,eAAC,KAAK6C,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAD,CAAOyP,YAAY,yDCxL5B1S,mBAAO,YAAPA,CAAoBC,aAnBnC,YAA8C,IAAD,EACnCmN,EAAO,UAD4B,EAAnBlN,UACI9B,SAASgP,eAAtB,QAAiC,GAE9C,OACI,qCACI,gBAAC,KAAD,WACI,eAAC,KAAD,CAAK3H,KAAM,EAAX,SACI,eAACwL,GAAD,CAAe7D,QAASA,MAE5B,eAAC,KAAD,CAAK3H,KAAM,GAAX,SACI,sBAAKuB,UAAWC,KAAO0L,oBAAvB,SACI,eAAC,GAAD,CAAUtU,GAAI+O,EAASZ,SAAS,iB,UCPzC,SAASoG,GAAT,GAA8I,IAAD,IAAvH/M,gBAAuH,MAA5G,CAAC,OAAQ,QAAS,OAAQ,QAAkF,MAAzExC,aAAyE,MAAjE,GAAiE,EAA7D0C,EAA6D,EAA7DA,SAA6D,IAAnDD,kBAAmD,MAAtC,eAAsC,MAAtB+M,gBAAsB,MAAX,EAAW,IAClHjR,oBAAS,GADyG,mBACjJkR,EADiJ,KACpIC,EADoI,OAEhHnR,mBAA6B,IAFmF,mBAEjJoR,EAFiJ,KAEnIC,EAFmI,KAIlJC,EAA6BC,mBAAQ,WACvC,OAAO9P,EAAMvC,KAAI,SAACtB,EAAcwC,GAAf,MAAkC,CAC/CoR,IAAKpR,EACLjF,IAAK8B,EAAgBW,QAE1B,CAAC6D,IAoDJ,OACI,uCACI,eAAC,KAAD,CAEIgQ,SAAS,eACTlN,SAAU+M,EACVrM,cA7CU,SAACC,GAAe,IAC1BZ,EAASY,EAATZ,MAXS,SAACA,EAAkBC,GAAkC,IAAD,IAC/DC,EAAG,UAAGF,EAAK5H,YAAR,aAAG,EAAW+H,YAAY,KAC7BC,EAAG,UAAGJ,EAAK5H,YAAR,aAAG,EAAW4F,UAAUkC,GAC3BkN,EAAYzN,EAAShF,SAASyF,GAIpC,OAHIgN,GACAjR,IAAQ3F,MAAR,6BAAqBmJ,EAASa,KAAK,KAAnC,kBAEG4M,GAKJrN,CAAaC,IACZjK,EAAM2C,MAAMkH,EAAY,CAAEI,QAAQ,CAAE5I,UAAU,IAAQU,MAAK,SAAAc,GACpDA,EAAEC,UACO,OAARgH,QAAQ,IAARA,KAAQ,uBAAO1C,GAAP,CAAcvE,EAAEU,aAyC5B+T,UAZU,SAACrN,GACnB+M,EAAgB/M,EAAKnJ,KACrBgW,GAAe,IAWPS,SAnCO,SAACtN,GAChB,OAAO,IAAIvJ,SAAQ,SAACoB,EAASnB,GACzB,IAAGsJ,EAAKnJ,IAeJ,OAAOH,IAdP,IAAMoF,EAAQkE,EAAKnJ,IAAIsJ,YAAY,YAC7B7G,EAAO0G,EAAKnJ,IAAImH,UAAUlC,EAAQ,GACxC/F,EAAM2C,MAAM,eAAgB,CAAEY,SAAQxB,MAAK,SAAAc,GACvC,GAAGA,EAAEC,QAAQ,CACT,IAAM0U,EAAMpQ,EAAMc,QAAQ3E,GAI1B,OAHA6D,EAAM8G,OAAOsJ,EAAK,GACV,OAAR1N,QAAQ,IAARA,KAAQ,aAAO1C,IACfhB,IAAQtD,QAAQD,EAAEwD,KACXvE,GAAQ,GAEf,OAAOnB,WAuBf+J,OAAO,UAPX,SAUSuM,EAAmCxR,QAAUmR,EAEtC,qCACI,eAACzL,GAAA,EAAD,CAAcZ,KAAM,OAG1B,OAGd,eAAC,KAAD,CAAOgG,QAASsG,EAAaY,OAAQ,KAAMjB,SAAU,kBAAMM,GAAe,IAA1E,SACI,sBAAKY,IAAI,UAAUtM,MAAO,CAACqF,MAAO,QAAShK,IAAKsQ,SCvFjD,SAASY,GAAT,GAAsD,IAA1BvQ,EAAyB,EAAzBA,MAAO0C,EAAkB,EAAlBA,SAAkB,EAC5BnE,mBAAS,IADmB,mBACzDiS,EADyD,KAC7CC,EAD6C,KAShE,OANAtL,qBAAU,WACNvM,EAAM2C,MAAMC,EAAqB,GAAG,CAAE/C,OAAQ,QAASkC,MAAK,SAAAc,GACrDA,EAAEC,SAAS+U,EAAchV,EAAEoM,WAEnC,IAGC,eAAC,KAAD,CAAQ7H,MAAOA,EAAO0C,SAAUA,EAAU8I,YAAU,EAAC9N,KAAK,WAA1D,SAEQ8S,EAAW/S,KAAI,SAACiT,GAAD,OACX,eAAC,KAAOhF,OAAR,CAAe1L,MAAO0Q,EAAO1V,GAA7B,SACK0V,EAAOzV,MAD0ByV,EAAO1V,SCKlD,SAAS2V,GAAT,GAAsE,IAArC3Q,EAAoC,EAApCA,MAAO0C,EAA6B,EAA7BA,SAC3C3H,EADwE,EAAnB8B,UACrD9B,SADwE,EAElDoP,IAAM5L,SAAS,IAFmC,mBAEzE3E,EAFyE,KAEhEwQ,EAFgE,KAIhFjF,qBAAU,WACNoF,MACD,IAEH,IAAMA,EAAQ,uCAAG,8BAAA1Q,EAAA,sEACG2Q,IADH,OACPC,EADO,OAEPtM,EAASsM,EAAEhN,KAAI,SAACI,GAGlB,OAFAA,EAAK6M,MAAQ,EACb7M,EAAK8M,QAAS,EACP9M,KAEXuM,EAAWjM,GAPE,2CAAH,qDAURyM,EAAQ,uCAAG,WAAOC,GAAP,iBAAAhR,EAAA,6DACPiR,EAAeD,EAAgBA,EAAgBxM,OAAS,IACjDnE,SAAU,EAFV,SAGMsQ,EAAcM,EAAa9P,IAHjC,OAGP6M,EAHO,OAIY,GAAtBiD,EAAaJ,QACZI,EAAa5O,SAAW2L,EAAKpK,KAAI,SAACI,GAG9B,OAFAA,EAAK6M,MAAQI,EAAaJ,MAAQ,EAClC7M,EAAK8M,OAAwB,IAAf9M,EAAK6M,MACZ7M,MAGfiN,EAAa5Q,SAAU,EACvBkQ,EAAW,aAAIxQ,IAZF,2CAAH,sDAeR4Q,EAAa,uCAAG,wCAAA3Q,EAAA,6DAAOmB,EAAP,+BAA6B,EAA7B,kBACXpC,EAAM2C,MAAMC,EAA4B,CAAEuO,QAAShP,EAASgP,QAAS2E,UAAW1T,GAAM,CAAEvC,OAAQ,QAASkC,MAAK,SAAAc,GACjH,GAAGA,EAAEC,QACD,OAAOD,EAAEoM,SAHC,2CAAH,qDAQnB,OACI,+BACI,eAAC,KAAD,CAEI7H,MAAOA,EACPpG,QAASA,EACTqR,WAAY,CAAE9G,MAAO,OAAQnE,MAAO,MACpC0C,SAAUA,EACVkI,SAAU,SAAC5I,GAAD,OAAc4I,EAAS5I,IACjC4O,gBAAc,M,yBCwDfjU,mBAAO,YAAPA,CAAoBC,aArGnC,YAAoD,IAAhC5B,EAA+B,EAA/BA,GAAIkO,EAA2B,EAA3BA,QAASrM,EAAkB,EAAlBA,UAAkB,EAC3BmL,KAAKC,UAAjBC,EADuC,oBAG/C/C,qBAAU,WACNoE,MACD,CAACvO,IAEJ,IAQMuO,EAAW,WACb,IAAIvO,EAAI,CACJ,IAAIwN,EAAa,CACbxN,GAAI,GACJC,KAAM,GACN4V,aAAc,GACdC,UAAW,GACX9E,KAAM,GACN+E,SAAU,GACVC,SAAU,IAId,OAFAxI,EAAKuI,SAAW,CAlBb,CACHE,MAAO,GACPC,SAAU,GACVjW,KAAM,UAgBNiN,EAAQsB,eAAehB,GAI3B5P,EAAM2C,MAAMC,EAAkB,CAAER,MAAM,CAACvC,OAAQ,QAAQkC,MAAM,SAAAc,GACtDA,EAAEC,QACDwM,EAAQsB,eAAe/N,EAAEG,MAEzBoD,IAAQ3F,MAAMoC,EAAEwD,SAoB5B,OACI,uCACI,gBAAC,KAAD,CAAMuJ,KAAMN,EAASjN,KAAK,WAAWkH,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,IAA7E,UACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAD,MAEJ,eAAC,KAAK9B,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAA7B,SACI,eAAC,KAAD,MAEJ,eAAC,KAAK6C,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,YAAY0E,MAAO,CAACA,GAAMC,YAAvD,SACI,eAAC2Q,GAAD,MAEJ,eAAC,KAAKzS,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,eAAe0E,MAAO,CAACA,GAAMC,YAA1D,SACI,eAAC+Q,GAAD,CAAuB9T,UAAWA,MAEtC,eAAC,KAAKiB,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,WAAW0E,MAAO,CAACA,GAAMC,YAAtD,SACI,eAAC2P,GAAD,MAEJ,eAAC,KAAK4B,KAAN,CAAWlW,KAAK,WAAhB,SACK,SAACmW,EAAD,OAAWC,EAAX,EAAWA,IAAX,EAAgBC,OAAhB,OACG,uCACI,mDAAU,eAAC,KAAD,CAAQvT,QAAS,kBAAMsT,KAAOjW,KAAK,OAAO4I,MAAO,CAAC2E,MAAO,WAAzD,6BACTyI,EAAO3T,KAAI,gBAAGjD,EAAH,EAAGA,IAAKS,EAAR,EAAQA,KAAMsW,EAAd,EAAcA,SAAaC,EAA3B,iDACR,sBAAe7N,UAAWC,KAAO6N,iBAAjC,SACI,gBAAC,IAAD,WACI,eAAC,KAAK3T,KAAN,2BAAe0T,GAAf,IAA0BD,SAAU,CAACA,EAAU,QAASpN,MAAM,eAAKlJ,KAAM,CAACA,EAAM,QAAS0E,MAAO,CAACA,GAAMC,YAAvG,SACI,eAAC,KAAD,OAEJ,eAAC,KAAK9B,KAAN,2BAAe0T,GAAf,IAA0BD,SAAU,CAACA,EAAU,SAAUpN,MAAM,eAAKlJ,KAAM,CAACA,EAAM,SAAU0E,MAAO,CAACA,GAAMC,YAAzG,SACI,eAAC,KAAD,OAEJ,eAAC,KAAK9B,KAAN,2BAAe0T,GAAf,IAA0BD,SAAU,CAACA,EAAU,YAAapN,MAAM,qBAAMlJ,KAAM,CAACA,EAAM,YAAa0E,MAAO,CAACA,GAAMC,YAAhH,SACI,eAAC,KAAD,WATFpF,eAkB9B,eAAC,KAAD,CAAQY,KAAK,UAAU2C,QAxDd,WACbmK,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GAC1BpJ,EAAM2C,MAAMC,EAAZ,2BAAiCwG,GAAjC,IAAsChH,QAAML,MAAM,SAAAc,GAC3CA,EAAEC,SACDwN,IACAlK,IAAQtD,QAAQD,EAAEwD,MAElBD,IAAQ3F,MAAMoC,EAAEwD,WAGzBpE,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OA6C9B,iCCuBG6B,mBAAO,YAAPA,CAAoBC,aA9InC,SAAmB8C,GAAY,IAAD,EACNsI,KAAKC,UAAjBC,EADkB,sBAEY3J,oBAAS,GAFrB,mBAEnBmL,EAFmB,KAENC,EAFM,OAGEpL,mBAAS,IAHX,mBAGnBqL,EAHmB,KAGXC,EAHW,OAIiC5C,GAAY,CACnEvN,IAAK8B,IADH0L,EAJoB,EAIpBA,SAAUpC,EAJU,EAIVA,WAAY6C,EAJF,EAIEA,YAAaF,EAJf,EAIeA,cAInCU,EAAU,WAA4B,IAA3BC,EAA0B,wDACjCpG,EAAMkG,EAAQG,iBACjBD,IACCpG,EAAIoF,QAAU,GAElBO,EAAY3F,IAsBV8H,EAAc,WAChBH,GAAe,GACfxB,KAQE5D,EACF,eAAC,KAAD,CAAMiE,KAAMN,EAAZ,SACI,eAAC,KAAD,CAAKO,OAAQ,CAAC,EAAG,IAAjB,SACI,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACI,eAAC,KAAKtE,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAA7B,SACI,eAAC,KAAD,YAOdwJ,EACF,uCACI,eAAC,KAAD,CAAQ1G,QAAS,kBAAMoK,KAAvB,0BACA,eAAC,KAAD,CAAQpK,QA5CK,SAACjD,GAClBoN,EAAQQ,cACRP,GAAQ,IA0CJ,0BACA,eAAC,KAAD,CAAQpK,QApCE,WACd8L,EAAU,IACVF,GAAe,IAkCX,0BACA,eAAC,KAAD,CAAQ5L,QAtBI,WACH2H,SAASC,cAAc,iBAC/B+L,UAoBD,6BAIF9M,EAAU,CACZ,CACI7I,MAAO,eACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,2BACP4K,UAAW,OACXnM,IAAK,QAET,CACIuB,MAAO,2BACP4K,UAAW,aACXnM,IAAK,aACL6O,MAAO,IACPzC,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOwH,EAAOwL,WAAWlU,KAAI,SAAC0G,GAAD,OACzB,eAAC,KAAD,CAAKwE,MAAOxE,EAAMwE,MAAlB,SAA2BxE,EAAMlJ,YAI7C,CACIc,MAAO,2BACP4K,UAAW,gBACXnM,IAAK,gBACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAChC,OAAOwH,EAAOyL,cAAcnU,KAAI,SAACoU,GAAD,OAAYA,EAAE5W,QAAMoI,KAAK,OAGjE,CACItH,MAAO,2BACP4K,UAAW,cACXnM,IAAK,eAET,CACIuB,MAAO,eACP4K,UAAW,SACXnM,IAAK,SACLoM,OAAQ,SAACC,EAAcV,EAAaxH,GAEhC,OACI,6BACI,eAAC,KAAD,CAAQvD,KAAK,OAAO2C,QAAS,kBA/E7B/C,EA+E8CmL,EAAOnL,GA9ErE6O,EAAU7O,QACV2O,GAAe,GAFA,IAAC3O,GA+EA,+BAOpB,OACI,uCACI,eAACsJ,GAAD,CACIC,IAAKA,EACLE,QAASA,EACTD,MAAO,eAACG,GAAD,CACHC,QAASA,EACTlC,SAtGU,SAACoG,EAA6BC,EAAcC,GAClEvB,EAAcqB,IAsGF/D,WAAYmC,EACZpC,WAAYA,MAGpB,eAACmE,GAAD,CACIlN,MAAO6N,EAAS,2BAAS,2BACzBP,MAAO,IACPF,QAASO,EACTR,QAASY,EACTV,QAAS,eAAC,GAAD,CAAWpO,GAAI4O,EAAQV,QAASY,EAAaX,QAASO,MAEnE,yBAAQzO,KAAK,WAAW+I,MAAO,CAAC8N,QAAS,UACzC,uBAAMC,OAAO,iCAAiCC,OAAO,WAAWhX,GAAG,eAAegJ,MAAO,CAAC8N,QAAS,iB,UC7IhG,SAASG,GAAT,GAAuC,EAAf9V,KAAgB,IAC7CW,EAAUC,cAMhB,OACI,uCACI,eAAC,KAAD,CACImV,OAAO,MACPnW,MAAM,MACNoW,SAAS,0CACTC,MAAO,eAAC,KAAD,CAAQhX,KAAK,UAAU2C,QAV1B,WACZjB,EAAQuV,QAAQ,MASD,wCALf,OCcR,IAAMC,GAAa,SAAChV,GAGhB,OAFAlF,QAAQC,IAAI,oDAAqDiF,GACjElF,QAAQC,IAAI,iDAAkDka,eAE1DjV,EAAMkV,SACA,eAAC,IAAD,CACEC,MAAOnV,EAAMmV,MACbC,OAAQpV,EAAMoV,OACdC,KAAMrV,EAAMqV,KACZC,GAAItV,EAAMkV,WACZ,eAAC,IAAD,CACErW,KAAMmB,EAAMnB,KACZsW,MAAOnV,EAAMmV,MACbC,OAAQpV,EAAMoV,OACd9L,OAAQ,SAAAlH,GAGJ,OAFAtH,QAAQC,IAAI,qCAAsCqH,GAG9CpC,EAAMjC,MACA,eAACwX,GAAD,CAAWC,WAAYpT,EAAOpC,MAAOA,EAAOpB,SAAUoB,EAAMpB,WAC5D,eAACoB,EAAMyV,UAAP,2BAAqBrT,GAArB,IAA4BxD,SAAUoB,EAAMpB,gBAQpE2W,GAAYjW,aAAS,SAAC8C,GAAgB,IAAD,EACnBnB,oBAAS,kBAAM1B,KAA7B2B,EADiC,oBAEjCzD,EAAWyD,EAAUzD,SACrBiY,EAAMC,IAASC,IAAI,OACnBC,EAAazT,EAAMpC,MAAMjC,MAE/B,GAAI2X,EAGC,CACD,IAAMI,EAAarY,EAASM,MAC5B,OAAIN,EAASC,GAIJoY,EAAW5V,SAAS,UAAY4V,EAAW7V,MAAK,SAACM,GAAD,OAAkBsV,EAAW3V,SAASK,OAC3FzF,QAAQC,IAAI,2EAAgBqH,EAAMpC,MAAMnB,MAEpC,eAACuD,EAAMpC,MAAMyV,UAAb,2BAA2BrT,EAAMoT,YAAjC,IAA6C5W,SAAUwD,EAAMxD,aAGzD,eAAC,IAAD,CAAU0W,GAAI,CAAC5U,SAAU,oBATjC5F,QAAQC,IAAI,2EAAgBqH,EAAMpC,MAAMnB,MACxCqC,EAAU6U,sBACH,MANX,OADArU,IAAQ3F,MAAM,sBACN,eAAC,IAAD,CAAUuZ,GAAI,CAAC5U,SAAU,eA4BnCsV,GAAU,CAAC,QAAS,SACpBC,GAAY,CAAC,SAEbC,GAAuB,CACzB,CACIhB,SAAU,WACVG,KAAM,IACNF,OAAO,GAEX,CACItW,KAAM,QACN4W,U3B1FO,YAA6C,IAApB7W,EAAmB,EAAnBA,SACpC,OACI,gBAAC,IAAD,WACI,eAACsD,GAAD,CAAOmE,UAAWC,KAAO6P,YAAaC,aAAW,EAAjD,SACI,eAAC,GAAD,MAEJ,gBAAC,IAAD,CAAQ/P,UAAWC,KAAO+P,aAAc3Y,GAAG,cAA3C,UACI,eAACsE,GAAD,CAAQqE,UAAWC,KAAOgQ,cAA1B,SACI,eAAC,GAAD,MAEJ,eAACnU,GAAD,UACI,eAAC,IAAD,CAAMkE,UAAU,iBAAhB,SACI,eAAC,IAAD,UACKzH,EAASuB,KAAI,SAACH,EAAOgE,GAClB,OACI,eAAC,GAAD,eAAwBhE,GAAPgE,mB2B8E7CpF,SAAU,CACN,CACIsW,SAAU,WACVC,OAAO,EACPE,KAAM,SAEV,CACIxW,KAAM,cACN4W,UAAWc,GACXxY,MAAOkY,IAEX,CACIpX,KAAM,cAEN4W,UAAWe,GACXzY,MAAOkY,IAEX,CACIpX,KAAM,qBACN4W,UAAWgB,GACX1Y,MAAOkY,IAEX,CACIpX,KAAM,iBACN4W,UAAWiB,GACX3Y,MAAOkY,IAEX,CACIpX,KAAM,mBACN4W,UAAWkB,GACX5Y,MAAOiY,IAEX,CACInX,KAAM,cACN4W,UAAWmB,GACX7Y,MAAOiY,IAEX,CACInX,KAAM,mBACN4W,UAAWoB,GACX9Y,MAAOiY,IAEX,CACInX,KAAM,WAEN4W,UAAWqB,GACX/Y,MAAOiY,IAEX,CACId,SAAU,gBACVC,OAAO,EACPE,KAAM,aAIlB,CACIxW,KAAM,SACN4W,UxBpJO,WAAkB,IAAD,EACR/K,KAAKC,UAAjBC,EADoB,oBAEtBpL,EAAUC,cAFY,EAGQwB,oBAAS,GAHjB,mBAGrB8V,EAHqB,KAGTC,EAHS,KAS5BrB,IAAS3B,OAAO,OAEhB,IAAMiD,EAAe,SAACnZ,GAClB8M,EAAQuB,iBAAiB9O,MAAK,SAAAqH,GACd,IAAT5G,EACCoZ,EAAYxS,GAEZyS,EAAezS,MAEpBnH,OAAM,SAAAC,GACL1C,QAAQC,IAAI,iBAAkByC,OAIhC0Z,EAAc,SAAC/a,GACjBb,EAAM2C,MAAMC,EAAiB/B,GAAMkB,MAAM,SAAAc,GAClCA,EAAEC,SACDsD,IAAQtD,QAAQD,EAAEwD,KAClBnC,EAAQuV,QAAQ,UAEhBrT,IAAQ3F,MAAMoC,EAAEwD,SAKtBwV,EAAiB,SAAChb,GACpBb,EAAM2C,MAAMC,EAAoB/B,GAAMkB,MAAM,SAAAc,GACrCA,EAAEC,QACDsD,IAAQtD,QAAQD,EAAEwD,KAElBD,IAAQ3F,MAAMoC,EAAEwD,SAK5B,OACI,sBAAK0E,UAAWC,KAAO8Q,WAAvB,SACI,uBAAK/Q,UAAWC,KAAO+Q,UAAvB,UACI,gBAAC,KAAD,2BAAUzS,IAAV,IAAkBsG,KAAMN,EAAxB,UAEQmM,EAEQ,eAAC,KAAKvW,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAjD,SACI,eAAC,KAAD,CAAOgV,OAAQ,eAACpY,GAAA,EAAD,QAGrB,KAEV,eAAC,KAAKsB,KAAN,CAAWqG,MAAM,qBAAMlJ,KAAK,SAAS0E,MAAO,CAACA,GAAMC,WAAYD,GAAMzE,UAArE,SACI,eAAC,KAAD,CAAO4G,UAAW,GAAI8S,OAAQ,eAACC,GAAA,EAAD,QAElC,eAAC,KAAK/W,KAAN,CAAWqG,MAAM,eAAKlJ,KAAK,WAAW0E,MAAO,CAACA,GAAMC,YAApD,SACI,eAAC,KAAMkV,SAAP,CAAgBF,OAAQ,eAACG,GAAA,EAAD,QAGxBV,EAEQ,eAAC,KAAKvW,KAAN,CAAWqG,MAAM,2BAAOlJ,KAAK,OAAO0E,MAAO,CAACA,GAAMC,YAAlD,SACI,eAAC,KAAMoV,MAAP,CAAapb,QA/D7B,CACZ,CAACuK,MAAO,iCAASnE,MAAO,GACxB,CAACmE,MAAO,iCAASnE,MAAO,IA6DmCiV,WAAW,SAASC,YAAY,YAGrE,SAGd,uBAAKvR,UAAWC,KAAOa,QAAvB,UACK4P,EACM,eAAC,KAAD,CAAQjZ,KAAK,UAAU2C,QAAS,kBAAMwW,EAAa,IAAnD,0BACA,eAAC,KAAD,CAAQnZ,KAAK,UAAU2C,QAAS,kBAAMwW,EAAa,IAAnD,0BAIHF,EACO,eAAC,KAAD,CAAQjZ,KAAK,OAAO2C,QAAS,kBAAMuW,GAAc,IAAjD,8DACA,eAAC,KAAD,CAAQlZ,KAAK,OAAO2C,QAAS,kBAAMuW,GAAc,IAAjD,wEwBoE3B,CACInY,KAAM,IACN4W,UAAWd,KAmBnB,IAAM7U,GAdN,SAAS+X,EAAetN,GACpB,IAAK1J,EAAqB,GAU1B,OATA0J,EAAKtN,SAAQ,SAAAsD,GACT,IAAMO,EAAI,eAAQP,GACfO,EAAKlC,WACJiC,EAASA,EAAOiX,OAAOD,EAAe/W,EAAKlC,WAC3CkC,EAAKlC,SAAWiC,GAEpBA,EAAOF,KAAKJ,MAGTM,EAGOgX,CAAe3B,I,OCvKlB6B,OAdf,WACE,OACI,sBAAK1R,UAAU,MAAf,SACI,eAAC,IAAD,UACI,eAAC,IAAD,UACK6P,GAAO/V,KAAI,SAACH,EAAOgE,GAAR,OACR,eAAC,GAAD,eAAwBhE,GAAPgE,aCGxBgU,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB7a,MAAK,YAAkD,IAA/C8a,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mDCIdxI,KAAO+I,OAAO,MAEdC,IAASnP,OACL,eAAC,IAAD,2BAAcoP,GAAd,aACI,eAAC,KAAD,CAAgBF,OAAQG,KAAxB,SACI,eAAC,GAAD,SAGVvQ,SAASwQ,eAAe,SAM1BZ,M,mBC1BAvd,EAAOC,QAAU,CAAC,aAAe,sBAAsB,oBAAsB,6BAA6B,cAAgB,uBAAuB,oBAAsB,+B,mBCAvKD,EAAOC,QAAU,CAAC,YAAc,qBAAqB,cAAgB,uBAAuB,cAAgB,uBAAuB,iBAAmB,0BAA0B,YAAY,sB","file":"static/js/main.401ab293.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout_left\":\"layout_left--5L9NQ\",\"layout_right\":\"layout_right--1x7Mz\",\"layout_header\":\"layout_header--1MDN0\",\"filter_actions\":\"filter_actions--dWtPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_page\":\"Login_login_page__1m0Rz\",\"container\":\"Login_container__Jlh7V\",\"actions\":\"Login_actions__2FzwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sku_item_wrapper\":\"sku_item_wrapper--1uiwj\"};","import axios, {AxiosRequestConfig} from 'axios'\r\n\r\nconst baseURL = process.env.REACT_APP_ENV === 'dev' ? '/api' : process.env.REACT_APP_BASE_URL\r\n\r\nconsole.log('==============', baseURL)\r\n\r\nconst DEFAULT_CONFIG: AxiosRequestConfig = {\r\n    baseURL: baseURL,\r\n    timeout: 45000,\r\n    withCredentials: true,\r\n    method: 'post',\r\n    headers: {\r\n        mobile_login_token: '3333333333'\r\n    }\r\n}\r\n\r\nclass Http {\r\n    api = axios.create()\r\n\r\n    constructor() {\r\n        // 请求拦截配置\r\n        this.api.interceptors.request.use(config => {\r\n            // console.log(`请求拦截配置-->`, config)\r\n            return config // 需要返回\r\n        }, error => {\r\n            console.log(`请求拦截出错--> `, error)\r\n            return Promise.reject(error)\r\n        })\r\n\r\n        // 响应拦截配置\r\n        this.api.interceptors.response.use(response => {\r\n            // console.table(`响应拦截-->`, response.data)\r\n            // if(response.data.code == 900 && router.currentRoute.value.path != '/login'){\r\n            //     router.push({\r\n            //         path: '/login',\r\n            //         query: {\r\n            //             from: router.currentRoute.value.fullPath\r\n            //         }\r\n            //     })\r\n            // }\r\n            return response.data\r\n        }, error => {\r\n            console.log(`响应拦截出错-->`, error)\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n\r\n    async fetch(url: string, params?: FetchParams, options?: RequestOptions): Promise<any> {\r\n        const op = Object.assign({}, DEFAULT_CONFIG, options)\r\n        const {formData, loading, method} = op\r\n        const reqConfig = {...DEFAULT_CONFIG, url, method}\r\n        if (method === 'get') {\r\n            reqConfig.method = method\r\n            reqConfig.params = params\r\n        } else if (formData) {\r\n            const formData = new FormData()\r\n            const par = params ?? {}\r\n            Object.keys(par).forEach(key => {\r\n                formData.append(key, par[key])\r\n            })\r\n            reqConfig.data = formData\r\n        } else {\r\n            reqConfig.data = params\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            this.api.request(reqConfig).then(res => {\r\n                return resolve(res)\r\n            }).catch(e => {\r\n                return reject(e)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst $http = new Http()\r\n\r\nexport default $http\r\n\r\ndeclare global {\r\n    /*\r\n    * 网络请求参数\r\n    * */\r\n    interface FetchParams {\r\n        [prop: string]: any,\r\n    }\r\n\r\n    /**\r\n     * 网络请求返回值\r\n     */\r\n    interface RequestRes {\r\n        /** 状态码,成功返回 200 */\r\n        code: number\r\n        /** 错误消息 */\r\n        message: string\r\n        /** 返回数据 */\r\n        result: any\r\n\r\n        // [prop: string]: any,\r\n    }\r\n\r\n    /*\r\n    * 请求选项\r\n    * */\r\n    interface RequestOptions extends AxiosRequestConfig {\r\n        baseUrl?: string\r\n        // 是否使用formData\r\n        formData?: boolean\r\n        timeOut?: number\r\n        // 是否显示loading\r\n        loading?: boolean\r\n    }\r\n}\r\n","export default {\r\n    IMG_HOST: process.env.REACT_APP_PIC_BASE,\r\n    adminRegister: '/admin/register',\r\n    adminList: '/admin/list',\r\n    adminLogin: '/admin/login',\r\n    adminLogout: '/admin/logout',\r\n    adminInfo: '/admin/user_info',\r\n    adminUpdateAvatar: '/admin/update_avatar',\r\n    adminChangeState: '/admin/change_state',\r\n    saveUser: '/user/save',\r\n    listUser: '/user/list',\r\n    userLabelList: '/user/label_list',\r\n    userLabelSave: '/user/label_save',\r\n    upload: '/upload',\r\n    shopCategoryList: '/shop/category_list',\r\n    shopCategorySave: '/shop/category_save',\r\n    shopCategoryDetail: '/shop/category_detail',\r\n    shopList: '/shop/list',\r\n    shopSave: '/shop/save',\r\n    shopDetail: '/shop/detail',\r\n    goodsCategorySave: '/goods/category_save',\r\n    goodsCategoryChildren: '/goods/category_children',\r\n    goodsSave: '/goods/save',\r\n    goodsDetail: '/goods/detail',\r\n    goodsList: '/goods/list',\r\n    goodsLabelList: '/goods/label_list',\r\n    goodsLabelDetail: '/goods/label_detail',\r\n    goodsLabelSave: '/goods/label_save',\r\n    addressChildren: '/address/query_children',\r\n    homeConfigList: '/mall/home_config_list',\r\n    homeConfigSave: '/mall/home_config_save',\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx'\r\nimport $http from '../http'\r\nimport urls from '../http/urls'\r\n\r\ninterface User{\r\n    id: string,\r\n    name: string,\r\n    mobile: string,\r\n    password: string,\r\n    type: number,\r\n    roles: string[]\r\n}\r\n\r\nclass UserStore{\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    userInfo: User = {\r\n        id: '',\r\n        name: '',\r\n        mobile: '',\r\n        password: '',\r\n        type: 1,\r\n        roles: []\r\n    }\r\n\r\n    async updateUser() {\r\n        return $http.fetch(urls.adminInfo).then(r => {\r\n            if(r.success){\r\n                runInAction(() => {\r\n                    this.userInfo = r.info\r\n                })\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    async checkAndGetUserInfo(){\r\n        if(!this.userInfo.id){\r\n            return this.updateUser()\r\n        }else{\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\nexport default new UserStore()\r\n","import { PaperClipOutlined, TeamOutlined, TagOutlined, UserOutlined, ShopOutlined, PartitionOutlined } from '@ant-design/icons'\r\n\r\nconst menus = [\r\n    {\r\n        key: 13,\r\n        title: '商城配置',\r\n        icon: TeamOutlined,\r\n        children: [\r\n            {\r\n                key: 14,\r\n                title: '首页配置',\r\n                icon: TeamOutlined,\r\n                path: '/homeConfig'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key: 15,\r\n        title: '数据管理',\r\n        icon: PaperClipOutlined,\r\n        children: [\r\n            {\r\n                key: 12,\r\n                title: '管理员列表',\r\n                icon: TeamOutlined,\r\n                path: '/home/admin'\r\n            },\r\n            // {\r\n            //     key: 1,\r\n            //     title: '用户数据',\r\n            //     icon: TeamOutlined,\r\n            //     children: [\r\n            //         {\r\n            //             key: 2,\r\n            //             title: '用户管理',\r\n            //             icon: TeamOutlined,\r\n            //             path: '/user'\r\n            //         },\r\n            //         {\r\n            //             key: 3,\r\n            //             title: '用户标签',\r\n            //             icon: TagOutlined,\r\n            //             path: '/userLabel'\r\n            //         },\r\n            //     ]\r\n            // },\r\n            {\r\n                key: 5,\r\n                title: '店铺数据',\r\n                icon: ShopOutlined,\r\n                children: [\r\n                    {\r\n                        key: 6,\r\n                        title: '店铺列表',\r\n                        icon: ShopOutlined,\r\n                        path: '/home/shopList',\r\n                    },\r\n                    {\r\n                        key: 8,\r\n                        title: '店铺管理',\r\n                        icon: ShopOutlined,\r\n                        path: '/home/shopDetail',\r\n                    },\r\n                    {\r\n                        key: 7,\r\n                        title: '店铺分类',\r\n                        icon: PartitionOutlined,\r\n                        path: '/home/shopCategory',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                key: 9,\r\n                title: '商品数据',\r\n                icon: TeamOutlined,\r\n                children: [\r\n                    {\r\n                        key: 10,\r\n                        title: '商品管理',\r\n                        icon: TeamOutlined,\r\n                        path: '/home/goods'\r\n                    },\r\n                    {\r\n                        key: 11,\r\n                        title: '商品标签',\r\n                        icon: TagOutlined,\r\n                        path: '/home/goodsLabel'\r\n                    },\r\n                ]\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: 4,\r\n        title: '个人信息',\r\n        icon: UserOutlined,\r\n        path: '/home/me'\r\n    },\r\n]\r\n\r\nexport default menus\r\n","import { Menu } from 'antd'\r\nimport menus from '../menus'\r\nimport React from 'react'\r\nimport { inject, observer } from \"mobx-react\"\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport { routeList } from '@/router'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nfunction LayoutMenu({ UserStore }: any) {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    const userRoles = UserStore.userInfo.roles\r\n\r\n    const accessRoutes = routeList.filter((route) => {\r\n        return route.roles && route.roles.some( (r: any) => userRoles.includes(r) )\r\n    }).map( r => r.path)\r\n\r\n    const filterMenus = (menus: Array<any>) => {\r\n        let result: any[] = []\r\n        menus.forEach(item => {\r\n            const temp = { ...item }\r\n            if(item.children){\r\n                let children = filterMenus(item.children)\r\n                temp.children = children\r\n            }\r\n            if(accessRoutes.includes(temp.path) || (temp.children && temp.children.length)) result.push(temp)\r\n        })\r\n        return result\r\n    }\r\n\r\n    function getMenuItem(children: Array<any>): React.ReactNode {\r\n\r\n        let onClickMenuItem = (path: string) => {\r\n            if(location.pathname !== path){\r\n                history.push(path)\r\n            }\r\n        }\r\n\r\n        return children.map(item => {\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu key={item.key} title={item.title} icon={<item.icon/>}>\r\n                        {getMenuItem(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }else{\r\n                return (\r\n                    <Menu.Item key={item.key} icon={<item.icon/>} onClick={() => onClickMenuItem(item.path)}> {item.title} </Menu.Item>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Menu mode=\"inline\" theme=\"dark\">\r\n            {getMenuItem(filterMenus(menus))}\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(LayoutMenu))\r\n","import React, {useState} from 'react'\r\nimport { Dropdown, Avatar, Menu, Modal, message } from 'antd'\r\nimport { LogoutOutlined, UserOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport urls from \"../../../http/urls\"\r\nimport {observer} from \"mobx-react\"\r\nimport { UserStore } from '../../../store'\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport $http from \"../../../http\"\r\n\r\nconst LayoutHeader = observer(() => {\r\n    let [ userStore ] = useState(() => UserStore) as any\r\n    const path = urls.IMG_HOST + userStore.userInfo.avatar\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const handleClickMenu = (index: number) => {\r\n        switch (index){\r\n            case 1:\r\n                if(location.pathname !== '/home/me'){\r\n                    history.push('/home/me')\r\n                }\r\n                break\r\n            case 2:\r\n                Modal.confirm({\r\n                    title: '确认退出？',\r\n                    icon: <ExclamationCircleOutlined />,\r\n                    onOk(){\r\n                        $http.fetch(urls.adminLogout).then(r => {\r\n                            if(r.success){\r\n                                history.push('/login')\r\n                            }\r\n                            message.success(r.msg)\r\n                        })\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    const DropMenu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined/>} onClick={() => handleClickMenu(1)}>\r\n                个人信息\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<LogoutOutlined/>} onClick={() => handleClickMenu(2)}>\r\n                退出登录\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div></div>\r\n            <Dropdown overlay={DropMenu}>\r\n                <Avatar src={path}/>\r\n            </Dropdown>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default LayoutHeader\r\n","import { Layout, Card } from 'antd'\r\nimport { RouterView } from \"../../router\"\r\nimport { Switch } from \"react-router-dom\"\r\nimport React from \"react\"\r\nimport styles from './layout.module.less'\r\nimport LayoutMenu from './components/_menu'\r\nimport LayoutHeader from \"./components/_header\"\r\n\r\nconst { Header, Sider, Content } = Layout\r\n\r\ninterface Props{\r\n    children: Array<any>\r\n}\r\nexport default function ContentLayout({ children }: Props) {\r\n    return (\r\n        <Layout>\r\n            <Sider className={styles.layout_left} collapsible>\r\n                <LayoutMenu/>\r\n            </Sider>\r\n            <Layout className={styles.layout_right} id=\"layoutRight\">\r\n                <Header className={styles.layout_header}>\r\n                    <LayoutHeader/>\r\n                </Header>\r\n                <Content>\r\n                    <Card className=\"page_container\">\r\n                        <Switch>\r\n                            {children.map((route, i) => {\r\n                                return (\r\n                                    <RouterView key={i} {...route}/>\r\n                                )\r\n                            })}\r\n\r\n                        </Switch>\r\n                    </Card>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","import { observer, inject } from 'mobx-react'\r\n\r\nfunction About(props: any) {\r\n    return (\r\n        <h3>about232323{props.UserStore.userInfo.name}</h3>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(About))\r\n","//规则\r\n\r\nconst rules = {\r\n    //必填\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    required(trigger?: string){\r\n        return {\r\n            required: true,\r\n            validator: (rule: any, value: any) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (!rule.required) {\r\n                        j();\r\n                    }\r\n                    if (typeof (value) == \"undefined\" || value == null) {\r\n                        j(new Error('不能为空'))\r\n                    }else{\r\n                        if (value instanceof Array) {\r\n                            //数组，判断是否有值\r\n                            if (value.length == 0) {\r\n                                j(new Error('不能为空'))\r\n                            }\r\n                        } else if (typeof (value) == \"string\") {\r\n                            //字符串，判断是否有值\r\n                            if (value.length == 0) {\r\n                                j(new Error('不能为空'))\r\n                            }\r\n                        }\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //长度显示\r\n    //min：最小长度\r\n    //max：最大长度\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    limit(min: number, max: number, trigger?: string){\r\n        if (typeof (min) == 'undefined' || !min) {\r\n            min = 0;\r\n        }\r\n        if (typeof (max) == 'undefined' || !max) {\r\n            max = 0;\r\n        }\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"change\";\r\n        }\r\n        return {\r\n            min: min,\r\n            max: max,\r\n            message: `仅限输入${min}-${max}个字符`,\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //电子邮箱\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    email(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            message: '邮箱格式错误',\r\n            type: 'email',\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //固定话和手机号码校验\r\n    //trigger：触发校验的事件，blur 或者 change，默认为blur\r\n    phone(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value) {\r\n                        let mobileReg = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\r\n                        if (!mobileReg.test(value.trim())) {\r\n                            let tel = value.toString()\r\n                            if (tel.substring(0, 1) == \"1\") {\r\n                                //说明不是手机号码，可能是固话\r\n                                j(new Error('是手机电话，请输入正确的手机号'))\r\n                            } else if (tel.substring(0, 1) != \"0\") {\r\n                                //先检查前面3位或4位是否区号\r\n                                j(new Error('是固话电话，请输入正确的区号'))\r\n                            } else {\r\n                                if (value.indexOf(\"-\") == -1) {\r\n                                    j(new Error('请在区号后加上\"-\"'))\r\n                                } else {\r\n                                    let telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\r\n                                    if (!telephoneReg.test(value.trim())) {\r\n                                        j(new Error('请输入正确的固定电话'))\r\n                                    } else {\r\n                                        r();\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //说明是手机号码\r\n                            if (value) {\r\n                                let mobileReg = /^0{0,1}(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\r\n                                if (!mobileReg.test(value.trim())) {\r\n                                    j(new Error('请输入正确的手机号'))\r\n                                } else {\r\n                                    r();\r\n                                }\r\n                            } else {\r\n                                r();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 手机号码校验\r\n    mobile(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value) {\r\n                        let mobileReg = /^(1[3-9][0-9])[0-9]{8}$/;\r\n                        if (!mobileReg.test(value.trim())) {\r\n                            j(new Error('请输入正确的手机号'))\r\n                        } else {\r\n                            r();\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 固定话校验\r\n    telephone(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string, callback: Function) => {\r\n                if (value) {\r\n                    //先检查前面3位或4位是否区号\r\n                    let tel = value.toString()\r\n                    if (tel.substring(0, 1) != \"0\") {\r\n                        callback(new Error('请输入正确的区号'))\r\n                    } else {\r\n                        if (value.indexOf(\"-\") == -1) {\r\n                            callback(new Error('请在区号后加上\"-\"'))\r\n                        } else {\r\n                            let telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\r\n                            if (!telephoneReg.test(value.trim())) {\r\n                                callback(new Error('请输入正确的固定电话'))\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 邮编校验\r\n    postCode(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string, callback: Function) => {\r\n                if (value) {\r\n                    let maxLength = 6;\r\n                    let postCodeReg = /^[1-9]\\d{5}(?!\\d)$/;\r\n                    if (maxLength != value.trim().length && !postCodeReg.test(value.trim())) {\r\n                        callback(new Error('请输入正确的邮政编码'))\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 身份证号校验\r\n    idCard(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    //15位和18位身份证号码的正则表达式\r\n                    var idCardReg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/;\r\n                    //如果通过该验证，说明身份证格式正确，但准确性还需计算\r\n                    if (idCardReg.test(value)) {\r\n                        if (value.length == 18) {\r\n                            let idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); //将前17位加权因子保存在数组里\r\n                            let idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2); //这是除以11后，可能产生的11位余数、验证码，也保存成数组\r\n                            let idCardWiSum = 0; //用来保存前17位各自乖以加权因子后的总和\r\n                            for (var i = 0; i < 17; i++) {\r\n                                idCardWiSum += value.substring(i, i + 1) * idCardWi[i];\r\n                            }\r\n                            var idCardMod = idCardWiSum % 11; //计算出校验码所在数组的位置\r\n                            var idCardLast = value.substring(17); //得到最后一位身份证号码\r\n                            //如果等于2，则说明校验码是10，身份证号码最后一位应该是X\r\n                            if (idCardMod == 2) {\r\n                                if (idCardLast == \"X\" || idCardLast == \"x\") {\r\n                                    callback();\r\n                                } else {\r\n                                    callback(\"身份证号码不正确\");\r\n                                }\r\n                            } else {\r\n                                //用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\r\n                                if (idCardLast == idCardY[idCardMod]) {\r\n                                    callback();\r\n                                } else {\r\n                                    callback(\"身份证号码不正确\");\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        callback(\"身份证号码不正确\");\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 数值范围\r\n    range(min: number | Function, max: number | Function, trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: number) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value + \"\") {\r\n                        let min2 = null;\r\n                        let max2 = null;\r\n                        if (typeof(min) ==\"undefined\") {\r\n                            min2 = null\r\n                        }else if(typeof(min) ==\"function\"){\r\n                            min2 = min();\r\n                        }else if(min < 0 || isNaN(min)){\r\n                            min2 = null\r\n                        }else {\r\n                            min2 = min\r\n                        }\r\n                        if (typeof(max) ==\"undefined\") {\r\n                            max2 = null\r\n                        }else if(typeof(max) ==\"function\"){\r\n                            max2 = max();\r\n                        }else if(max < 0 || isNaN(max)){\r\n                            max2 = null\r\n                        }else {\r\n                            max2 = max\r\n                        }\r\n                        if (isNaN(value * 1)) {\r\n                            j(new Error('必须为数字'));\r\n                        } else {\r\n                            if (min2!=null && value * 1 < min2 * 1) {\r\n                                j(new Error('必须大于等于'+min2));\r\n                            }else if (max2!=null && value * 1 > max2 * 1) {\r\n                                j(new Error('必须小于等于'+ max2));\r\n                            }else{\r\n                                r()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //数字精度长度校验\r\n    //maxLength：最大长度\r\n    //precision：是精度,可以是数字，或者函数\r\n    precision(precision: number | Function, maxLength: number, trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    if (isNaN(value)) {\r\n                        callback(new Error('必须为数字'));\r\n                    } else {\r\n                        //若是数字，则进行进度校验\r\n                        let precision2 = 2;\r\n                        if (typeof(precision) ==\"undefined\") {\r\n                            precision2 = 2//默认是2位小数\r\n                        }else if(typeof(precision) ==\"function\"){\r\n                            precision2 = precision();\r\n                        }else if(precision < 0 || isNaN(precision)){\r\n                            precision2 = 2//默认是2位小数\r\n                        }else {\r\n                            precision2 = precision\r\n                        }\r\n                        let val = value.toString();\r\n                        if (val.indexOf(\".\") != -1) {\r\n                            if (precision2 == 0) {\r\n                                callback(new Error('只能为整数'));\r\n                            } else {\r\n                                let length = (val.substring(val.indexOf(\".\") + 1, val.length)).length * 1//获取小数点后面的精度\r\n                                if (length > precision2) {\r\n                                    callback(new Error('小数位后只能保留' + precision2 + '位'));\r\n                                } else {\r\n                                    callback();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if(val.length > maxLength){\r\n                                callback(new Error('只能'+maxLength+'位数'));\r\n                            }else{\r\n                                callback();\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 限制不输入中文校验，且长度大于3位\r\n    notChinese(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    var chineseReg =/[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\r\n                    if (chineseReg.test(value)) {\r\n                        callback(\"字符不能为中文\");\r\n                    } else {\r\n                        if (value.length > 3 && value.length < 20) {\r\n                            callback();\r\n                        }else{\r\n                            callback(\"长度在 4 到 20个字符\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n\r\n            },\r\n            trigger: trigger\r\n        }\r\n    }\r\n}\r\n\r\nexport default rules\r\n","import { Form, Button, Input, Radio, message } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport rules from '../../config/rules'\r\nimport { UserOutlined, PhoneOutlined, LockOutlined } from '@ant-design/icons'\r\nimport styles from './Login.module.css'\r\nimport $http from '../../http'\r\nimport urls from '@/http/urls'\r\nimport jsCookie from \"js-cookie\"\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n}\r\n\r\nexport default function Login() {\r\n    const [ formRef ] = Form.useForm()\r\n    const history = useHistory()\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const options = [\r\n        {label: '超级管理员', value: 1},\r\n        {label: '店铺管理员', value: 2},\r\n    ]\r\n\r\n    jsCookie.remove('SID') // 清空登录信息\r\n\r\n    const validateForm = (type: number) => {\r\n        formRef.validateFields().then(val => {\r\n            if(type === 2){\r\n                handleLogin(val)\r\n            }else{\r\n                handleRegister(val)\r\n            }\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    const handleLogin = (data: any) => {\r\n        $http.fetch(urls.adminLogin, data).then( r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n                history.replace('/home')\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRegister = (data: any) => {\r\n        $http.fetch(urls.adminRegister, data).then( r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login_page}>\r\n            <div className={styles.container}>\r\n                <Form {...layout} form={formRef}>\r\n                    {\r\n                        isRegister\r\n                            ? (\r\n                                <Form.Item label=\"用户名\" name=\"name\" rules={[rules.required()]}>\r\n                                    <Input prefix={<UserOutlined/>}/>\r\n                                </Form.Item>\r\n                            )\r\n                            : null\r\n                    }\r\n                    <Form.Item label=\"手机号\" name=\"mobile\" rules={[rules.required(), rules.mobile()]}>\r\n                        <Input maxLength={11} prefix={<PhoneOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"密码\" name=\"password\" rules={[rules.required()]}>\r\n                        <Input.Password prefix={<LockOutlined/>}/>\r\n                    </Form.Item>\r\n                    {\r\n                        isRegister\r\n                            ? (\r\n                                <Form.Item label=\"账户类型\" name=\"type\" rules={[rules.required()]}>\r\n                                    <Radio.Group options={options} optionType=\"button\" buttonStyle=\"solid\"/>\r\n                                </Form.Item>\r\n                            )\r\n                            : null\r\n                    }\r\n                </Form>\r\n                <div className={styles.actions}>\r\n                    {isRegister\r\n                        ? (<Button type=\"primary\" onClick={() => validateForm(1)}>注册</Button>)\r\n                        : (<Button type=\"primary\" onClick={() => validateForm(2)}>登录</Button>)\r\n                    }\r\n\r\n                    {\r\n                        isRegister\r\n                            ? (<Button type=\"link\" onClick={() => setIsRegister(false)}>已有账号？去登录</Button>)\r\n                            : (<Button type=\"link\" onClick={() => setIsRegister(true)}>没有账号？去注册</Button>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Upload, message, Tooltip } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { RcFile } from 'antd/es/upload/interface'\r\nimport $http from \"../../http\"\r\nimport urls from \"../../http/urls\"\r\nimport styles from '../components.module.less'\r\n\r\ntype FileItem = RcFile\r\n\r\ninterface Props {\r\n    typeList?: string[]\r\n    uploadPath?: string\r\n    value?: string\r\n    maxSize?: number // M\r\n    onChange?: (value: string) => void\r\n}\r\n\r\nexport default function CustomUpload(props: Props){\r\n\r\n    let {\r\n        value = '',\r\n        maxSize = 10,\r\n        typeList = ['.jpg', '.jpeg', '.png', '.gif'],\r\n        uploadPath = '/file/upload',\r\n        onChange\r\n    } = props\r\n\r\n    const imgFullPath = urls.IMG_HOST + value\r\n\r\n    const beforeUpload = (file: FileItem, fileList?: Array<FileItem>) => {\r\n        const ldx = file.name?.lastIndexOf('.')\r\n        const ext = file.name?.substring(ldx as number)\r\n        const isLimit = file.size / 1024 / 1024 > maxSize\r\n        const isAllow = typeList.includes(ext as string)\r\n        if(!isAllow){\r\n            message.error(`仅允许 ${typeList.join('/')} 格式`)\r\n        }\r\n        if (isLimit) {\r\n            message.error(`最大不能超过 ${maxSize}M`)\r\n        }\r\n        return isAllow && !isLimit\r\n    }\r\n\r\n    const customRequest = (prop: any) => {\r\n        const { file } = prop\r\n        if(beforeUpload(file)){\r\n            $http.fetch(uploadPath, { file, lastFilePath: value }, { formData: true }).then(r => {\r\n                if(r.success){\r\n                    onChange?.(r.path)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            beforeUpload={beforeUpload}\r\n            customRequest={customRequest}\r\n        >\r\n            {\r\n                value\r\n                    ? <Tooltip title=\"点击修改\">\r\n                        <img src={imgFullPath} className={styles.img_preview} />\r\n                    </Tooltip>\r\n                    : <div className={`${styles.upload_action} upload_action`}>\r\n                        <PlusOutlined style={{fontSize: '36px'}} />\r\n                        <p>点击上传</p>\r\n                    </div>\r\n            }\r\n        </Upload>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport { Descriptions } from 'antd'\r\nimport CustomUpload from '@/components/customAnt/upload'\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    UserStore: any\r\n}\r\n\r\nfunction AdminIndex({UserStore}: Props){\r\n    const { userInfo } = UserStore\r\n\r\n    const onAvatarChange = () => {\r\n        UserStore.updateUser()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Descriptions title=\"个人信息\" bordered>\r\n                <Descriptions.Item label=\"用户名\">{ userInfo.name }</Descriptions.Item>\r\n                <Descriptions.Item label=\"手机号\">{ userInfo.mobile }</Descriptions.Item>\r\n                <Descriptions.Item label=\"密码\">{ userInfo.password }</Descriptions.Item>\r\n                <Descriptions.Item label=\"注册时间\">{ userInfo.create_time }</Descriptions.Item>\r\n                <Descriptions.Item label=\"最后修改时间\">{ userInfo.modify_time }</Descriptions.Item>\r\n                <Descriptions.Item label=\"头像\">\r\n                    <CustomUpload value={userInfo.avatar} onChange={onAvatarChange} uploadPath={urls.adminUpdateAvatar}/>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(AdminIndex))\r\n","import React from 'react'\r\nimport styles from '../layout.module.less'\r\n\r\ninterface Props{\r\n    top: React.ReactNode\r\n    actions: React.ReactNode\r\n    table: React.ReactNode\r\n}\r\n\r\nexport default function LayoutList({top, table, actions}: Props){\r\n    return (\r\n        <div className=\"Layout_list\">\r\n            <div className=\"filter_form\">\r\n                { top }\r\n            </div>\r\n            <div className={styles.filter_actions}>\r\n                { actions }\r\n            </div>\r\n            <div className=\"list_content\">\r\n                { table }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Table} from 'antd'\r\nimport { ColumnProps, TablePaginationConfig } from 'antd/es/table'\r\nimport styles from '../components.module.less'\r\nimport {ExpandableConfig} from \"rc-table/lib/interface\"\r\nimport { debounce } from 'lodash'\r\n\r\ninterface Item{\r\n    [name: string]: any\r\n}\r\n\r\ninterface Props{\r\n    // columns: ColumnsType<Item>\r\n    columns: ColumnProps<Item>[]\r\n    dataSource: Item[]\r\n    rowKey?: string\r\n    pagination?: TablePaginationConfig\r\n    onChange: (page: TablePaginationConfig, filters: any, sorter: any) => void\r\n    expandable?: ExpandableConfig<Item>\r\n}\r\n\r\nexport default function CustomTable({ columns, rowKey = 'id', onChange, pagination, dataSource, expandable }: Props){\r\n\r\n    const [tableScrollHeight, setTableScrollHeight] = useState<number>()\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', adjustTable)\r\n        return () => window.removeEventListener('resize', adjustTable)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        adjustTable()\r\n    }, [dataSource])\r\n\r\n    const modifyColumns = (): ColumnProps<Item>[] => {\r\n        const hasIndex = columns.some((column) => column.key === 'index')\r\n        const hasLastTime = columns.some((column) => column.key === 'modify_time')\r\n        if(!hasIndex){\r\n            columns.unshift({\r\n                title: '#',\r\n                dataIndex: '',\r\n                key: 'index',\r\n                render: (text: string, record: any, index: number) => {\r\n                    return index + 1\r\n                }\r\n            })\r\n        }\r\n        if(!hasLastTime){\r\n            columns.splice(-1, 0, {\r\n                title: '最后修改时间',\r\n                dataIndex: 'modify_time',\r\n                key: 'modify_time'\r\n            })\r\n        }\r\n        return columns\r\n    }\r\n\r\n    const adjustTable = debounce(async () => {\r\n        const rh = document.querySelector('#layoutRight')?.clientHeight as number\r\n        const dh = document.documentElement.clientHeight\r\n        const table = document.querySelector('#pageTable')\r\n        if(table){\r\n            const offset = table.getBoundingClientRect()\r\n            if(rh > dh){\r\n                setTableScrollHeight(offset.height - (rh - dh) - 110)\r\n            }else{\r\n                setTableScrollHeight(rh - offset.top - 150)\r\n            }\r\n        }\r\n    }, 20)\r\n\r\n    return (\r\n        <Table<Item>\r\n            id=\"pageTable\"\r\n            size=\"middle\"\r\n            rowClassName={(record, index) => {\r\n                if(index % 2 === 1) return styles.table_striped\r\n                return ''\r\n            }}\r\n            pagination={pagination}\r\n            onChange={onChange}\r\n            dataSource={ dataSource }\r\n            expandable={expandable}\r\n            scroll={{y: tableScrollHeight}}\r\n            rowKey={rowKey}>\r\n            {\r\n                modifyColumns().map(column => {\r\n                    return (\r\n                        <Table.Column<Item>\r\n                            {...column}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Table>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport $http from \"@/http\"\r\nimport { PaginationProps } from \"antd/es\"\r\n\r\ninterface PageListProps{\r\n    url: string\r\n    params?: FetchParams\r\n    options?: RequestOptions\r\n}\r\n\r\n// 列表查询\r\nfunction usePageList({ url, params, options }: PageListProps){\r\n    let [pageList, setPageList] = useState([])\r\n    let [pagination, setPagination] = useState<PaginationProps>({\r\n        current: 1,\r\n        pageSize: 20,\r\n        total: 0,\r\n        pageSizeOptions: ['3', '5', '10', '20', '30'],\r\n        showSizeChanger: true\r\n    })\r\n\r\n    const getPaginationParams = () => {\r\n        return {\r\n            current: pagination.current,\r\n            pageSize: pagination.pageSize,\r\n        }\r\n    }\r\n\r\n    const getPageList = (p: FetchParams = {}) => {\r\n        $http.fetch(url, {...params, ...getPaginationParams(), ...p}, options).then( r => {\r\n            setPageList(r.list)\r\n            setPagination(preVal => {\r\n                return {\r\n                    ...preVal,\r\n                    total: r.amount\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(getPageList, [pagination.current, pagination.pageSize])\r\n\r\n    // 如果是数组，使用 setPagination 时会报错，具体 https://stackoverflow.com/questions/65657572/custom-useinput-hook-and-typescript-error\r\n    return { pageList, pagination, getPageList, setPagination }\r\n}\r\n\r\nexport { usePageList }\r\n","import React from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag, message } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport $http from \"@/http\"\r\n\r\nfunction AdminList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination } = usePageList({\r\n        url: urls.adminList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        if(init){\r\n            val.current = 1\r\n        }\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleChangeAdminState = (id: number, state: number) => {\r\n        $http.fetch(urls.adminChangeState, { state, id }).then(r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n                onQuery()\r\n                return r\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"用户名\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"手机号\" name=\"mobile\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '手机号',\r\n            dataIndex: 'mobile',\r\n            key: 'mobile'\r\n        },\r\n        {\r\n            title: '权限类型',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (text: string, record: any, index: number) => {\r\n                let r = ''\r\n                switch (record.type) {\r\n                    case 1:\r\n                        r = '超级管理员'\r\n                        break\r\n                    default:\r\n                    case 2:\r\n                        r = '店铺管理员'\r\n                        break\r\n                }\r\n                return r\r\n            }\r\n        },\r\n        {\r\n            title: '用户状态',\r\n            dataIndex: 'state',\r\n            key: 'state',\r\n            render: (text: string, record: any, index: number) => {\r\n                return (\r\n                    <Tag color={record.state === 1 ? \"green\" : 'grey'}>\r\n                        {record.state === 1 ? \"启用\" : '禁用'}\r\n                    </Tag>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '头像',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.avatar ? (\r\n                    <img src={urls.IMG_HOST + record.avatar} style={{maxWidth: '50px', height: '50px'}}/>\r\n                ) : '/';\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n                const disabled = UserStore.userInfo.id === record.id\r\n\r\n                return (\r\n                    <p>\r\n                        {\r\n                            record.state === 1\r\n                                ? <Button type=\"link\" disabled={disabled} onClick={() => handleChangeAdminState(record.id, 2)}>禁用</Button>\r\n                                : <Button type=\"link\" disabled={disabled} onClick={() => handleChangeAdminState(record.id, 1)}>启用</Button>\r\n                        }\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <LayoutList\r\n            top={top}\r\n            actions={actions}\r\n            table={<CustomTable\r\n                columns={columns}\r\n                onChange={handleTableChange}\r\n                dataSource={pageList}\r\n                pagination={pagination}\r\n            />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(AdminList))\r\n","import React from 'react'\r\nimport { Drawer } from 'antd'\r\n\r\ninterface Props{\r\n    title: string\r\n    onClose: () => void\r\n    visible: boolean\r\n    content: React.ReactNode\r\n    width?: number\r\n}\r\n\r\nexport default function CustomDrawer({ title, onClose, visible, content, width = 500 }: Props){\r\n    return (\r\n        <Drawer title={title} onClose={onClose} visible={visible} width={width}>\r\n            {content}\r\n        </Drawer>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag, message } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n}\r\n\r\nexport default function GoodsLabelEdit({id, onClose, visible}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [visible])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                name: '',\r\n                color: '#000'\r\n            })\r\n            return\r\n        }\r\n\r\n        $http.fetch(urls.goodsLabelDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.data)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.goodsLabelSave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                <Form.Item label=\"标签名称\" name=\"name\" rules={[rules.required()]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"颜色\" name=\"color\" rules={[rules.required()]}>\r\n                    <input type=\"color\" />\r\n                </Form.Item>\r\n            </Form>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag, message } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport GoodsLabelEdit from \"@/views/goodsLabel/Edit\"\r\n\r\nfunction GoodsLabelList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination } = usePageList({\r\n        url: urls.goodsLabelList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        if(init){\r\n            val.current = 1\r\n        }\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const onAddItem = () => {\r\n        if(!UserStore.userInfo.shop_id){\r\n            message.error('请先添加店铺')\r\n            return\r\n        }\r\n        setEditId('')\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const handleEdit = (id: string) => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"标签名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={onAddItem}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '颜色',\r\n            dataIndex: 'color',\r\n            key: 'color',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <Tag color={record.color}>\r\n                        {record.color}\r\n                    </Tag>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑标签' : '新建标签'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<GoodsLabelEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsLabelList))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Input, Button, Cascader } from 'antd'\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport { CascaderProps } from 'antd/es/cascader'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport styles from '../components.module.less'\r\n\r\ntype OnChange = CascaderProps['onChange']\r\n\r\ninterface Option{\r\n    fullname: string,\r\n    id: string,\r\n    location: {\r\n        lat: number,\r\n        lng: number\r\n    },\r\n    name: string,\r\n    pinyin: string[],\r\n    children?: Option[],\r\n    loading?: boolean,\r\n    isLeaf?: boolean,\r\n    level: number,\r\n}\r\n\r\ninterface Props{\r\n    addressName: string\r\n    value?: string[]\r\n    onChange?: OnChange\r\n    onUpdate?: (adr: string) => void\r\n}\r\n\r\nexport default function AddressPicker({ addressName, value, onChange, onUpdate }: Props){\r\n    const [options, setOptions] = React.useState([])\r\n    const [addressText, setAddressText] = useState(addressName)\r\n\r\n    useEffect(() => {\r\n        initData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setAddressText(addressName)\r\n    }, [addressName])\r\n\r\n    const initData = async () => {\r\n        const d = await fetchChildren()\r\n        const result = d.result[0].map((item: any) => {\r\n            item.level = 1\r\n            item.isLeaf = false\r\n            return item\r\n        })\r\n        setOptions(result)\r\n    }\r\n\r\n    const loadData = async (selectedOptions: Option[]) => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true\r\n        const d = await fetchChildren(targetOption.id)\r\n        const list = d.result[0]\r\n        if(targetOption.level != 3){\r\n            targetOption.children = list.map((item: any) => {\r\n                item.level = targetOption.level + 1\r\n                item.isLeaf = item.level === 3\r\n                return item\r\n            })\r\n        }\r\n        targetOption.loading = false\r\n        setOptions([...options])\r\n    }\r\n\r\n    const fetchChildren = async (id = '') => {\r\n        return $http.fetch(urls.addressChildren, { parentCode: id }, { method: 'get' })\r\n    }\r\n\r\n    const onValueChange = (val: any, options: any) => {\r\n        const adr = options.map((op: Option) => op ? op.fullname : '').join('')\r\n        setAddressText(adr)\r\n        onUpdate?.(adr)\r\n        onChange?.(val, options)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.picker_container}>\r\n            <Input disabled value={addressText} title={addressText}/>\r\n            <Cascader\r\n                // defaultValue={value}\r\n                value={value} // 导致 onChange 参数最后一个选项为空\r\n                options={options}\r\n                fieldNames={{ label: 'fullname', value: 'id' }}\r\n                onChange={onValueChange}\r\n                loadData={(val: any) => loadData(val)}\r\n                // changeOnSelect\r\n            >\r\n                <Button icon={<EditOutlined />} />\r\n            </Cascader>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    value?: string\r\n    onChange?: (val: string) => void\r\n}\r\n\r\n/** 店铺类别选择器 */\r\nexport default function ShopCategorySelect({ value, onChange }: Props){\r\n    const [cateList, setCateList] = useState([])\r\n\r\n    useEffect(() => {\r\n        $http.fetch(urls.shopCategoryList, {},{ method: 'get' }).then(r => {\r\n            if(r.success) setCateList(r.list)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Select value={value} onChange={onChange} allowClear>\r\n            {\r\n                cateList.map((cate: any) => (\r\n                    <Select.Option value={cate.id} key={cate.id}>\r\n                        {cate.name}\r\n                    </Select.Option>\r\n                ))\r\n            }\r\n        </Select>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Input, Button, InputNumber, message, TimePicker } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport CustomUpload from \"@/components/customAnt/upload\"\r\nimport styles from './shop.module.less'\r\nimport AddressPicker from \"@/components/customAnt/addressPicker\"\r\nimport ShopCategorySelect from \"@/components/business/shopCategorySelect\"\r\nimport {inject, observer} from \"mobx-react\"\r\nimport moment from \"moment\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose?: () => void\r\n    visible: boolean\r\n    UserStore?: any\r\n}\r\n\r\nfunction ShopEdit({id, onClose, visible, UserStore}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    let [addressName, setAddressName] = useState<any>('')\r\n    const [address, setAddress] = useState('')\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [id])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            setAddressName('')\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                create_time: '',\r\n                modify_time: '',\r\n                name: '', // 店名\r\n                contract: '', // 联系电话\r\n                shop_category_id: '', // 分类id\r\n                desc: '', // 店铺简介\r\n                slogan: '', // 店铺标语\r\n                opening_range: [],\r\n                avatar: '', // 头像\r\n                business_license: '', // 营业执照\r\n                service_permission: '', // 服务许可证\r\n                deliver_fee: '', // 配送费\r\n                deliver_fee_start_amount: '', // 配送费起送价\r\n                provinceCode: '',\r\n                cityCode: '',\r\n                countyCode: '',\r\n                codeList: [],\r\n                headAddress: '',\r\n                tailAddress: '',\r\n            })\r\n            return\r\n        }\r\n\r\n        $http.fetch(urls.shopDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                const data = r.info\r\n                const timeRange = data.opening_range ? data.opening_range.map((t: string) => moment(t)) : []\r\n                formRef.setFieldsValue({\r\n                    ...r.info,\r\n                    opening_range: timeRange,\r\n                    codeList: [r.info.provinceCode, r.info.cityCode, r.info.countyCode]\r\n                })\r\n                setAddressName(r.info.headAddress)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            const [ provinceCode, cityCode, countyCode ] = val.codeList\r\n            $http.fetch(urls.shopSave, { ...val, provinceCode, cityCode, countyCode, headAddress: address || addressName, id }).then( r => {\r\n                if(r.success){\r\n                    onClose?.()\r\n                    message.success(r.msg)\r\n                    if(!id) {\r\n                        UserStore.updateUser()\r\n                    }\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                <Form.Item label=\"店铺名称\" name=\"name\" rules={[rules.required()]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"联系电话\" name=\"contract\" rules={[rules.required(), rules.mobile()]}>\r\n                    <Input maxLength={11}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"店铺类别\" name=\"shop_category_id\" rules={[rules.required()]}>\r\n                    <ShopCategorySelect />\r\n                </Form.Item>\r\n                <Form.Item label=\"店铺简介\" name=\"desc\" rules={[rules.required()]}>\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item label=\"店铺标语\" name=\"slogan\">\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item label=\"营业时间\" name=\"opening_range\">\r\n                    <TimePicker.RangePicker format={'HH:mm'}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"店铺头像\" name=\"avatar\" rules={[rules.required()]}>\r\n                    <CustomUpload />\r\n                </Form.Item>\r\n                <Form.Item label=\"营业执照\" name=\"business_license\" rules={[rules.required()]}>\r\n                    <CustomUpload />\r\n                </Form.Item>\r\n                <Form.Item label=\"服务许可证\" name=\"service_permission\" rules={[rules.required()]}>\r\n                    <CustomUpload />\r\n                </Form.Item>\r\n                <Form.Item label=\"配送费\" name=\"deliver_fee\" rules={[rules.required()]}>\r\n                    <InputNumber className={styles.number_input}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"起送价\" name=\"deliver_fee_start_amount\" rules={[rules.required()]}>\r\n                    <InputNumber className={styles.number_input}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"地区\" name=\"codeList\" rules={[rules.required()]}>\r\n                    <AddressPicker addressName={addressName} onUpdate={ (adr: string) => setAddress(adr) }/>\r\n                </Form.Item>\r\n                <Form.Item label=\"详细地址\" name=\"tailAddress\" rules={[rules.required()]}>\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopEdit))\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport ShopEdit from \"@/views/shop/Edit\"\r\nimport ShopCategorySelect from \"@/components/business/shopCategorySelect\"\r\nimport styles from './shop.module.less'\r\nimport moment from \"moment\"\r\n\r\nfunction ShopList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination } = usePageList({\r\n        url: urls.shopList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        if(init){\r\n            val.current = 1\r\n        }\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const onAddItem = () => {\r\n        setEditId('')\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const handleEdit = (id: string) => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"店铺名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"店铺类别\" name=\"shop_category_id\">\r\n                        <ShopCategorySelect />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={onAddItem}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '店铺名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '联系电话',\r\n            dataIndex: 'contract',\r\n            key: 'contract'\r\n        },\r\n        {\r\n            title: '所属分类',\r\n            dataIndex: 'shop_category',\r\n            key: 'shop_category',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return record.shop_category.name\r\n            }\r\n        },\r\n        {\r\n            title: '简介',\r\n            dataIndex: 'desc',\r\n            key: 'desc'\r\n        },\r\n        {\r\n            title: '地址',\r\n            dataIndex: 'headAddress',\r\n            key: 'headAddress',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.headAddress + record.tailAddress\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                    expandable={{\r\n                        expandedRowRender: (record) => (<RowExpanded record={record}/>)\r\n                    }}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑店铺' : '新建店铺'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<ShopEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\ninterface RowExpandedProps{\r\n    record: any\r\n}\r\n\r\nfunction RowExpanded({ record }: RowExpandedProps){\r\n    const { admin } = record\r\n    return (\r\n        <Form layout=\"inline\" labelCol={{span: 6}} wrapperCol={{span: 18}} className={styles.expanded_form}>\r\n            <Form.Item label=\"店铺名称\">\r\n                <span className={styles.expand_item_content}>{record.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"联系电话\">\r\n                <span className={styles.expand_item_content}>{record.contract}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"所属分类\">\r\n                <span className={styles.expand_item_content}>{record.shop_category.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"简介\">\r\n                <span className={styles.expand_item_content}>{record.desc}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"标语\">\r\n                <span className={styles.expand_item_content}>{record.slogan}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"营业时间\">\r\n                <span className={styles.expand_item_content}>{\r\n                    record.opening_range.map((time: any) => moment(time).format('HH:mm:ss')).join(' 至 ')\r\n                }</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"配送费\">\r\n                <span className={styles.expand_item_content}>{record.deliver_fee}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"起送价\">\r\n                <span className={styles.expand_item_content}>{record.deliver_fee_start_amount}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"地址\">\r\n                <span className={styles.expand_item_content}>{ record.headAddress + record.tailAddress }</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"创建人\">\r\n                <span className={styles.expand_item_content}>{admin.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"创建时间\">\r\n                <span className={styles.expand_item_content}>{record.create_time}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"最后修改时间\">\r\n                <span className={styles.expand_item_content}>{record.modify_time}</span>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopList))\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport CustomUpload from \"@/components/customAnt/upload\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n}\r\n\r\nexport default function ShopCategoryEdit({id, onClose, visible}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [visible])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                name: '',\r\n                icon: ''\r\n            })\r\n            return\r\n        }\r\n\r\n        $http.fetch(urls.shopCategoryDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.data)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.shopCategorySave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                <Form.Item label=\"分类名称\" name=\"name\" rules={[rules.required()]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"图标\" name=\"icon\" rules={[rules.required()]}>\r\n                    <CustomUpload />\r\n                </Form.Item>\r\n            </Form>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport ShopCategoryEdit from \"@/views/shopCategory/Edit\"\r\n\r\nfunction ShopCategoryList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination } = usePageList({\r\n        url: urls.shopCategoryList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        if(init){\r\n            val.current = 1\r\n        }\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const onAddItem = () => {\r\n        setEditId('')\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const handleEdit = (id: string) => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"分类名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={onAddItem}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '图标',\r\n            dataIndex: 'icon',\r\n            key: 'icon',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.icon ? (\r\n                    <img src={urls.IMG_HOST + record.icon} style={{maxWidth: '50px', height: '50px'}}/>\r\n                ) : '/';\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑分类' : '新建分类'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<ShopCategoryEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopCategoryList))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Button, Tree, Dropdown, Modal, Menu, Form, Input, message} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\n\r\ninterface Item{\r\n    id: number | string,\r\n    create_time: string,\r\n    modify_time: string,\r\n    name: string,\r\n    level: number | string, // 节点等级，0开始\r\n    parent_id: number | string, // 上级节点\r\n    shop_id: number | string,\r\n    isLeaf?: boolean\r\n    children?: Item[]\r\n}\r\n\r\ninterface DataNode {\r\n    title: string;\r\n    key: string;\r\n    id: string;\r\n    isLeaf?: boolean;\r\n    children?: DataNode[];\r\n}\r\n\r\ninterface Props{\r\n    shop_id: number\r\n}\r\n\r\nexport default function GoodsCategory({ shop_id }: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    const [treeData, setTreeData] = useState<DataNode[]>([])\r\n    const [editNode, setEditNode] = useState<any>()\r\n    const [menuKey, setMenuKey] = useState('')\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [postForm, setPostForm] = useState<any>() // 提交的form，含antd Form组件其他不包含的必需信息\r\n\r\n    useEffect(() => {\r\n        getChildren(0).then( (r: any) => {\r\n            setTreeData(r)\r\n        })\r\n    }, [])\r\n\r\n    const onAddFirst = () => {\r\n        if(!shop_id){\r\n            message.error('请先添加店铺')\r\n            return\r\n        }\r\n\r\n        setEditNode(null)\r\n        setShowEdit(true)\r\n        setMenuKey('2')\r\n        setPostForm({\r\n            parent_id: 0,\r\n            name: '',\r\n            shop_id,\r\n            level: 0\r\n        })\r\n        formRef.setFieldsValue({\r\n            name: '',\r\n        })\r\n    }\r\n\r\n    // 给节点添加子节点\r\n    const appendTreeChildren = (list: DataNode[], key: React.Key, children: DataNode[]): DataNode[] => {\r\n        return list.map(node => {\r\n            if (node.key === key) {\r\n                return {\r\n                    ...node,\r\n                    children,\r\n                };\r\n            }\r\n            if (node.children) {\r\n                return {\r\n                    ...node,\r\n                    children: appendTreeChildren(node.children, key, children),\r\n                };\r\n            }\r\n            return node\r\n        });\r\n    }\r\n\r\n    const onLoadData = (treeNode: any) => {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (treeNode.children) {\r\n                return resolve()\r\n            }\r\n            getChildren(treeNode.id).then(r => {\r\n                setTreeData(origin => {\r\n                    return appendTreeChildren(origin, treeNode.key, r)\r\n                })\r\n                return resolve()\r\n            }).catch(e => {\r\n                reject()\r\n            })\r\n        })\r\n    }\r\n\r\n    const onContextMenuClick = (key: string, node: any) => {\r\n        setMenuKey(key)\r\n        setEditNode(node)\r\n        switch(key){\r\n            case '1':\r\n                formRef.setFieldsValue(node)\r\n                setPostForm(node)\r\n                setShowEdit(true)\r\n                break\r\n\r\n            case '2':\r\n                formRef.setFieldsValue({\r\n                    name: '',\r\n                })\r\n                setPostForm({\r\n                    parent_id: node.id,\r\n                    name: '',\r\n                    shop_id,\r\n                    level: node.level + 1\r\n                })\r\n                setShowEdit(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const titleRender = (nodeData: any): React.ReactNode => {\r\n        const overlay = (\r\n            <Menu onClick={({ key: menuKey }) => onContextMenuClick(menuKey, nodeData)}>\r\n                <Menu.Item key={'1'}> 修改名称 </Menu.Item>\r\n                { nodeData.level === 2 ? null : <Menu.Item key={'2'}> 添加子分类 </Menu.Item>}\r\n                <Menu.Item key={'3'}> 删除该分类及下级分类 </Menu.Item>\r\n            </Menu>\r\n        )\r\n        return (\r\n            <Dropdown overlay={overlay} trigger={['contextMenu']}>\r\n                <span>{nodeData.name}</span>\r\n            </Dropdown>\r\n        )\r\n    }\r\n\r\n    const getChildren = (parent_id: number): Promise<any> => {\r\n        // if(!shop_id) return Promise.resolve()\r\n\r\n        return $http.fetch(urls.goodsCategoryChildren, { shop_id, parent_id }, { method: 'get' }).then( r => {\r\n            if(r.success){\r\n                return r.list.map((item: any) => {\r\n                    item.key = item.id\r\n                    return item\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            let postData = {\r\n                ...postForm,\r\n                ...val\r\n            }\r\n            $http.fetch(urls.goodsCategorySave, postData).then(r => {\r\n                if(r.success){\r\n                    setShowEdit(false)\r\n\r\n                    // 修改节点名称\r\n                    if(menuKey === '1'){\r\n                        editNode.name = r.data.name\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                        return\r\n                    }\r\n\r\n                    // 新增节点\r\n                    let newData = r.data\r\n                    newData.key = newData.id\r\n                    if(!editNode){\r\n                        setTreeData([...treeData, newData])\r\n                    }else if(editNode.children){\r\n                        editNode.children.push(newData)\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                    }else{\r\n                        editNode.children = [newData]\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                    }\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>商品分类管理 <span style={{fontSize: '12px'}}>（节点右键添加子节点）</span></h3>\r\n            <Button onClick={onAddFirst}>添加一级分类</Button>\r\n            <Tree showLine loadData={onLoadData} treeData={treeData} titleRender={titleRender}>\r\n\r\n            </Tree>\r\n            <Modal title={menuKey === '1' ? '修改分类名称' : '新增下级分类'} visible={showEdit} onOk={saveForm} onCancel={() => setShowEdit(false)}>\r\n                <Form form={formRef}>\r\n                    {\r\n                        menuKey === '2'\r\n                            ? <Form.Item label=\"上级分类\">\r\n                                <Input disabled value={editNode?.name ?? '无'}/>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    <Form.Item label=\"分类名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input placeholder=\"请输入分类名称\"/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport ShopEdit from \"@/views/shop/Edit\"\r\nimport GoodsCategory from \"./_goodsCategory\"\r\nimport styles from './shop.module.less'\r\n\r\ninterface Props{\r\n    UserStore: any\r\n}\r\n\r\nfunction ShopManagement({ UserStore }: Props){\r\n    const shop_id = UserStore.userInfo.shop_id ?? ''\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <GoodsCategory shop_id={shop_id}/>\r\n                </Col>\r\n                <Col span={16}>\r\n                    <div className={styles.shop_manage_wrapper}>\r\n                        <ShopEdit id={shop_id} visible={true} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopManagement))\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { UploadFile } from 'antd/es/upload/interface'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    typeList?: string[]\r\n    value?: string[]\r\n    uploadPath?: string\r\n    maxCount?: number\r\n    onChange?: (value: string[]) => void\r\n}\r\n\r\nexport default function UploadList({ typeList = ['.jpg', '.jpeg', '.png', '.gif'], value = [], onChange, uploadPath = '/file/upload', maxCount = 5 }: Props){\r\n    const [showPreview, setShowPreview] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState<string | undefined>('')\r\n\r\n    const completedFileList: unknown = useMemo(() => {\r\n        return value.map((path: string, index: number) => ({\r\n            uid: index,\r\n            url: urls.IMG_HOST + path\r\n        }))\r\n    }, [value])\r\n\r\n\r\n    const beforeUpload = (file: UploadFile, fileList?: Array<UploadFile>) => {\r\n        const ldx = file.name?.lastIndexOf('.')\r\n        const ext = file.name?.substring(ldx as number)\r\n        const typeCheck = typeList.includes(ext as string)\r\n        if(!typeCheck){\r\n            message.error(`仅允许 ${typeList.join('/')} 格式`)\r\n        }\r\n        return typeCheck\r\n    }\r\n\r\n    const customRequest = (prop: any) => {\r\n        const { file } = prop\r\n        if(beforeUpload(file)){\r\n            $http.fetch(uploadPath, { file }, { formData: true }).then(r => {\r\n                if(r.success){\r\n                    onChange?.([...value, r.path])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 移除文件\r\n    const removeFile = (file: UploadFile): Promise<boolean | void> => {\r\n        return new Promise((resolve, reject) => {\r\n            if(file.url){\r\n                const index = file.url.lastIndexOf('/upload/')\r\n                const path = file.url.substring(index + 8)\r\n                $http.fetch('/file/delete', { path }).then(r => {\r\n                    if(r.success){\r\n                        const idx = value.indexOf(path)\r\n                        value.splice(idx, 1)\r\n                        onChange?.([...value])\r\n                        message.success(r.msg)\r\n                        return resolve(true)\r\n                    }else{\r\n                        return reject()\r\n                    }\r\n                })\r\n            }else{\r\n                return reject()\r\n            }\r\n        })\r\n    }\r\n\r\n    const handlePreview = (file: UploadFile) => {\r\n        setPreviewImage(file.url)\r\n        setShowPreview(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Upload\r\n                // multiple\r\n                listType=\"picture-card\"\r\n                fileList={completedFileList as UploadFile[]}\r\n                customRequest={customRequest}\r\n                onPreview={handlePreview}\r\n                onRemove={removeFile}\r\n                accept=\"image/*\"\r\n            >\r\n                {\r\n                    (completedFileList as UploadFile[]).length <= maxCount\r\n                        ? (\r\n                            <>\r\n                                <PlusOutlined size={48}/>\r\n                            </>\r\n                        )\r\n                        : null\r\n                }\r\n            </Upload>\r\n            <Modal visible={showPreview} footer={null} onCancel={() => setShowPreview(false)}>\r\n                <img alt=\"example\" style={{width: '100%'}} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    value?: string\r\n    onChange?: (val: string) => void\r\n}\r\n\r\n/** 商品标签选择器 */\r\nexport default function GoodsLabelSelect({ value, onChange }: Props){\r\n    const [optionList, setOptionList] = useState([])\r\n\r\n    useEffect(() => {\r\n        $http.fetch(urls.goodsLabelList, {},{ method: 'get' }).then(r => {\r\n            if(r.success) setOptionList(r.list)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Select value={value} onChange={onChange} allowClear mode=\"multiple\">\r\n            {\r\n                optionList.map((option: any) => (\r\n                    <Select.Option value={option.id} key={option.id}>\r\n                        {option.name}\r\n                    </Select.Option>\r\n                ))\r\n            }\r\n        </Select>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Cascader } from 'antd'\r\nimport { CascaderProps } from 'antd/es/cascader'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ntype OnChange = CascaderProps['onChange']\r\n\r\ninterface Option{\r\n    fullname: string,\r\n    id: string,\r\n    location: {\r\n        lat: number,\r\n        lng: number\r\n    },\r\n    name: string,\r\n    pinyin: string[],\r\n    children?: Option[],\r\n    loading?: boolean,\r\n    isLeaf?: boolean,\r\n    level: number,\r\n}\r\n\r\ninterface Props{\r\n    value?: string[]\r\n    onChange?: OnChange\r\n    UserStore?: any\r\n}\r\n\r\nexport default function GoodsCategoryCascader({ value, onChange, UserStore }: Props){\r\n    const { userInfo } = UserStore\r\n    const [options, setOptions] = React.useState([])\r\n\r\n    useEffect(() => {\r\n        initData()\r\n    }, [])\r\n\r\n    const initData = async () => {\r\n        const d = await fetchChildren()\r\n        const result = d.map((item: any) => {\r\n            item.level = 1\r\n            item.isLeaf = false\r\n            return item\r\n        })\r\n        setOptions(result)\r\n    }\r\n\r\n    const loadData = async (selectedOptions: Option[]) => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true\r\n        const list = await fetchChildren(targetOption.id)\r\n        if(targetOption.level != 3){\r\n            targetOption.children = list.map((item: any) => {\r\n                item.level = targetOption.level + 1\r\n                item.isLeaf = item.level === 3\r\n                return item\r\n            })\r\n        }\r\n        targetOption.loading = false\r\n        setOptions([...options])\r\n    }\r\n\r\n    const fetchChildren = async (id: number | string = 0) => {\r\n        return $http.fetch(urls.goodsCategoryChildren, { shop_id: userInfo.shop_id, parent_id: id }, { method: 'get' }).then(r => {\r\n            if(r.success){\r\n                return r.list\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Cascader\r\n                // defaultValue={value}\r\n                value={value} // 导致 onChange 参数最后一个选项为空\r\n                options={options}\r\n                fieldNames={{ label: 'name', value: 'id' }}\r\n                onChange={onChange}\r\n                loadData={(val: any) => loadData(val)}\r\n                changeOnSelect\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {Form, Input, Button, message, Card, InputNumber} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport UploadList from \"@/components/customAnt/uploadList\"\r\nimport GoodsLabelSelect from './components/_goodsLabelSelect'\r\nimport GoodsCategoryCascader from './components/_goodsCategoryCascader'\r\nimport {inject, observer} from \"mobx-react\"\r\nimport styles from \"@/views/goods/goods.module.less\"\r\n\r\ninterface Item {\r\n    id: number | string,\r\n    name: string,\r\n    category_ids: number[] | string[],\r\n    label_ids: number[] | string[],\r\n    desc: string,\r\n    pic_list: [],\r\n    sku_list: SkuItem[],\r\n}\r\n\r\ninterface SkuItem{\r\n    price: number | string,\r\n    pack_fee: number | string,\r\n    name: string,\r\n}\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n    UserStore?: any\r\n}\r\n\r\nfunction GoodsEdit({id, onClose, UserStore}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [id])\r\n\r\n    const createSkuItem = (): SkuItem => {\r\n        return {\r\n            price: '',\r\n            pack_fee: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            let form: Item = {\r\n                id: '',\r\n                name: '',\r\n                category_ids: [],\r\n                label_ids: [],\r\n                desc: '',\r\n                sku_list: [],\r\n                pic_list: [],\r\n            }\r\n            form.sku_list = [createSkuItem()]\r\n            formRef.setFieldsValue(form)\r\n            return\r\n        }\r\n\r\n        $http.fetch(urls.goodsDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.info)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.goodsSave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form form={formRef} name=\"baseForm\" labelCol={{span: 6}} wrapperCol={{span: 18}}>\r\n                <Form.Item label=\"商品名称\" name=\"name\" rules={[rules.required()]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"商品描述\" name=\"desc\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"商品标签\" name=\"label_ids\" rules={[rules.required()]}>\r\n                    <GoodsLabelSelect />\r\n                </Form.Item>\r\n                <Form.Item label=\"所属分类\" name=\"category_ids\" rules={[rules.required()]}>\r\n                    <GoodsCategoryCascader UserStore={UserStore}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"商品图片\" name=\"pic_list\" rules={[rules.required()]}>\r\n                    <UploadList/>\r\n                </Form.Item>\r\n                <Form.List name=\"sku_list\">\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            <h4>Sku列表 <Button onClick={() => add()} type=\"text\" style={{color: '#4098ef'}}>添加</Button></h4>\r\n                            {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                                <div key={key} className={styles.sku_item_wrapper}>\r\n                                    <Card>\r\n                                        <Form.Item {...restField} fieldKey={[fieldKey, 'name']} label=\"名称\" name={[name, 'name']} rules={[rules.required()]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item {...restField} fieldKey={[fieldKey, 'price']} label=\"价格\" name={[name, 'price']} rules={[rules.required()]}>\r\n                                            <InputNumber />\r\n                                        </Form.Item>\r\n                                        <Form.Item {...restField} fieldKey={[fieldKey, 'pack_fee']} label=\"包装费\" name={[name, 'pack_fee']} rules={[rules.required()]}>\r\n                                            <InputNumber />\r\n                                        </Form.Item>\r\n                                    </Card>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n            </Form>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsEdit))\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport GoodsEdit from \"./Edit\"\r\n\r\nfunction GoodsList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    let { pageList, pagination, getPageList, setPagination } = usePageList({\r\n        url: urls.goodsList\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        if(init){\r\n            val.current = 1\r\n        }\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const onAddItem = () => {\r\n        setEditId('')\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const handleEdit = (id: string) => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const exportExcel = () => {\r\n        const form = document.querySelector('#downloadForm') as HTMLFormElement\r\n        form.submit()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"商品名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={onAddItem}>新增</Button>\r\n            <Button onClick={exportExcel}>导出</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '商品描述',\r\n            dataIndex: 'desc',\r\n            key: 'desc'\r\n        },\r\n        {\r\n            title: '商品标签',\r\n            dataIndex: 'label_list',\r\n            key: 'label_list',\r\n            width: 200,\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.label_list.map((label: any) => (\r\n                    <Tag color={label.color}>{ label.name }</Tag>\r\n                ))\r\n            }\r\n        },\r\n        {\r\n            title: '所属分类',\r\n            dataIndex: 'category_list',\r\n            key: 'category_list',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.category_list.map((c: any) => c.name).join('/')\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑商品' : '新建商品'}\r\n                width={600}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<GoodsEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n            <iframe name=\"download\" style={{display: 'none'}} />\r\n            <form action=\"/api/goods/export/goods_export\" target=\"download\" id=\"downloadForm\" style={{display: 'none'}}>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsList))\r\n","import { Result, Button } from 'antd'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\ninterface Props {\r\n    path: string\r\n}\r\nexport default function PageNotFound({ path }: Props) {\r\n    const history = useHistory()\r\n\r\n    const onClick = () => {\r\n        history.replace('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"想写几句骚话...\"\r\n                extra={<Button type=\"primary\" onClick={onClick}>返回首页</Button>}\r\n            />,\r\n        </>\r\n    )\r\n}\r\n","import {Route, useLocation, Redirect, useRouteMatch} from \"react-router-dom\"\r\nimport React, { useState } from 'react'\r\nimport jsCookie from \"js-cookie\"\r\nimport {observer} from \"mobx-react\"\r\nimport { message } from 'antd'\r\nimport { RouteProps as BaseRouteProps } from 'react-router'\r\nimport { UserStore } from '../store'\r\nimport ContentLayout from '../views/layout/Layout'\r\nimport About from '../views/home/About'\r\nimport Login from '../views/login/Login'\r\nimport AdminIndex from '../views/admin/Admin'\r\nimport AdminList from \"@/views/admin/List\"\r\nimport GoodsLabelList from \"@/views/goodsLabel/List\"\r\nimport ShopList from \"@/views/shop/List\"\r\nimport ShopCategoryList from \"@/views/shopCategory/List\"\r\nimport ShopManagement from \"@/views/shop/Management\"\r\nimport GoodsList from \"@/views/goods/List\"\r\nimport PageNotFound from '../views/PageNotFound'\r\n\r\ninterface RouteProps extends BaseRouteProps{\r\n    component?: any,\r\n    redirect?: string,\r\n    from?: string,\r\n    roles?: string[],\r\n    children?: RouteProps[]\r\n}\r\n\r\n// 路由组件\r\nconst RouterView = (route: RouteProps) => {\r\n    console.log('----------------RouterView props-----------------', route)\r\n    console.log('----------------useRouteMatch-----------------', useRouteMatch())\r\n    return (\r\n        route.redirect\r\n            ? <Redirect\r\n                exact={route.exact}\r\n                strict={route.strict}\r\n                from={route.from}\r\n                to={route.redirect}/>\r\n            : <Route\r\n                path={route.path}\r\n                exact={route.exact}\r\n                strict={route.strict}\r\n                render={props => {\r\n                    console.log('-------------route.props----------', props)\r\n                    // pass the sub-routes down to keep nesting\r\n                    return (\r\n                        route.roles\r\n                            ? <AuthRoute routeProps={props} route={route} children={route.children}/>\r\n                            : <route.component {...props} children={route.children} />\r\n                    )\r\n                }}\r\n        />\r\n    )\r\n}\r\n\r\n// 需要授权路由\r\nconst AuthRoute = observer((props: any) => {\r\n    let [ userStore ] = useState(() => UserStore) as any\r\n    const userInfo = userStore.userInfo\r\n    const sid = jsCookie.get('SID')\r\n    const routeRoles = props.route.roles\r\n\r\n    if(!sid){\r\n        message.error('未登录')\r\n        return (<Redirect to={{pathname: '/login'}}/>)\r\n    }else{\r\n        const adminRoles = userInfo.roles\r\n        if(!userInfo.id){\r\n            console.log('权限路由，先获取登录信息', props.route.path)\r\n            userStore.checkAndGetUserInfo()\r\n            return null\r\n        }else if(adminRoles.includes('super') || adminRoles.some((item: string) => routeRoles.includes(item))){\r\n            console.log('权限路由，登录信息已获取', props.route.path)\r\n            return (\r\n                <props.route.component {...props.routeProps} children={props.children}/>\r\n            )\r\n        }else{\r\n            return (<Redirect to={{pathname: '/pageNotFound'}}/>)\r\n        }\r\n    }\r\n})\r\n\r\n// 没有对应路由\r\n// todo: 不能匹配到不存在的子路由，如 /about 有子路由 /about/about2，但是访问不存在的 /about/about3 时没有进入这里，需要在 /about 里面添加这个 NoMatchRoute 组件\r\nconst NoMatchRoute = () => {\r\n    let location = useLocation()\r\n\r\n    return (\r\n        <PageNotFound path={location.pathname}/>\r\n    )\r\n}\r\n\r\nconst allAuth = ['super', 'admin']\r\nconst superAuth = ['super']\r\n\r\nconst routes: RouteProps[] = [\r\n    {\r\n        redirect: '/home/me',\r\n        from: '/',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: ContentLayout,\r\n        // exact: true, // 这样不会进入子路由\r\n        // strict: true,\r\n        children: [\r\n            {\r\n                redirect: '/home/me',\r\n                exact: true,\r\n                from: '/home'\r\n            },\r\n            {\r\n                path: '/home/admin',\r\n                component: AdminList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/about',\r\n                // exact: true,\r\n                component: About,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopCategory',\r\n                component: ShopCategoryList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopList',\r\n                component: ShopList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopDetail',\r\n                component: ShopManagement,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/goods',\r\n                component: GoodsList,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/goodsLabel',\r\n                component: GoodsLabelList,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/me',\r\n                // exact: true,\r\n                component: AdminIndex,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                redirect: '/pageNotFound', // 随便一个不存在的一级路由，匹配404\r\n                exact: true,\r\n                from: '/home/*'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '*',\r\n        component: PageNotFound,\r\n    },\r\n]\r\n\r\n// 获取所有路由，含父路由\r\nfunction RouteTree2List(list: Array<any>) {\r\n    let  result: Array<any> = []\r\n    list.forEach(item => {\r\n        const temp = { ...item }\r\n        if(temp.children){\r\n            result = result.concat(RouteTree2List(temp.children))\r\n            temp.children = result\r\n        }\r\n        result.push(item)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst routeList = RouteTree2List(routes)\r\n\r\nexport { routes, RouterView, NoMatchRoute, routeList }\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { routes, RouterView, NoMatchRoute } from './router'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Router>\r\n              <Switch>\r\n                  {routes.map((route, i) => (\r\n                      <RouterView key={i} {...route}/>\r\n                  ))}\r\n              </Switch>\r\n          </Router>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'mobx-react'\r\nimport { ConfigProvider } from 'antd'\r\nimport zhCN from 'antd/lib/locale/zh_CN'\r\nimport * as Store from \"@/store\"\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport 'antd/dist/antd.less'\r\nimport './index.less'\r\n\r\nmoment.locale('en')\r\n\r\nReactDOM.render(\r\n    <Provider {...Store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            <App />\r\n        </ConfigProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number_input\":\"number_input--2sY-Y\",\"shop_manage_wrapper\":\"shop_manage_wrapper--MhxDl\",\"expanded_form\":\"expanded_form--25yT8\",\"expand_item_content\":\"expand_item_content--3OMk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img_preview\":\"img_preview--25MqK\",\"upload_action\":\"upload_action--K2bb5\",\"table_striped\":\"table_striped--29H9L\",\"picker_container\":\"picker_container--2hqnB\",\"ant-input\":\"ant-input--2WrCM\"};"],"sourceRoot":""}