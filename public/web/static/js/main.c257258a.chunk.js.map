{"version":3,"sources":["views/layout/layout.module.less","views/login/Login.module.css","views/home/home.module.less","views/goods/goods.module.less","http/index.ts","http/urls.ts","store/UserStore.ts","views/layout/menus.ts","views/layout/components/_menu.tsx","views/layout/components/_header.tsx","views/layout/Layout.tsx","views/home/About.tsx","config/rules.ts","views/login/Login.tsx","components/customAnt/upload.tsx","views/admin/Admin.tsx","views/layout/components/_listContent.tsx","config/pageState.ts","components/customAnt/table.tsx","hooks/useUnmounted.tsx","hooks/usePageList.tsx","views/admin/List.tsx","components/customAnt/drawer.tsx","views/goodsLabel/Edit.tsx","views/goodsLabel/List.tsx","components/customAnt/addressPicker.tsx","components/business/shopCategorySelect.tsx","views/shop/Edit.tsx","views/shop/List.tsx","views/shopCategory/Edit.tsx","views/shopCategory/List.tsx","views/shop/_goodsCategory.tsx","views/shop/Management.tsx","components/customAnt/uploadList.tsx","views/goods/components/_goodsLabelSelect.tsx","views/goods/components/_goodsCategoryCascader.tsx","views/goods/Edit.tsx","views/goods/List.tsx","views/PageNotFound.tsx","router/index.tsx","views/home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/shop/shop.module.less","components/components.module.less"],"names":["module","exports","console","log","process","DEFAULT_CONFIG","baseURL","timeout","withCredentials","method","headers","mobile_login_token","$http","api","axios","create","this","interceptors","request","use","config","error","Promise","reject","response","data","code","message","url","params","options","a","op","Object","assign","formData","loading","reqConfig","FormData","par","keys","forEach","key","append","resolve","then","res","catch","e","userInfo","id","name","mobile","password","type","roles","makeAutoObservable","fetch","urls","r","success","runInAction","info","updateUser","menus","title","icon","TeamOutlined","children","path","PaperClipOutlined","ShopOutlined","PartitionOutlined","TagOutlined","UserOutlined","SubMenu","Menu","inject","observer","UserStore","history","useHistory","location","useLocation","userRoles","accessRoutes","routeList","filter","route","some","includes","map","mode","theme","getMenuItem","item","Item","onClick","pathname","push","filterMenus","result","temp","length","LayoutHeader","useState","userStore","avatar","handleClickMenu","index","Modal","confirm","ExclamationCircleOutlined","onOk","msg","DropMenu","LogoutOutlined","overlay","src","Header","Layout","Sider","Content","props","rules","required","trigger","validator","rule","value","j","Error","Array","limit","min","max","email","phone","test","trim","tel","toString","substring","indexOf","telephone","callback","postCode","idCard","idCardWi","idCardY","idCardWiSum","i","idCardMod","idCardLast","range","min2","max2","isNaN","precision","maxLength","precision2","val","notChinese","layout","labelCol","span","wrapperCol","CustomUpload","maxSize","typeList","uploadPath","onChange","imgFullPath","beforeUpload","file","fileList","ldx","lastIndexOf","ext","isLimit","size","isAllow","join","accept","showUploadList","customRequest","prop","lastFilePath","className","styles","img_preview","upload_action","PlusOutlined","style","fontSize","bordered","label","create_time","modify_time","LayoutList","top","table","actions","filter_actions","PageState","CustomTable","columns","rowKey","pagination","dataSource","expandable","pageState","tableScrollHeight","setTableScrollHeight","useEffect","window","addEventListener","adjustTable","removeEventListener","modifyColumns","dataIndex","render","text","record","splice","debounce","rh","document","querySelector","clientHeight","dh","documentElement","offset","getBoundingClientRect","height","rowClassName","table_striped","scroll","y","column","Column","useUnmounted","unmounted","setUnmounted","usePageList","pageList","setPageList","setPageState","current","pageSize","total","pageSizeOptions","showSizeChanger","setPagination","getPaginationParams","useCallback","getPageList","p","completed","list","preVal","amount","Form","useForm","formRef","onQuery","getFieldsValue","handleChangeAdminState","state","form","gutter","resetFields","color","maxWidth","disabled","page","filters","sorter","CustomDrawer","onClose","visible","content","width","GoodsLabelEdit","initForm","setFieldsValue","spinning","validateFields","editVisible","setEditVisible","editId","setEditId","handleEdit","shop_id","onCloseEdit","AddressPicker","addressName","onUpdate","React","setOptions","addressText","setAddressText","initData","fetchChildren","d","level","isLeaf","loadData","selectedOptions","targetOption","parentCode","picker_container","fieldNames","adr","fullname","EditOutlined","ShopCategorySelect","cateList","setCateList","allowClear","cate","Option","setAddressName","address","setAddress","contract","shop_category_id","desc","slogan","opening_range","business_license","service_permission","deliver_fee","deliver_fee_start_amount","provinceCode","cityCode","countyCode","codeList","headAddress","tailAddress","timeRange","t","moment","TextArea","RangePicker","format","number_input","RowExpanded","admin","expanded_form","expand_item_content","shop_category","time","expandedRowRender","ShopCategoryEdit","GoodsCategory","treeData","setTreeData","editNode","setEditNode","menuKey","setMenuKey","showEdit","setShowEdit","postForm","setPostForm","getChildren","appendTreeChildren","node","parent_id","showLine","treeNode","origin","titleRender","nodeData","onContextMenuClick","postData","old","newData","onCancel","placeholder","shop_manage_wrapper","UploadList","maxCount","showPreview","setShowPreview","previewImage","setPreviewImage","completedFileList","useMemo","uid","listType","typeCheck","onPreview","onRemove","idx","footer","alt","GoodsLabelSelect","optionList","setOptionList","option","GoodsCategoryCascader","changeOnSelect","category_ids","label_ids","sku_list","pic_list","price","pack_fee","List","fields","add","remove","fieldKey","restField","sku_item_wrapper","submit","label_list","category_list","c","display","action","target","PageNotFound","status","subTitle","extra","replace","RouterView","useRouteMatch","redirect","exact","strict","from","to","AuthRoute","routeProps","component","sid","jsCookie","get","routeRoles","adminRoles","checkAndGetUserInfo","allAuth","superAuth","routes","layout_left","collapsible","layout_right","layout_header","AdminList","About","ShopCategoryList","ShopList","ShopManagement","GoodsList","GoodsLabelList","AdminIndex","isRegister","setIsRegister","validateForm","handleLogin","handleRegister","login_page","container","prefix","PhoneOutlined","Password","LockOutlined","Group","optionType","buttonStyle","div1","div2","RouteTree2List","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","locale","ReactDOM","Store","zhCN","getElementById"],"mappings":"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","file":"static/js/main.c257258a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout_left\":\"layout_left--5L9NQ\",\"layout_right\":\"layout_right--1x7Mz\",\"layout_header\":\"layout_header--1MDN0\",\"filter_actions\":\"filter_actions--dWtPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_page\":\"Login_login_page__1m0Rz\",\"container\":\"Login_container__Jlh7V\",\"actions\":\"Login_actions__2FzwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div1\":\"div1--rBif8\",\"div2\":\"div2--28PNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sku_item_wrapper\":\"sku_item_wrapper--1uiwj\"};","import axios, {AxiosRequestConfig} from 'axios'\r\nimport { message } from 'antd'\r\n\r\nconst baseURL = process.env.REACT_APP_ENV === 'dev' ? '/api' : process.env.REACT_APP_BASE_URL\r\n\r\nconsole.log('==============', baseURL)\r\n\r\nconst DEFAULT_CONFIG: AxiosRequestConfig = {\r\n    baseURL: baseURL,\r\n    timeout: 45000,\r\n    withCredentials: true,\r\n    method: 'post',\r\n    headers: {\r\n        mobile_login_token: '3333333333'\r\n    }\r\n}\r\n\r\nclass Http {\r\n    api = axios.create()\r\n\r\n    constructor() {\r\n        // 请求拦截配置\r\n        this.api.interceptors.request.use(config => {\r\n            // console.log(`请求拦截配置-->`, config)\r\n            return config // 需要返回\r\n        }, error => {\r\n            console.log(`请求拦截出错--> `, error)\r\n            return Promise.reject(error)\r\n        })\r\n\r\n        // 响应拦截配置\r\n        this.api.interceptors.response.use(response => {\r\n            // console.table(`响应拦截-->`, response.data)\r\n            if(response.data.code === 900){\r\n                message.error('请重新登录')\r\n            }\r\n            return response.data\r\n        }, error => {\r\n            console.log(`响应拦截出错-->`, error)\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n\r\n    async fetch(url: string, params?: FetchParams, options?: RequestOptions): Promise<any> {\r\n        const op = Object.assign({}, DEFAULT_CONFIG, options)\r\n        const {formData, loading, method} = op\r\n        const reqConfig = {...DEFAULT_CONFIG, url, method}\r\n        if (method === 'get') {\r\n            reqConfig.method = method\r\n            reqConfig.params = params\r\n        } else if (formData) {\r\n            const formData = new FormData()\r\n            const par = params ?? {}\r\n            Object.keys(par).forEach(key => {\r\n                formData.append(key, par[key])\r\n            })\r\n            reqConfig.data = formData\r\n        } else {\r\n            reqConfig.data = params\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            this.api.request(reqConfig).then(res => {\r\n                return resolve(res)\r\n            }).catch(e => {\r\n                return reject(e)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst $http = new Http()\r\n\r\nexport default $http\r\n\r\ndeclare global {\r\n    /*\r\n    * 网络请求参数\r\n    * */\r\n    interface FetchParams {\r\n        [prop: string]: any,\r\n    }\r\n\r\n    /**\r\n     * 网络请求返回值\r\n     */\r\n    interface RequestRes {\r\n        /** 状态码,成功返回 200 */\r\n        code: number\r\n        /** 错误消息 */\r\n        message: string\r\n        /** 返回数据 */\r\n        result: any\r\n\r\n        // [prop: string]: any,\r\n    }\r\n\r\n    /*\r\n    * 请求选项\r\n    * */\r\n    interface RequestOptions extends AxiosRequestConfig {\r\n        baseUrl?: string\r\n        // 是否使用formData\r\n        formData?: boolean\r\n        timeOut?: number\r\n        // 是否显示loading\r\n        loading?: boolean\r\n    }\r\n}\r\n","export default {\r\n    IMG_HOST: process.env.REACT_APP_PIC_BASE,\r\n    adminRegister: '/admin/register',\r\n    adminList: '/admin/list',\r\n    adminLogin: '/admin/login',\r\n    adminLogout: '/admin/logout',\r\n    adminInfo: '/admin/user_info',\r\n    adminUpdateAvatar: '/admin/update_avatar',\r\n    adminChangeState: '/admin/change_state',\r\n    saveUser: '/user/save',\r\n    listUser: '/user/list',\r\n    userLabelList: '/user/label_list',\r\n    userLabelSave: '/user/label_save',\r\n    upload: '/upload',\r\n    shopCategoryList: '/shop/category_list',\r\n    shopCategorySave: '/shop/category_save',\r\n    shopCategoryDetail: '/shop/category_detail',\r\n    shopList: '/shop/list',\r\n    shopSave: '/shop/save',\r\n    shopDetail: '/shop/detail',\r\n    goodsCategorySave: '/goods/category_save',\r\n    goodsCategoryChildren: '/goods/category_children',\r\n    goodsSave: '/goods/save',\r\n    goodsDetail: '/goods/detail',\r\n    goodsList: '/goods/list',\r\n    goodsLabelList: '/goods/label_list',\r\n    goodsLabelDetail: '/goods/label_detail',\r\n    goodsLabelSave: '/goods/label_save',\r\n    addressChildren: '/address/query_children',\r\n    homeConfigList: '/mall/home_config_list',\r\n    homeConfigSave: '/mall/home_config_save',\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx'\r\nimport $http from '../http'\r\nimport urls from '../http/urls'\r\n\r\ninterface User{\r\n    id: string,\r\n    name: string,\r\n    mobile: string,\r\n    password: string,\r\n    type: number,\r\n    roles: string[]\r\n}\r\n\r\nclass UserStore{\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    userInfo: User = {\r\n        id: '',\r\n        name: '',\r\n        mobile: '',\r\n        password: '',\r\n        type: 1,\r\n        roles: []\r\n    }\r\n\r\n    async updateUser() {\r\n        return $http.fetch(urls.adminInfo).then(r => {\r\n            if(r.success){\r\n                runInAction(() => {\r\n                    this.userInfo = r.info\r\n                })\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    async checkAndGetUserInfo(){\r\n        if(!this.userInfo.id){\r\n            return this.updateUser()\r\n        }else{\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\nexport default new UserStore()\r\n","import { PaperClipOutlined, TeamOutlined, TagOutlined, UserOutlined, ShopOutlined, PartitionOutlined } from '@ant-design/icons'\r\n\r\nconst menus = [\r\n    {\r\n        key: 13,\r\n        title: '商城配置',\r\n        icon: TeamOutlined,\r\n        children: [\r\n            {\r\n                key: 14,\r\n                title: '首页配置',\r\n                icon: TeamOutlined,\r\n                path: '/homeConfig'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        key: 15,\r\n        title: '数据管理',\r\n        icon: PaperClipOutlined,\r\n        children: [\r\n            {\r\n                key: 12,\r\n                title: '管理员列表',\r\n                icon: TeamOutlined,\r\n                path: '/home/admin'\r\n            },\r\n            // {\r\n            //     key: 1,\r\n            //     title: '用户数据',\r\n            //     icon: TeamOutlined,\r\n            //     children: [\r\n            //         {\r\n            //             key: 2,\r\n            //             title: '用户管理',\r\n            //             icon: TeamOutlined,\r\n            //             path: '/user'\r\n            //         },\r\n            //         {\r\n            //             key: 3,\r\n            //             title: '用户标签',\r\n            //             icon: TagOutlined,\r\n            //             path: '/userLabel'\r\n            //         },\r\n            //     ]\r\n            // },\r\n            {\r\n                key: 5,\r\n                title: '店铺数据',\r\n                icon: ShopOutlined,\r\n                children: [\r\n                    {\r\n                        key: 6,\r\n                        title: '店铺列表',\r\n                        icon: ShopOutlined,\r\n                        path: '/home/shopList',\r\n                    },\r\n                    {\r\n                        key: 8,\r\n                        title: '店铺管理',\r\n                        icon: ShopOutlined,\r\n                        path: '/home/shopDetail',\r\n                    },\r\n                    {\r\n                        key: 7,\r\n                        title: '店铺分类',\r\n                        icon: PartitionOutlined,\r\n                        path: '/home/shopCategory',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                key: 9,\r\n                title: '商品数据',\r\n                icon: TeamOutlined,\r\n                children: [\r\n                    {\r\n                        key: 10,\r\n                        title: '商品管理',\r\n                        icon: TeamOutlined,\r\n                        path: '/home/goods'\r\n                    },\r\n                    {\r\n                        key: 11,\r\n                        title: '商品标签',\r\n                        icon: TagOutlined,\r\n                        path: '/home/goodsLabel'\r\n                    },\r\n                ]\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        key: 4,\r\n        title: '个人信息',\r\n        icon: UserOutlined,\r\n        path: '/home/me'\r\n    },\r\n]\r\n\r\nexport default menus\r\n","import { Menu } from 'antd'\r\nimport menus from '../menus'\r\nimport React from 'react'\r\nimport { inject, observer } from \"mobx-react\"\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport { routeList } from '@/router'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nfunction LayoutMenu({ UserStore }: any) {\r\n    let history = useHistory()\r\n    let location = useLocation()\r\n    const userRoles = UserStore.userInfo.roles\r\n\r\n    const accessRoutes = routeList.filter((route) => {\r\n        return route.roles && route.roles.some( (r: any) => userRoles.includes(r) )\r\n    }).map( r => r.path)\r\n\r\n    const filterMenus = (menus: Array<any>) => {\r\n        let result: any[] = []\r\n        menus.forEach(item => {\r\n            const temp = { ...item }\r\n            if(item.children){\r\n                let children = filterMenus(item.children)\r\n                temp.children = children\r\n            }\r\n            if(accessRoutes.includes(temp.path) || (temp.children && temp.children.length)) result.push(temp)\r\n        })\r\n        return result\r\n    }\r\n\r\n    function getMenuItem(children: Array<any>): React.ReactNode {\r\n\r\n        let onClickMenuItem = (path: string) => {\r\n            if(location.pathname !== path){\r\n                history.push(path)\r\n            }\r\n        }\r\n\r\n        return children.map(item => {\r\n            if(item.children){\r\n                return (\r\n                    <SubMenu key={item.key} title={item.title} icon={<item.icon/>}>\r\n                        {getMenuItem(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }else{\r\n                return (\r\n                    <Menu.Item key={item.key} icon={<item.icon/>} onClick={() => onClickMenuItem(item.path)}> {item.title} </Menu.Item>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Menu mode=\"inline\" theme=\"dark\">\r\n            {getMenuItem(filterMenus(menus))}\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(LayoutMenu))\r\n","import React, {useState} from 'react'\r\nimport { Dropdown, Avatar, Menu, Modal, message } from 'antd'\r\nimport { LogoutOutlined, UserOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport urls from \"../../../http/urls\"\r\nimport {observer} from \"mobx-react\"\r\nimport { UserStore } from '../../../store'\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport $http from \"../../../http\"\r\n\r\nconst LayoutHeader = observer(() => {\r\n    let [ userStore ] = useState(() => UserStore) as any\r\n    const path = urls.IMG_HOST + userStore.userInfo.avatar\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const handleClickMenu = (index: number) => {\r\n        switch (index){\r\n            case 1:\r\n                if(location.pathname !== '/home/me'){\r\n                    history.push('/home/me')\r\n                }\r\n                break\r\n            case 2:\r\n                Modal.confirm({\r\n                    title: '确认退出？',\r\n                    icon: <ExclamationCircleOutlined />,\r\n                    onOk(){\r\n                        $http.fetch(urls.adminLogout).then(r => {\r\n                            if(r.success){\r\n                                history.push('/login')\r\n                            }\r\n                            message.success(r.msg)\r\n                        })\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    const DropMenu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined/>} onClick={() => handleClickMenu(1)}>\r\n                个人信息\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<LogoutOutlined/>} onClick={() => handleClickMenu(2)}>\r\n                退出登录\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div></div>\r\n            <Dropdown overlay={DropMenu}>\r\n                <Avatar src={path}/>\r\n            </Dropdown>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default LayoutHeader\r\n","import { Layout, Card } from 'antd'\r\nimport { RouterView } from \"../../router\"\r\nimport { Switch } from \"react-router-dom\"\r\nimport React from \"react\"\r\nimport styles from './layout.module.less'\r\nimport LayoutMenu from './components/_menu'\r\nimport LayoutHeader from \"./components/_header\"\r\n\r\nconst { Header, Sider, Content } = Layout\r\n\r\ninterface Props{\r\n    children: Array<any>\r\n}\r\nexport default function ContentLayout({ children }: Props) {\r\n    return (\r\n        <Layout>\r\n            <Sider className={styles.layout_left} collapsible>\r\n                <LayoutMenu/>\r\n            </Sider>\r\n            <Layout className={styles.layout_right} id=\"layoutRight\">\r\n                <Header className={styles.layout_header}>\r\n                    <LayoutHeader/>\r\n                </Header>\r\n                <Content>\r\n                    <Card className=\"page_container\">\r\n                        <Switch>\r\n                            {children.map((route, i) => {\r\n                                return (\r\n                                    <RouterView key={i} {...route}/>\r\n                                )\r\n                            })}\r\n\r\n                        </Switch>\r\n                    </Card>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","import { observer, inject } from 'mobx-react'\r\n\r\nfunction About(props: any) {\r\n    return (\r\n        <h3>about232323{props.UserStore.userInfo.name}</h3>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(About))\r\n","//规则\r\n\r\nconst rules = {\r\n    //必填\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    required(trigger?: string){\r\n        return {\r\n            required: true,\r\n            validator: (rule: any, value: any) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (!rule.required) {\r\n                        j();\r\n                    }\r\n                    if (typeof (value) == \"undefined\" || value == null) {\r\n                        j(new Error('不能为空'))\r\n                    }else{\r\n                        if (value instanceof Array) {\r\n                            //数组，判断是否有值\r\n                            if (value.length == 0) {\r\n                                j(new Error('不能为空'))\r\n                            }\r\n                        } else if (typeof (value) == \"string\") {\r\n                            //字符串，判断是否有值\r\n                            if (value.length == 0) {\r\n                                j(new Error('不能为空'))\r\n                            }\r\n                        }\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //长度显示\r\n    //min：最小长度\r\n    //max：最大长度\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    limit(min: number, max: number, trigger?: string){\r\n        if (typeof (min) == 'undefined' || !min) {\r\n            min = 0;\r\n        }\r\n        if (typeof (max) == 'undefined' || !max) {\r\n            max = 0;\r\n        }\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"change\";\r\n        }\r\n        return {\r\n            min: min,\r\n            max: max,\r\n            message: `仅限输入${min}-${max}个字符`,\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //电子邮箱\r\n    //trigger：触发校验的事件，blur 或者 change，默认为change\r\n    email(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            message: '邮箱格式错误',\r\n            type: 'email',\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //固定话和手机号码校验\r\n    //trigger：触发校验的事件，blur 或者 change，默认为blur\r\n    phone(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value) {\r\n                        let mobileReg = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\r\n                        if (!mobileReg.test(value.trim())) {\r\n                            let tel = value.toString()\r\n                            if (tel.substring(0, 1) == \"1\") {\r\n                                //说明不是手机号码，可能是固话\r\n                                j(new Error('是手机电话，请输入正确的手机号'))\r\n                            } else if (tel.substring(0, 1) != \"0\") {\r\n                                //先检查前面3位或4位是否区号\r\n                                j(new Error('是固话电话，请输入正确的区号'))\r\n                            } else {\r\n                                if (value.indexOf(\"-\") == -1) {\r\n                                    j(new Error('请在区号后加上\"-\"'))\r\n                                } else {\r\n                                    let telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\r\n                                    if (!telephoneReg.test(value.trim())) {\r\n                                        j(new Error('请输入正确的固定电话'))\r\n                                    } else {\r\n                                        r();\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //说明是手机号码\r\n                            if (value) {\r\n                                let mobileReg = /^0{0,1}(13[0-9]|14[0-9]|15[0-9]|18[0-9]|17[0-9])[0-9]{8}$/;\r\n                                if (!mobileReg.test(value.trim())) {\r\n                                    j(new Error('请输入正确的手机号'))\r\n                                } else {\r\n                                    r();\r\n                                }\r\n                            } else {\r\n                                r();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 手机号码校验\r\n    mobile(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value) {\r\n                        let mobileReg = /^(1[3-9][0-9])[0-9]{8}$/;\r\n                        if (!mobileReg.test(value.trim())) {\r\n                            j(new Error('请输入正确的手机号'))\r\n                        } else {\r\n                            r();\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 固定话校验\r\n    telephone(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string, callback: Function) => {\r\n                if (value) {\r\n                    //先检查前面3位或4位是否区号\r\n                    let tel = value.toString()\r\n                    if (tel.substring(0, 1) != \"0\") {\r\n                        callback(new Error('请输入正确的区号'))\r\n                    } else {\r\n                        if (value.indexOf(\"-\") == -1) {\r\n                            callback(new Error('请在区号后加上\"-\"'))\r\n                        } else {\r\n                            let telephoneReg = /^((0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\r\n                            if (!telephoneReg.test(value.trim())) {\r\n                                callback(new Error('请输入正确的固定电话'))\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 邮编校验\r\n    postCode(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: string, callback: Function) => {\r\n                if (value) {\r\n                    let maxLength = 6;\r\n                    let postCodeReg = /^[1-9]\\d{5}(?!\\d)$/;\r\n                    if (maxLength != value.trim().length && !postCodeReg.test(value.trim())) {\r\n                        callback(new Error('请输入正确的邮政编码'))\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 身份证号校验\r\n    idCard(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    //15位和18位身份证号码的正则表达式\r\n                    var idCardReg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/;\r\n                    //如果通过该验证，说明身份证格式正确，但准确性还需计算\r\n                    if (idCardReg.test(value)) {\r\n                        if (value.length == 18) {\r\n                            let idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2); //将前17位加权因子保存在数组里\r\n                            let idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2); //这是除以11后，可能产生的11位余数、验证码，也保存成数组\r\n                            let idCardWiSum = 0; //用来保存前17位各自乖以加权因子后的总和\r\n                            for (var i = 0; i < 17; i++) {\r\n                                idCardWiSum += value.substring(i, i + 1) * idCardWi[i];\r\n                            }\r\n                            var idCardMod = idCardWiSum % 11; //计算出校验码所在数组的位置\r\n                            var idCardLast = value.substring(17); //得到最后一位身份证号码\r\n                            //如果等于2，则说明校验码是10，身份证号码最后一位应该是X\r\n                            if (idCardMod == 2) {\r\n                                if (idCardLast == \"X\" || idCardLast == \"x\") {\r\n                                    callback();\r\n                                } else {\r\n                                    callback(\"身份证号码不正确\");\r\n                                }\r\n                            } else {\r\n                                //用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\r\n                                if (idCardLast == idCardY[idCardMod]) {\r\n                                    callback();\r\n                                } else {\r\n                                    callback(\"身份证号码不正确\");\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        callback(\"身份证号码不正确\");\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 数值范围\r\n    range(min: number | Function, max: number | Function, trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: number) => {\r\n                return new Promise<void>((r, j) => {\r\n                    if (value + \"\") {\r\n                        let min2 = null;\r\n                        let max2 = null;\r\n                        if (typeof(min) ==\"undefined\") {\r\n                            min2 = null\r\n                        }else if(typeof(min) ==\"function\"){\r\n                            min2 = min();\r\n                        }else if(min < 0 || isNaN(min)){\r\n                            min2 = null\r\n                        }else {\r\n                            min2 = min\r\n                        }\r\n                        if (typeof(max) ==\"undefined\") {\r\n                            max2 = null\r\n                        }else if(typeof(max) ==\"function\"){\r\n                            max2 = max();\r\n                        }else if(max < 0 || isNaN(max)){\r\n                            max2 = null\r\n                        }else {\r\n                            max2 = max\r\n                        }\r\n                        if (isNaN(value * 1)) {\r\n                            j(new Error('必须为数字'));\r\n                        } else {\r\n                            if (min2!=null && value * 1 < min2 * 1) {\r\n                                j(new Error('必须大于等于'+min2));\r\n                            }else if (max2!=null && value * 1 > max2 * 1) {\r\n                                j(new Error('必须小于等于'+ max2));\r\n                            }else{\r\n                                r()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        r();\r\n                    }\r\n                })\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    //数字精度长度校验\r\n    //maxLength：最大长度\r\n    //precision：是精度,可以是数字，或者函数\r\n    precision(precision: number | Function, maxLength: number, trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    if (isNaN(value)) {\r\n                        callback(new Error('必须为数字'));\r\n                    } else {\r\n                        //若是数字，则进行进度校验\r\n                        let precision2 = 2;\r\n                        if (typeof(precision) ==\"undefined\") {\r\n                            precision2 = 2//默认是2位小数\r\n                        }else if(typeof(precision) ==\"function\"){\r\n                            precision2 = precision();\r\n                        }else if(precision < 0 || isNaN(precision)){\r\n                            precision2 = 2//默认是2位小数\r\n                        }else {\r\n                            precision2 = precision\r\n                        }\r\n                        let val = value.toString();\r\n                        if (val.indexOf(\".\") != -1) {\r\n                            if (precision2 == 0) {\r\n                                callback(new Error('只能为整数'));\r\n                            } else {\r\n                                let length = (val.substring(val.indexOf(\".\") + 1, val.length)).length * 1//获取小数点后面的精度\r\n                                if (length > precision2) {\r\n                                    callback(new Error('小数位后只能保留' + precision2 + '位'));\r\n                                } else {\r\n                                    callback();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if(val.length > maxLength){\r\n                                callback(new Error('只能'+maxLength+'位数'));\r\n                            }else{\r\n                                callback();\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            trigger: trigger\r\n        }\r\n    },\r\n\r\n    // 限制不输入中文校验，且长度大于3位\r\n    notChinese(trigger?: string){\r\n        if (typeof (trigger) == 'undefined' || !trigger) {\r\n            trigger = \"blur\";\r\n        }\r\n        return {\r\n            validator: (rule: any, value: any, callback: Function) => {\r\n                if (value) {\r\n                    var chineseReg =/[\\u4E00-\\u9FA5]|[\\uFE30-\\uFFA0]/gi;\r\n                    if (chineseReg.test(value)) {\r\n                        callback(\"字符不能为中文\");\r\n                    } else {\r\n                        if (value.length > 3 && value.length < 20) {\r\n                            callback();\r\n                        }else{\r\n                            callback(\"长度在 4 到 20个字符\");\r\n                        }\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n\r\n            },\r\n            trigger: trigger\r\n        }\r\n    }\r\n}\r\n\r\nexport default rules\r\n","import { Form, Button, Input, Radio, message } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport rules from '../../config/rules'\r\nimport { UserOutlined, PhoneOutlined, LockOutlined } from '@ant-design/icons'\r\nimport styles from './Login.module.css'\r\nimport $http from '../../http'\r\nimport urls from '@/http/urls'\r\nimport jsCookie from \"js-cookie\"\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n}\r\n\r\nexport default function Login() {\r\n    const [ formRef ] = Form.useForm()\r\n    const history = useHistory()\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const options = [\r\n        {label: '超级管理员', value: 1},\r\n        {label: '店铺管理员', value: 2},\r\n    ]\r\n\r\n    jsCookie.remove('SID') // 清空登录信息\r\n\r\n    const validateForm = (type: number) => {\r\n        formRef.validateFields().then(val => {\r\n            if(type === 2){\r\n                handleLogin(val)\r\n            }else{\r\n                handleRegister(val)\r\n            }\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    const handleLogin = (data: any) => {\r\n        $http.fetch(urls.adminLogin, data).then( r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n                history.replace('/home')\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRegister = (data: any) => {\r\n        $http.fetch(urls.adminRegister, data).then( r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.login_page}>\r\n            <div className={styles.container}>\r\n                <Form {...layout} form={formRef}>\r\n                    {\r\n                        isRegister\r\n                            ? (\r\n                                <Form.Item label=\"用户名\" name=\"name\" rules={[rules.required()]}>\r\n                                    <Input prefix={<UserOutlined/>}/>\r\n                                </Form.Item>\r\n                            )\r\n                            : null\r\n                    }\r\n                    <Form.Item label=\"手机号\" name=\"mobile\" rules={[rules.required(), rules.mobile()]}>\r\n                        <Input maxLength={11} prefix={<PhoneOutlined/>}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"密码\" name=\"password\" rules={[rules.required()]}>\r\n                        <Input.Password prefix={<LockOutlined/>}/>\r\n                    </Form.Item>\r\n                    {\r\n                        isRegister\r\n                            ? (\r\n                                <Form.Item label=\"账户类型\" name=\"type\" rules={[rules.required()]}>\r\n                                    <Radio.Group options={options} optionType=\"button\" buttonStyle=\"solid\"/>\r\n                                </Form.Item>\r\n                            )\r\n                            : null\r\n                    }\r\n                </Form>\r\n                <div className={styles.actions}>\r\n                    {isRegister\r\n                        ? (<Button type=\"primary\" onClick={() => validateForm(1)}>注册</Button>)\r\n                        : (<Button type=\"primary\" onClick={() => validateForm(2)}>登录</Button>)\r\n                    }\r\n\r\n                    {\r\n                        isRegister\r\n                            ? (<Button type=\"link\" onClick={() => setIsRegister(false)}>已有账号？去登录</Button>)\r\n                            : (<Button type=\"link\" onClick={() => setIsRegister(true)}>没有账号？去注册</Button>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Upload, message, Tooltip } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { RcFile } from 'antd/es/upload/interface'\r\nimport $http from \"../../http\"\r\nimport urls from \"../../http/urls\"\r\nimport styles from '../components.module.less'\r\n\r\ntype FileItem = RcFile\r\n\r\ninterface Props {\r\n    typeList?: string[]\r\n    uploadPath?: string\r\n    value?: string\r\n    maxSize?: number // M\r\n    onChange?: (value: string) => void\r\n}\r\n\r\nexport default function CustomUpload(props: Props){\r\n\r\n    let {\r\n        value = '',\r\n        maxSize = 10,\r\n        typeList = ['.jpg', '.jpeg', '.png', '.gif'],\r\n        uploadPath = '/file/upload',\r\n        onChange\r\n    } = props\r\n\r\n    const imgFullPath = urls.IMG_HOST + value\r\n\r\n    const beforeUpload = (file: FileItem, fileList?: Array<FileItem>) => {\r\n        const ldx = file.name?.lastIndexOf('.')\r\n        const ext = file.name?.substring(ldx as number)\r\n        const isLimit = file.size / 1024 / 1024 > maxSize\r\n        const isAllow = typeList.includes(ext as string)\r\n        if(!isAllow){\r\n            message.error(`仅允许 ${typeList.join('/')} 格式`)\r\n        }\r\n        if (isLimit) {\r\n            message.error(`最大不能超过 ${maxSize}M`)\r\n        }\r\n        return isAllow && !isLimit\r\n    }\r\n\r\n    const customRequest = (prop: any) => {\r\n        const { file } = prop\r\n        if(beforeUpload(file)){\r\n            $http.fetch(uploadPath, { file, lastFilePath: value }, { formData: true }).then(r => {\r\n                if(r.success){\r\n                    onChange?.(r.path)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Upload\r\n            accept=\"image/*\"\r\n            showUploadList={false}\r\n            beforeUpload={beforeUpload}\r\n            customRequest={customRequest}\r\n        >\r\n            {\r\n                value\r\n                    ? <Tooltip title=\"点击修改\">\r\n                        <img src={imgFullPath} className={styles.img_preview} />\r\n                    </Tooltip>\r\n                    : <div className={`${styles.upload_action} upload_action`}>\r\n                        <PlusOutlined style={{fontSize: '36px'}} />\r\n                        <p>点击上传</p>\r\n                    </div>\r\n            }\r\n        </Upload>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport { Descriptions } from 'antd'\r\nimport CustomUpload from '@/components/customAnt/upload'\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    UserStore: any\r\n}\r\n\r\nfunction AdminIndex({UserStore}: Props){\r\n    const { userInfo } = UserStore\r\n\r\n    const onAvatarChange = () => {\r\n        UserStore.updateUser()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Descriptions title=\"个人信息\" bordered>\r\n                <Descriptions.Item label=\"用户名\">{ userInfo.name }</Descriptions.Item>\r\n                <Descriptions.Item label=\"手机号\">{ userInfo.mobile }</Descriptions.Item>\r\n                <Descriptions.Item label=\"密码\">{ userInfo.password }</Descriptions.Item>\r\n                <Descriptions.Item label=\"注册时间\">{ userInfo.create_time }</Descriptions.Item>\r\n                <Descriptions.Item label=\"最后修改时间\">{ userInfo.modify_time }</Descriptions.Item>\r\n                <Descriptions.Item label=\"头像\">\r\n                    <CustomUpload value={userInfo.avatar} onChange={onAvatarChange} uploadPath={urls.adminUpdateAvatar}/>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(AdminIndex))\r\n","import React from 'react'\r\nimport styles from '../layout.module.less'\r\n\r\ninterface Props{\r\n    top: React.ReactNode\r\n    actions: React.ReactNode\r\n    table: React.ReactNode\r\n}\r\n\r\nexport default function LayoutList({top, table, actions}: Props){\r\n    return (\r\n        <div className=\"Layout_list\">\r\n            <div className=\"filter_form\">\r\n                { top }\r\n            </div>\r\n            <div className={styles.filter_actions}>\r\n                { actions }\r\n            </div>\r\n            <div className=\"list_content\">\r\n                { table }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","enum PageState{\r\n    loading,\r\n    completed,\r\n    error\r\n}\r\n\r\nexport default PageState\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Table} from 'antd'\r\nimport { ColumnProps, TablePaginationConfig } from 'antd/es/table'\r\nimport styles from '../components.module.less'\r\nimport {ExpandableConfig} from \"rc-table/lib/interface\"\r\nimport { debounce } from 'lodash'\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface Item{\r\n    [name: string]: any\r\n}\r\n\r\ninterface Props{\r\n    // columns: ColumnsType<Item>\r\n    pageState?: PageState\r\n    columns: ColumnProps<Item>[]\r\n    dataSource: Item[]\r\n    rowKey?: string\r\n    pagination?: TablePaginationConfig\r\n    onChange: (page: TablePaginationConfig, filters: any, sorter: any) => void\r\n    expandable?: ExpandableConfig<Item>\r\n}\r\n\r\nexport default function CustomTable({ columns, rowKey = 'id', onChange, pagination, dataSource, expandable, pageState }: Props){\r\n\r\n    const [tableScrollHeight, setTableScrollHeight] = useState<number>()\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', adjustTable)\r\n        return () => window.removeEventListener('resize', adjustTable)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        adjustTable()\r\n    }, [dataSource])\r\n\r\n    const modifyColumns: ColumnProps<Item>[] = [\r\n        {\r\n            title: '#',\r\n            dataIndex: '',\r\n            key: 'index',\r\n            render: (text: string, record: any, index: number) => {\r\n                return index + 1\r\n            }\r\n        },\r\n        ...columns,\r\n    ]\r\n    modifyColumns.splice(-1, 0, {\r\n        title: '最后修改时间',\r\n        dataIndex: 'modify_time',\r\n        key: 'modify_time'\r\n    })\r\n\r\n    const adjustTable = debounce(async () => {\r\n        const rh = document.querySelector('#layoutRight')?.clientHeight as number\r\n        const dh = document.documentElement.clientHeight\r\n        const table = document.querySelector('#pageTable')\r\n        if(table){\r\n            const offset = table.getBoundingClientRect()\r\n            if(rh > dh){\r\n                setTableScrollHeight(offset.height - (rh - dh) - 110)\r\n            }else{\r\n                setTableScrollHeight(rh - offset.top - 150)\r\n            }\r\n        }\r\n    }, 20)\r\n\r\n    return (\r\n        <Table<Item>\r\n            id=\"pageTable\"\r\n            size=\"middle\"\r\n            rowClassName={(record, index) => {\r\n                if(index % 2 === 1) return styles.table_striped\r\n                return ''\r\n            }}\r\n            loading={pageState === PageState.loading}\r\n            pagination={pagination}\r\n            onChange={onChange}\r\n            dataSource={ dataSource }\r\n            expandable={expandable}\r\n            scroll={{y: tableScrollHeight}}\r\n            rowKey={rowKey}>\r\n            {\r\n                modifyColumns.map(column => {\r\n                    return (\r\n                        <Table.Column<Item>\r\n                            {...column}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Table>\r\n    )\r\n}\r\n","import {useEffect, useState} from \"react\"\r\n\r\n// 组件是否已卸载\r\nfunction useUnmounted(){\r\n    const [unmounted, setUnmounted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUnmounted(false)\r\n        return () => {\r\n            setUnmounted(true)\r\n        }\r\n    }, [])\r\n\r\n    return unmounted\r\n}\r\n\r\nexport { useUnmounted }\r\n","import {useCallback, useEffect, useState} from 'react'\r\nimport { message } from 'antd'\r\nimport $http from \"@/http\"\r\nimport {PaginationProps} from \"antd/es\"\r\nimport {useUnmounted} from './useUnmounted'\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface PageListProps{\r\n    url: string\r\n    params?: FetchParams\r\n    options?: RequestOptions\r\n}\r\n\r\n// 列表查询\r\nfunction usePageList({ url, params, options }: PageListProps){\r\n    const [pageList, setPageList] = useState([])\r\n    const [pageState, setPageState] = useState<PageState>(PageState.loading)\r\n    const [pagination, setPagination] = useState<PaginationProps>({\r\n        current: 1,\r\n        pageSize: 20,\r\n        total: 0,\r\n        pageSizeOptions: ['3', '5', '10', '20', '30'],\r\n        showSizeChanger: true\r\n    })\r\n    const unmounted = useUnmounted()\r\n\r\n    const getPaginationParams = useCallback(() => {\r\n        return {\r\n            current: pagination.current,\r\n            pageSize: pagination.pageSize,\r\n        }\r\n    }, [pagination.current, pagination.pageSize])\r\n\r\n    const getPageList = (p: FetchParams = {}) => {\r\n        setPageState(PageState.loading)\r\n        $http.fetch(url, {...params, ...getPaginationParams(), ...p}, options).then( r => {\r\n            if(!unmounted && r.success){\r\n                setPageState(PageState.completed)\r\n                setPageList(r.list)\r\n                setPagination(preVal => {\r\n                    return {\r\n                        ...preVal,\r\n                        total: r.amount,\r\n                    }\r\n                })\r\n            }else{\r\n                message.error('获取列表出错')\r\n            }\r\n        }).catch(e => {\r\n            setPageState(PageState.error)\r\n            message.error('获取列表出错')\r\n        })\r\n    }\r\n\r\n    useEffect(getPageList, [ getPaginationParams ])\r\n\r\n    // 如果是数组，使用 setPagination 时会报错，具体 https://stackoverflow.com/questions/65657572/custom-useinput-hook-and-typescript-error\r\n    return { pageList, pagination, getPageList, setPagination, pageState }\r\n}\r\n\r\nexport { usePageList }\r\n","import React from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag, message } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport $http from \"@/http\"\r\n\r\nfunction AdminList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination, pageState } = usePageList({\r\n        url: urls.adminList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        setPagination(preVal => {\r\n            return {\r\n                ...preVal,\r\n                current: 1\r\n            }\r\n        })\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleChangeAdminState = (id: number, state: number) => {\r\n        $http.fetch(urls.adminChangeState, { state, id }).then(r => {\r\n            if(r.success){\r\n                message.success(r.msg)\r\n                onQuery()\r\n                return r\r\n            }else{\r\n                message.error(r.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"用户名\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"手机号\" name=\"mobile\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '手机号',\r\n            dataIndex: 'mobile',\r\n            key: 'mobile'\r\n        },\r\n        {\r\n            title: '权限类型',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n            render: (text: string, record: any, index: number) => {\r\n                let r = ''\r\n                switch (record.type) {\r\n                    case 1:\r\n                        r = '超级管理员'\r\n                        break\r\n                    default:\r\n                    case 2:\r\n                        r = '店铺管理员'\r\n                        break\r\n                }\r\n                return r\r\n            }\r\n        },\r\n        {\r\n            title: '用户状态',\r\n            dataIndex: 'state',\r\n            key: 'state',\r\n            render: (text: string, record: any, index: number) => {\r\n                return (\r\n                    <Tag color={record.state === 1 ? \"green\" : 'grey'}>\r\n                        {record.state === 1 ? \"启用\" : '禁用'}\r\n                    </Tag>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '头像',\r\n            dataIndex: 'avatar',\r\n            key: 'avatar',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.avatar ? (\r\n                    <img src={urls.IMG_HOST + record.avatar} style={{maxWidth: '50px', height: '50px'}}/>\r\n                ) : '/';\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n                const disabled = UserStore.userInfo.id === record.id\r\n\r\n                return (\r\n                    <p>\r\n                        {\r\n                            record.state === 1\r\n                                ? <Button type=\"link\" disabled={disabled} onClick={() => handleChangeAdminState(record.id, 2)}>禁用</Button>\r\n                                : <Button type=\"link\" disabled={disabled} onClick={() => handleChangeAdminState(record.id, 1)}>启用</Button>\r\n                        }\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <LayoutList\r\n            top={top}\r\n            actions={actions}\r\n            table={<CustomTable\r\n                columns={columns}\r\n                onChange={handleTableChange}\r\n                dataSource={pageList}\r\n                pageState={pageState}\r\n                pagination={pagination}\r\n            />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(AdminList))\r\n","import React from 'react'\r\nimport { Drawer } from 'antd'\r\n\r\ninterface Props{\r\n    title: string\r\n    onClose: () => void\r\n    visible: boolean\r\n    content: React.ReactNode\r\n    width?: number\r\n}\r\n\r\nexport default function CustomDrawer({ title, onClose, visible, content, width = 500 }: Props){\r\n    return (\r\n        <Drawer title={title} onClose={onClose} visible={visible} width={width}>\r\n            {content}\r\n        </Drawer>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Form, Input, message, Spin} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n}\r\n\r\nexport default function GoodsLabelEdit({id, onClose, visible}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    const [pageState, setPageState] = useState<PageState>(PageState.completed)\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [visible])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                name: '',\r\n                color: '#000'\r\n            })\r\n            return\r\n        }\r\n\r\n        setPageState(PageState.loading)\r\n        $http.fetch(urls.goodsLabelDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.data)\r\n                setPageState(PageState.completed)\r\n            }else{\r\n                setPageState(PageState.error)\r\n                message.error(r.msg)\r\n            }\r\n        }).catch(e => {\r\n            setPageState(PageState.error)\r\n            message.error('获取信息出错')\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.goodsLabelSave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={pageState === PageState.loading}>\r\n                <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                    <Form.Item label=\"标签名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"颜色\" name=\"color\" rules={[rules.required()]}>\r\n                        <input type=\"color\" />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Spin>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag, message } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport GoodsLabelEdit from \"@/views/goodsLabel/Edit\"\r\n\r\nfunction GoodsLabelList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const { UserStore } = props\r\n    let { pageList, pagination, getPageList, setPagination, pageState } = usePageList({\r\n        url: urls.goodsLabelList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        setPagination(preVal => {\r\n            return {\r\n                ...preVal,\r\n                current: 1\r\n            }\r\n        })\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleEdit = (id: string = '') => {\r\n        if(!id && !UserStore.userInfo.shop_id){\r\n            message.error('请先添加店铺')\r\n            return\r\n        }\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"标签名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={() => handleEdit()}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '颜色',\r\n            dataIndex: 'color',\r\n            key: 'color',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <Tag color={record.color}>\r\n                        {record.color}\r\n                    </Tag>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pageState={pageState}\r\n                    pagination={pagination}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑标签' : '新建标签'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<GoodsLabelEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsLabelList))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Input, Button, Cascader } from 'antd'\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport { CascaderProps } from 'antd/es/cascader'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport styles from '../components.module.less'\r\nimport {useUnmounted} from \"@/hooks\"\r\n\r\ntype OnChange = CascaderProps['onChange']\r\n\r\ninterface Option{\r\n    fullname: string,\r\n    id: string,\r\n    location: {\r\n        lat: number,\r\n        lng: number\r\n    },\r\n    name: string,\r\n    pinyin: string[],\r\n    children?: Option[],\r\n    loading?: boolean,\r\n    isLeaf?: boolean,\r\n    level: number,\r\n}\r\n\r\ninterface Props{\r\n    addressName: string\r\n    value?: string[]\r\n    onChange?: OnChange\r\n    onUpdate?: (adr: string) => void\r\n}\r\n\r\nexport default function AddressPicker({ addressName, value, onChange, onUpdate }: Props){\r\n    const [options, setOptions] = React.useState([])\r\n    const [addressText, setAddressText] = useState(addressName)\r\n    const unmounted = useUnmounted()\r\n\r\n    useEffect(() => {\r\n        initData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!unmounted) {\r\n            setAddressText(addressName)\r\n        }\r\n    }, [addressName])\r\n\r\n    const initData = async () => {\r\n        const d = await fetchChildren()\r\n        const result = d.result[0].map((item: any) => {\r\n            item.level = 1\r\n            item.isLeaf = false\r\n            return item\r\n        })\r\n        if(!unmounted){\r\n            setOptions(result)\r\n        }\r\n    }\r\n\r\n    const loadData = async (selectedOptions: Option[]) => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true\r\n        const d = await fetchChildren(targetOption.id)\r\n        const list = d.result[0]\r\n        if(targetOption.level != 3){\r\n            targetOption.children = list.map((item: any) => {\r\n                item.level = targetOption.level + 1\r\n                item.isLeaf = item.level === 3\r\n                return item\r\n            })\r\n        }\r\n        targetOption.loading = false\r\n        if(!unmounted){\r\n            setOptions([...options])\r\n        }\r\n    }\r\n\r\n    const fetchChildren = async (id = '') => {\r\n        return $http.fetch(urls.addressChildren, { parentCode: id }, { method: 'get' })\r\n    }\r\n\r\n    const onValueChange = (val: any, options: any) => {\r\n        const adr = options.map((op: Option) => op ? op.fullname : '').join('')\r\n        if(!unmounted) {\r\n            setAddressText(adr)\r\n        }\r\n        onUpdate?.(adr)\r\n        onChange?.(val, options)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.picker_container}>\r\n            <Input disabled value={addressText} title={addressText}/>\r\n            <Cascader\r\n                // defaultValue={value}\r\n                value={value} // 导致 onChange 参数最后一个选项为空\r\n                options={options}\r\n                fieldNames={{ label: 'fullname', value: 'id' }}\r\n                onChange={onValueChange}\r\n                loadData={(val: any) => loadData(val)}\r\n                // changeOnSelect\r\n            >\r\n                <Button icon={<EditOutlined />} />\r\n            </Cascader>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport { useUnmounted } from '@/hooks'\r\n\r\ninterface Props{\r\n    value?: string\r\n    onChange?: (val: string) => void\r\n}\r\n\r\n/** 店铺类别选择器 */\r\nexport default function ShopCategorySelect({ value, onChange }: Props){\r\n    const [cateList, setCateList] = useState([])\r\n    const unmounted = useUnmounted()\r\n\r\n    useEffect(() => {\r\n        $http.fetch(urls.shopCategoryList, {},{ method: 'get' }).then(r => {\r\n            if(r.success && !unmounted) setCateList(r.list)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Select value={value} onChange={onChange} allowClear>\r\n            {\r\n                cateList.map((cate: any) => (\r\n                    <Select.Option value={cate.id} key={cate.id}>\r\n                        {cate.name}\r\n                    </Select.Option>\r\n                ))\r\n            }\r\n        </Select>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Form, Input, InputNumber, message, Spin, TimePicker} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport CustomUpload from \"@/components/customAnt/upload\"\r\nimport styles from './shop.module.less'\r\nimport AddressPicker from \"@/components/customAnt/addressPicker\"\r\nimport ShopCategorySelect from \"@/components/business/shopCategorySelect\"\r\nimport {inject, observer} from \"mobx-react\"\r\nimport moment from \"moment\"\r\nimport {useUnmounted} from \"@/hooks\"\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose?: () => void\r\n    visible: boolean\r\n    UserStore?: any\r\n}\r\n\r\nfunction ShopEdit({id, onClose, visible, UserStore}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    let [addressName, setAddressName] = useState<any>('')\r\n    const [address, setAddress] = useState('')\r\n    const unmounted = useUnmounted()\r\n    const [pageState, setPageState] = useState<PageState>(PageState.completed)\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [id])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            setAddressName('')\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                create_time: '',\r\n                modify_time: '',\r\n                name: '', // 店名\r\n                contract: '', // 联系电话\r\n                shop_category_id: '', // 分类id\r\n                desc: '', // 店铺简介\r\n                slogan: '', // 店铺标语\r\n                opening_range: [],\r\n                avatar: '', // 头像\r\n                business_license: '', // 营业执照\r\n                service_permission: '', // 服务许可证\r\n                deliver_fee: '', // 配送费\r\n                deliver_fee_start_amount: '', // 配送费起送价\r\n                provinceCode: '',\r\n                cityCode: '',\r\n                countyCode: '',\r\n                codeList: [],\r\n                headAddress: '',\r\n                tailAddress: '',\r\n            })\r\n            return\r\n        }\r\n\r\n        setPageState(PageState.loading)\r\n        $http.fetch(urls.shopDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                const data = r.info\r\n                const timeRange = data.opening_range ? data.opening_range.map((t: string) => moment(t)) : []\r\n                formRef.setFieldsValue({\r\n                    ...r.info,\r\n                    opening_range: timeRange,\r\n                    codeList: [r.info.provinceCode, r.info.cityCode, r.info.countyCode]\r\n                })\r\n                if(!unmounted){\r\n                    setPageState(PageState.completed)\r\n                    setAddressName(r.info.headAddress)\r\n                }\r\n            }else{\r\n                if(!unmounted){\r\n                    setPageState(PageState.error)\r\n                }\r\n                message.error(r.msg)\r\n            }\r\n        }).catch(e => {\r\n            setPageState(PageState.error)\r\n            message.error('获取信息出错')\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            const [ provinceCode, cityCode, countyCode ] = val.codeList\r\n            $http.fetch(urls.shopSave, { ...val, provinceCode, cityCode, countyCode, headAddress: address || addressName, id }).then( r => {\r\n                if(r.success){\r\n                    onClose?.()\r\n                    message.success(r.msg)\r\n                    if(!id) {\r\n                        UserStore.updateUser()\r\n                    }\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={pageState === PageState.loading}>\r\n                <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                    <Form.Item label=\"店铺名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"联系电话\" name=\"contract\" rules={[rules.required(), rules.mobile()]}>\r\n                        <Input maxLength={11}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"店铺类别\" name=\"shop_category_id\" rules={[rules.required()]}>\r\n                        <ShopCategorySelect />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"店铺简介\" name=\"desc\" rules={[rules.required()]}>\r\n                        <Input.TextArea />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"店铺标语\" name=\"slogan\">\r\n                        <Input.TextArea />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"营业时间\" name=\"opening_range\">\r\n                        <TimePicker.RangePicker format={'HH:mm'}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"店铺头像\" name=\"avatar\" rules={[rules.required()]}>\r\n                        <CustomUpload />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"营业执照\" name=\"business_license\" rules={[rules.required()]}>\r\n                        <CustomUpload />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"服务许可证\" name=\"service_permission\" rules={[rules.required()]}>\r\n                        <CustomUpload />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"配送费\" name=\"deliver_fee\" rules={[rules.required()]}>\r\n                        <InputNumber className={styles.number_input}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"起送价\" name=\"deliver_fee_start_amount\" rules={[rules.required()]}>\r\n                        <InputNumber className={styles.number_input}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"地区\" name=\"codeList\" rules={[rules.required()]}>\r\n                        <AddressPicker addressName={addressName} onUpdate={ (adr: string) => setAddress(adr) }/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"详细地址\" name=\"tailAddress\" rules={[rules.required()]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Spin>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopEdit))\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport ShopEdit from \"@/views/shop/Edit\"\r\nimport ShopCategorySelect from \"@/components/business/shopCategorySelect\"\r\nimport styles from './shop.module.less'\r\nimport moment from \"moment\"\r\n\r\nfunction ShopList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    let { pageList, pagination, getPageList, setPagination, pageState } = usePageList({\r\n        url: urls.shopList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        setPagination(preVal => {\r\n            return {\r\n                ...preVal,\r\n                current: 1\r\n            }\r\n        })\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleEdit = (id: string = '') => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"店铺名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"店铺类别\" name=\"shop_category_id\">\r\n                        <ShopCategorySelect />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={() => handleEdit()}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '店铺名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '联系电话',\r\n            dataIndex: 'contract',\r\n            key: 'contract'\r\n        },\r\n        {\r\n            title: '所属分类',\r\n            dataIndex: 'shop_category',\r\n            key: 'shop_category',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return record.shop_category.name\r\n            }\r\n        },\r\n        {\r\n            title: '简介',\r\n            dataIndex: 'desc',\r\n            key: 'desc'\r\n        },\r\n        {\r\n            title: '地址',\r\n            dataIndex: 'headAddress',\r\n            key: 'headAddress',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.headAddress + record.tailAddress\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                    pageState={pageState}\r\n                    expandable={{\r\n                        expandedRowRender: (record) => (<RowExpanded record={record}/>)\r\n                    }}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑店铺' : '新建店铺'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<ShopEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\ninterface RowExpandedProps{\r\n    record: any\r\n}\r\n\r\nfunction RowExpanded({ record }: RowExpandedProps){\r\n    const { admin } = record\r\n    return (\r\n        <Form layout=\"inline\" labelCol={{span: 6}} wrapperCol={{span: 18}} className={styles.expanded_form}>\r\n            <Form.Item label=\"店铺名称\">\r\n                <span className={styles.expand_item_content}>{record.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"联系电话\">\r\n                <span className={styles.expand_item_content}>{record.contract}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"所属分类\">\r\n                <span className={styles.expand_item_content}>{record.shop_category.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"简介\">\r\n                <span className={styles.expand_item_content}>{record.desc}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"标语\">\r\n                <span className={styles.expand_item_content}>{record.slogan}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"营业时间\">\r\n                <span className={styles.expand_item_content}>{\r\n                    record.opening_range.map((time: any) => moment(time).format('HH:mm:ss')).join(' 至 ')\r\n                }</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"配送费\">\r\n                <span className={styles.expand_item_content}>{record.deliver_fee}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"起送价\">\r\n                <span className={styles.expand_item_content}>{record.deliver_fee_start_amount}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"地址\">\r\n                <span className={styles.expand_item_content}>{ record.headAddress + record.tailAddress }</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"创建人\">\r\n                <span className={styles.expand_item_content}>{admin.name}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"创建时间\">\r\n                <span className={styles.expand_item_content}>{record.create_time}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"最后修改时间\">\r\n                <span className={styles.expand_item_content}>{record.modify_time}</span>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopList))\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Form, Input, message, Spin} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport CustomUpload from \"@/components/customAnt/upload\"\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n}\r\n\r\nexport default function ShopCategoryEdit({id, onClose, visible}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    const [pageState, setPageState] = useState<PageState>(PageState.completed)\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [id])\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            formRef.setFieldsValue({\r\n                id: '',\r\n                name: '',\r\n                icon: ''\r\n            })\r\n            return\r\n        }\r\n\r\n        setPageState(PageState.loading)\r\n        $http.fetch(urls.shopCategoryDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.data)\r\n                setPageState(PageState.completed)\r\n            }else{\r\n                setPageState(PageState.error)\r\n                message.error(r.msg)\r\n            }\r\n        }).catch(e => {\r\n            setPageState(PageState.error)\r\n            message.error('获取信息出错')\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.shopCategorySave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={pageState === PageState.loading}>\r\n                <Form form={formRef} labelCol={{span: 8}} wrapperCol={{span: 12}}>\r\n                    <Form.Item label=\"分类名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"图标\" name=\"icon\" rules={[rules.required()]}>\r\n                        <CustomUpload />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Spin>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport ShopCategoryEdit from \"@/views/shopCategory/Edit\"\r\n\r\nfunction ShopCategoryList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    let { pageList, pagination, getPageList, setPagination, pageState } = usePageList({\r\n        url: urls.shopCategoryList,\r\n        options: { method: 'get' }\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        setPagination(preVal => {\r\n            return {\r\n                ...preVal,\r\n                current: 1\r\n            }\r\n        })\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleEdit = (id: string = '') => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"分类名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={() => handleEdit()}>新增</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '图标',\r\n            dataIndex: 'icon',\r\n            key: 'icon',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.icon ? (\r\n                    <img src={urls.IMG_HOST + record.icon} style={{maxWidth: '50px', height: '50px'}}/>\r\n                ) : '/';\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pageState={pageState}\r\n                    pagination={pagination}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑分类' : '新建分类'}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<ShopCategoryEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopCategoryList))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Button, Tree, Dropdown, Modal, Menu, Form, Input, message} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport {useUnmounted} from \"@/hooks\"\r\n\r\ninterface Item{\r\n    id: number | string,\r\n    create_time: string,\r\n    modify_time: string,\r\n    name: string,\r\n    level: number | string, // 节点等级，0开始\r\n    parent_id: number | string, // 上级节点\r\n    shop_id: number | string,\r\n    isLeaf?: boolean\r\n    children?: Item[]\r\n}\r\n\r\ninterface DataNode {\r\n    title: string;\r\n    key: string;\r\n    id: string;\r\n    isLeaf?: boolean;\r\n    children?: DataNode[];\r\n}\r\n\r\ninterface Props{\r\n    shop_id: number\r\n}\r\n\r\nexport default function GoodsCategory({ shop_id }: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    const [treeData, setTreeData] = useState<DataNode[]>([])\r\n    const [editNode, setEditNode] = useState<any>()\r\n    const [menuKey, setMenuKey] = useState('')\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [postForm, setPostForm] = useState<any>() // 提交的form，含antd Form组件其他不包含的必需信息\r\n    const unmounted = useUnmounted()\r\n\r\n    useEffect(() => {\r\n        getChildren(0).then( (r: any) => {\r\n            if(!unmounted) {\r\n                setTreeData(r)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onAddFirst = () => {\r\n        if(!shop_id){\r\n            message.error('请先添加店铺')\r\n            return\r\n        }\r\n\r\n        setEditNode(null)\r\n        setShowEdit(true)\r\n        setMenuKey('2')\r\n        setPostForm({\r\n            parent_id: 0,\r\n            name: '',\r\n            shop_id,\r\n            level: 0\r\n        })\r\n        formRef.setFieldsValue({\r\n            name: '',\r\n        })\r\n    }\r\n\r\n    // 给节点添加子节点\r\n    const appendTreeChildren = (list: DataNode[], key: React.Key, children: DataNode[]): DataNode[] => {\r\n        return list.map(node => {\r\n            if (node.key === key) {\r\n                return {\r\n                    ...node,\r\n                    children,\r\n                };\r\n            }\r\n            if (node.children) {\r\n                return {\r\n                    ...node,\r\n                    children: appendTreeChildren(node.children, key, children),\r\n                };\r\n            }\r\n            return node\r\n        });\r\n    }\r\n\r\n    const onLoadData = (treeNode: any) => {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (treeNode.children) {\r\n                return resolve()\r\n            }\r\n            getChildren(treeNode.id).then(r => {\r\n                setTreeData(origin => {\r\n                    return appendTreeChildren(origin, treeNode.key, r)\r\n                })\r\n                return resolve()\r\n            }).catch(e => {\r\n                reject()\r\n            })\r\n        })\r\n    }\r\n\r\n    const onContextMenuClick = (key: string, node: any) => {\r\n        setMenuKey(key)\r\n        setEditNode(node)\r\n        switch(key){\r\n            case '1':\r\n                formRef.setFieldsValue(node)\r\n                setPostForm(node)\r\n                setShowEdit(true)\r\n                break\r\n\r\n            case '2':\r\n                formRef.setFieldsValue({\r\n                    name: '',\r\n                })\r\n                setPostForm({\r\n                    parent_id: node.id,\r\n                    name: '',\r\n                    shop_id,\r\n                    level: node.level + 1\r\n                })\r\n                setShowEdit(true)\r\n                break\r\n        }\r\n    }\r\n\r\n    const titleRender = (nodeData: any): React.ReactNode => {\r\n        const overlay = (\r\n            <Menu onClick={({ key: menuKey }) => onContextMenuClick(menuKey, nodeData)}>\r\n                <Menu.Item key={'1'}> 修改名称 </Menu.Item>\r\n                { nodeData.level === 2 ? null : <Menu.Item key={'2'}> 添加子分类 </Menu.Item>}\r\n                <Menu.Item key={'3'}> 删除该分类及下级分类 </Menu.Item>\r\n            </Menu>\r\n        )\r\n        return (\r\n            <Dropdown overlay={overlay} trigger={['contextMenu']}>\r\n                <span>{nodeData.name}</span>\r\n            </Dropdown>\r\n        )\r\n    }\r\n\r\n    const getChildren = (parent_id: number): Promise<any> => {\r\n        // if(!shop_id) return Promise.resolve()\r\n\r\n        return $http.fetch(urls.goodsCategoryChildren, { shop_id, parent_id }, { method: 'get' }).then( r => {\r\n            if(r.success){\r\n                return r.list.map((item: any) => {\r\n                    item.key = item.id\r\n                    return item\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            let postData = {\r\n                ...postForm,\r\n                ...val\r\n            }\r\n            $http.fetch(urls.goodsCategorySave, postData).then(r => {\r\n                if(r.success){\r\n                    setShowEdit(false)\r\n\r\n                    // 修改节点名称\r\n                    if(menuKey === '1'){\r\n                        editNode.name = r.data.name\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                        return\r\n                    }\r\n\r\n                    // 新增节点\r\n                    let newData = r.data\r\n                    newData.key = newData.id\r\n                    if(!editNode){\r\n                        setTreeData([...treeData, newData])\r\n                    }else if(editNode.children){\r\n                        editNode.children.push(newData)\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                    }else{\r\n                        editNode.children = [newData]\r\n                        const old = treeData\r\n                        setTreeData([])\r\n                        setTreeData(old)\r\n                    }\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>商品分类管理 <span style={{fontSize: '12px'}}>（节点右键添加子节点）</span></h3>\r\n            <Button onClick={onAddFirst}>添加一级分类</Button>\r\n            <Tree showLine loadData={onLoadData} treeData={treeData} titleRender={titleRender}>\r\n\r\n            </Tree>\r\n            <Modal title={menuKey === '1' ? '修改分类名称' : '新增下级分类'} visible={showEdit} onOk={saveForm} onCancel={() => setShowEdit(false)}>\r\n                <Form form={formRef}>\r\n                    {\r\n                        menuKey === '2'\r\n                            ? <Form.Item label=\"上级分类\">\r\n                                <Input disabled value={editNode?.name ?? '无'}/>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    <Form.Item label=\"分类名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input placeholder=\"请输入分类名称\"/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport ShopEdit from \"@/views/shop/Edit\"\r\nimport GoodsCategory from \"./_goodsCategory\"\r\nimport styles from './shop.module.less'\r\n\r\ninterface Props{\r\n    UserStore: any\r\n}\r\n\r\nfunction ShopManagement({ UserStore }: Props){\r\n    const shop_id = UserStore.userInfo.shop_id ?? ''\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <GoodsCategory shop_id={shop_id}/>\r\n                </Col>\r\n                <Col span={16}>\r\n                    <div className={styles.shop_manage_wrapper}>\r\n                        <ShopEdit id={shop_id} visible={true} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(ShopManagement))\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { UploadFile } from 'antd/es/upload/interface'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    typeList?: string[]\r\n    value?: string[]\r\n    uploadPath?: string\r\n    maxCount?: number\r\n    onChange?: (value: string[]) => void\r\n}\r\n\r\nexport default function UploadList({ typeList = ['.jpg', '.jpeg', '.png', '.gif'], value = [], onChange, uploadPath = '/file/upload', maxCount = 5 }: Props){\r\n    const [showPreview, setShowPreview] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState<string | undefined>('')\r\n\r\n    const completedFileList: unknown = useMemo(() => {\r\n        return value.map((path: string, index: number) => ({\r\n            uid: index,\r\n            url: urls.IMG_HOST + path\r\n        }))\r\n    }, [value])\r\n\r\n\r\n    const beforeUpload = (file: UploadFile, fileList?: Array<UploadFile>) => {\r\n        const ldx = file.name?.lastIndexOf('.')\r\n        const ext = file.name?.substring(ldx as number)\r\n        const typeCheck = typeList.includes(ext as string)\r\n        if(!typeCheck){\r\n            message.error(`仅允许 ${typeList.join('/')} 格式`)\r\n        }\r\n        return typeCheck\r\n    }\r\n\r\n    const customRequest = (prop: any) => {\r\n        const { file } = prop\r\n        if(beforeUpload(file)){\r\n            $http.fetch(uploadPath, { file }, { formData: true }).then(r => {\r\n                if(r.success){\r\n                    onChange?.([...value, r.path])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 移除文件\r\n    const removeFile = (file: UploadFile): Promise<boolean | void> => {\r\n        return new Promise((resolve, reject) => {\r\n            if(file.url){\r\n                const index = file.url.lastIndexOf('/upload/')\r\n                const path = file.url.substring(index + 8)\r\n                $http.fetch('/file/delete', { path }).then(r => {\r\n                    if(r.success){\r\n                        const idx = value.indexOf(path)\r\n                        value.splice(idx, 1)\r\n                        onChange?.([...value])\r\n                        message.success(r.msg)\r\n                        return resolve(true)\r\n                    }else{\r\n                        return reject()\r\n                    }\r\n                })\r\n            }else{\r\n                return reject()\r\n            }\r\n        })\r\n    }\r\n\r\n    const handlePreview = (file: UploadFile) => {\r\n        setPreviewImage(file.url)\r\n        setShowPreview(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Upload\r\n                // multiple\r\n                listType=\"picture-card\"\r\n                fileList={completedFileList as UploadFile[]}\r\n                customRequest={customRequest}\r\n                onPreview={handlePreview}\r\n                onRemove={removeFile}\r\n                accept=\"image/*\"\r\n            >\r\n                {\r\n                    (completedFileList as UploadFile[]).length <= maxCount\r\n                        ? (\r\n                            <>\r\n                                <PlusOutlined size={48}/>\r\n                            </>\r\n                        )\r\n                        : null\r\n                }\r\n            </Upload>\r\n            <Modal visible={showPreview} footer={null} onCancel={() => setShowPreview(false)}>\r\n                <img alt=\"example\" style={{width: '100%'}} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select } from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ninterface Props{\r\n    value?: string\r\n    onChange?: (val: string) => void\r\n}\r\n\r\n/** 商品标签选择器 */\r\nexport default function GoodsLabelSelect({ value, onChange }: Props){\r\n    const [optionList, setOptionList] = useState([])\r\n\r\n    useEffect(() => {\r\n        $http.fetch(urls.goodsLabelList, {},{ method: 'get' }).then(r => {\r\n            if(r.success) setOptionList(r.list)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Select value={value} onChange={onChange} allowClear mode=\"multiple\">\r\n            {\r\n                optionList.map((option: any) => (\r\n                    <Select.Option value={option.id} key={option.id}>\r\n                        {option.name}\r\n                    </Select.Option>\r\n                ))\r\n            }\r\n        </Select>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Cascader } from 'antd'\r\nimport { CascaderProps } from 'antd/es/cascader'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\n\r\ntype OnChange = CascaderProps['onChange']\r\n\r\ninterface Option{\r\n    fullname: string,\r\n    id: string,\r\n    location: {\r\n        lat: number,\r\n        lng: number\r\n    },\r\n    name: string,\r\n    pinyin: string[],\r\n    children?: Option[],\r\n    loading?: boolean,\r\n    isLeaf?: boolean,\r\n    level: number,\r\n}\r\n\r\ninterface Props{\r\n    value?: string[]\r\n    onChange?: OnChange\r\n    UserStore?: any\r\n}\r\n\r\nexport default function GoodsCategoryCascader({ value, onChange, UserStore }: Props){\r\n    const { userInfo } = UserStore\r\n    const [options, setOptions] = React.useState([])\r\n\r\n    useEffect(() => {\r\n        initData()\r\n    }, [])\r\n\r\n    const initData = async () => {\r\n        const d = await fetchChildren()\r\n        const result = d.map((item: any) => {\r\n            item.level = 1\r\n            item.isLeaf = false\r\n            return item\r\n        })\r\n        setOptions(result)\r\n    }\r\n\r\n    const loadData = async (selectedOptions: Option[]) => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true\r\n        const list = await fetchChildren(targetOption.id)\r\n        if(targetOption.level != 3){\r\n            targetOption.children = list.map((item: any) => {\r\n                item.level = targetOption.level + 1\r\n                item.isLeaf = item.level === 3\r\n                return item\r\n            })\r\n        }\r\n        targetOption.loading = false\r\n        setOptions([...options])\r\n    }\r\n\r\n    const fetchChildren = async (id: number | string = 0) => {\r\n        return $http.fetch(urls.goodsCategoryChildren, { shop_id: userInfo.shop_id, parent_id: id }, { method: 'get' }).then(r => {\r\n            if(r.success){\r\n                return r.list\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Cascader\r\n                // defaultValue={value}\r\n                value={value} // 导致 onChange 参数最后一个选项为空\r\n                options={options}\r\n                fieldNames={{ label: 'name', value: 'id' }}\r\n                onChange={onChange}\r\n                loadData={(val: any) => loadData(val)}\r\n                changeOnSelect\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Card, Form, Input, InputNumber, message, Spin} from 'antd'\r\nimport $http from \"@/http\"\r\nimport urls from \"@/http/urls\"\r\nimport rules from \"@/config/rules\"\r\nimport UploadList from \"@/components/customAnt/uploadList\"\r\nimport GoodsLabelSelect from './components/_goodsLabelSelect'\r\nimport GoodsCategoryCascader from './components/_goodsCategoryCascader'\r\nimport {inject, observer} from \"mobx-react\"\r\nimport styles from \"@/views/goods/goods.module.less\"\r\nimport PageState from \"@/config/pageState\"\r\n\r\ninterface Item {\r\n    id: number | string,\r\n    name: string,\r\n    category_ids: number[] | string[],\r\n    label_ids: number[] | string[],\r\n    desc: string,\r\n    pic_list: [],\r\n    sku_list: SkuItem[],\r\n}\r\n\r\ninterface SkuItem{\r\n    price: number | string,\r\n    pack_fee: number | string,\r\n    name: string,\r\n}\r\n\r\ninterface Props{\r\n    id?: number | string\r\n    onClose: () => void\r\n    visible: boolean\r\n    UserStore?: any\r\n}\r\n\r\nfunction GoodsEdit({id, onClose, UserStore}: Props){\r\n    const [ formRef ] = Form.useForm()\r\n    const [pageState, setPageState] = useState<PageState>(PageState.completed)\r\n\r\n    useEffect(() => {\r\n        initForm()\r\n    }, [id])\r\n\r\n    const createSkuItem = (): SkuItem => {\r\n        return {\r\n            price: '',\r\n            pack_fee: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    const initForm = () => {\r\n        if(!id) {\r\n            let form: Item = {\r\n                id: '',\r\n                name: '',\r\n                category_ids: [],\r\n                label_ids: [],\r\n                desc: '',\r\n                sku_list: [],\r\n                pic_list: [],\r\n            }\r\n            form.sku_list = [createSkuItem()]\r\n            formRef.setFieldsValue(form)\r\n            return\r\n        }\r\n\r\n        setPageState(PageState.loading)\r\n        $http.fetch(urls.goodsDetail, { id }, {method: 'get'}).then( r => {\r\n            if(r.success){\r\n                formRef.setFieldsValue(r.info)\r\n                setPageState(PageState.completed)\r\n            }else{\r\n                setPageState(PageState.error)\r\n                message.error(r.msg)\r\n            }\r\n        }).catch(e => {\r\n            setPageState(PageState.error)\r\n            message.error('获取信息出错')\r\n        })\r\n    }\r\n\r\n    const saveForm = () => {\r\n        formRef.validateFields().then(val => {\r\n            $http.fetch(urls.goodsSave, { ...val, id }).then( r => {\r\n                if(r.success){\r\n                    onClose()\r\n                    message.success(r.msg)\r\n                }else{\r\n                    message.error(r.msg)\r\n                }\r\n            })\r\n        }).catch(e => {\r\n            console.log('--------------', e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={pageState === PageState.loading}>\r\n                <Form form={formRef} name=\"baseForm\" labelCol={{span: 6}} wrapperCol={{span: 18}}>\r\n                    <Form.Item label=\"商品名称\" name=\"name\" rules={[rules.required()]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"商品描述\" name=\"desc\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"商品标签\" name=\"label_ids\" rules={[rules.required()]}>\r\n                        <GoodsLabelSelect />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"所属分类\" name=\"category_ids\" rules={[rules.required()]}>\r\n                        <GoodsCategoryCascader UserStore={UserStore}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"商品图片\" name=\"pic_list\" rules={[rules.required()]}>\r\n                        <UploadList/>\r\n                    </Form.Item>\r\n                    <Form.List name=\"sku_list\">\r\n                        {(fields, { add, remove }) => (\r\n                            <>\r\n                                <h4>Sku列表 <Button onClick={() => add()} type=\"text\" style={{color: '#4098ef'}}>添加</Button></h4>\r\n                                {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                                    <div key={key} className={styles.sku_item_wrapper}>\r\n                                        <Card>\r\n                                            <Form.Item {...restField} fieldKey={[fieldKey, 'name']} label=\"名称\" name={[name, 'name']} rules={[rules.required()]}>\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item {...restField} fieldKey={[fieldKey, 'price']} label=\"价格\" name={[name, 'price']} rules={[rules.required()]}>\r\n                                                <InputNumber />\r\n                                            </Form.Item>\r\n                                            <Form.Item {...restField} fieldKey={[fieldKey, 'pack_fee']} label=\"包装费\" name={[name, 'pack_fee']} rules={[rules.required()]}>\r\n                                                <InputNumber />\r\n                                            </Form.Item>\r\n                                        </Card>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </Form.List>\r\n                </Form>\r\n            </Spin>\r\n            <Button type=\"primary\" onClick={saveForm}>保存</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsEdit))\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Row, Col, Button, Tag } from 'antd'\r\nimport { observer, inject } from 'mobx-react'\r\nimport LayoutList from \"@/views/layout/components/_listContent\"\r\nimport CustomTable from \"@/components/customAnt/table\"\r\nimport CustomDrawer from \"@/components/customAnt/drawer\"\r\nimport urls from \"@/http/urls\"\r\nimport {TablePaginationConfig} from \"antd/es/table\"\r\nimport { usePageList } from \"@/hooks\"\r\nimport GoodsEdit from \"./Edit\"\r\n\r\nfunction GoodsList(props: any){\r\n    const [ formRef ] = Form.useForm()\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const { pageList, pagination, getPageList, setPagination, pageState } = usePageList({\r\n        url: urls.goodsList\r\n    })\r\n\r\n    const onQuery = (init: boolean = false) => {\r\n        const val = formRef.getFieldsValue()\r\n        setPagination(preVal => {\r\n            return {\r\n                ...preVal,\r\n                current: 1\r\n            }\r\n        })\r\n        getPageList(val)\r\n    }\r\n\r\n    const onResetQuery = (e: any) => {\r\n        formRef.resetFields()\r\n        onQuery(true)\r\n    }\r\n\r\n    const handleTableChange = (page: TablePaginationConfig, filters: any, sorter: any) => {\r\n        setPagination(page)\r\n    }\r\n\r\n    const handleEdit = (id: string = '') => {\r\n        setEditId(id)\r\n        setEditVisible(true)\r\n    }\r\n\r\n    const onCloseEdit = () => {\r\n        setEditVisible(false)\r\n        onQuery()\r\n    }\r\n\r\n    const exportExcel = () => {\r\n        const form = document.querySelector('#downloadForm') as HTMLFormElement\r\n        form.submit()\r\n    }\r\n\r\n    const top = (\r\n        <Form form={formRef}>\r\n            <Row gutter={[0, 10]}>\r\n                <Col span={8}>\r\n                    <Form.Item label=\"商品名称\" name=\"name\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n\r\n    const actions = (\r\n        <>\r\n            <Button onClick={() => onQuery()}>查询</Button>\r\n            <Button onClick={onResetQuery}>重置</Button>\r\n            <Button onClick={() => handleEdit()}>新增</Button>\r\n            <Button onClick={exportExcel}>导出</Button>\r\n        </>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: '商品描述',\r\n            dataIndex: 'desc',\r\n            key: 'desc'\r\n        },\r\n        {\r\n            title: '商品标签',\r\n            dataIndex: 'label_list',\r\n            key: 'label_list',\r\n            width: 200,\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.label_list.map((label: any) => (\r\n                    <Tag key={label.id} color={label.color}>{ label.name }</Tag>\r\n                ))\r\n            }\r\n        },\r\n        {\r\n            title: '所属分类',\r\n            dataIndex: 'category_list',\r\n            key: 'category_list',\r\n            render: (text: string, record: any, index: number) => {\r\n                return record.category_list.map((c: any) => c.name).join('/')\r\n            }\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time'\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            render: (text: string, record: any, index: number) => {\r\n\r\n                return (\r\n                    <p>\r\n                        <Button type=\"link\" onClick={() => handleEdit(record.id)}>编辑</Button>\r\n                    </p>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <LayoutList\r\n                top={top}\r\n                actions={actions}\r\n                table={<CustomTable\r\n                    columns={columns}\r\n                    onChange={handleTableChange}\r\n                    dataSource={pageList}\r\n                    pagination={pagination}\r\n                    pageState={pageState}\r\n                />}\r\n            />\r\n            <CustomDrawer\r\n                title={editId ? '编辑商品' : '新建商品'}\r\n                width={600}\r\n                visible={editVisible}\r\n                onClose={onCloseEdit}\r\n                content={<GoodsEdit id={editId} onClose={onCloseEdit} visible={editVisible}/>}\r\n            />\r\n            <iframe name=\"download\" style={{display: 'none'}} />\r\n            <form action=\"/api/goods/export/goods_export\" target=\"download\" id=\"downloadForm\" style={{display: 'none'}}>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default inject('UserStore')(observer(GoodsList))\r\n","import { Result, Button } from 'antd'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\ninterface Props {\r\n    path: string\r\n}\r\nexport default function PageNotFound({ path }: Props) {\r\n    const history = useHistory()\r\n\r\n    const onClick = () => {\r\n        history.replace('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"想写几句骚话...\"\r\n                extra={<Button type=\"primary\" onClick={onClick}>返回首页</Button>}\r\n            />,\r\n        </>\r\n    )\r\n}\r\n","import {Route, useLocation, Redirect, useRouteMatch} from \"react-router-dom\"\r\nimport React, { useState } from 'react'\r\nimport jsCookie from \"js-cookie\"\r\nimport {observer} from \"mobx-react\"\r\nimport { message } from 'antd'\r\nimport { RouteProps as BaseRouteProps } from 'react-router'\r\nimport { UserStore } from '../store'\r\nimport ContentLayout from '@/views/layout/Layout'\r\nimport About from '@/views/home/About'\r\nimport Login from '@/views/login/Login'\r\nimport AdminIndex from '@/views/admin/Admin'\r\nimport Home from '@/views/home/Home'\r\nimport AdminList from \"@/views/admin/List\"\r\nimport GoodsLabelList from \"@/views/goodsLabel/List\"\r\nimport ShopList from \"@/views/shop/List\"\r\nimport ShopCategoryList from \"@/views/shopCategory/List\"\r\nimport ShopManagement from \"@/views/shop/Management\"\r\nimport GoodsList from \"@/views/goods/List\"\r\nimport PageNotFound from '../views/PageNotFound'\r\n\r\ninterface RouteProps extends BaseRouteProps{\r\n    component?: any,\r\n    redirect?: string,\r\n    from?: string,\r\n    roles?: string[],\r\n    children?: RouteProps[]\r\n}\r\n\r\n// 路由组件\r\nconst RouterView = (route: RouteProps) => {\r\n    console.log('----------------RouterView props-----------------', route)\r\n    console.log('----------------useRouteMatch-----------------', useRouteMatch())\r\n    return (\r\n        route.redirect\r\n            ? <Redirect\r\n                exact={route.exact}\r\n                strict={route.strict}\r\n                from={route.from}\r\n                to={route.redirect}/>\r\n            : <Route\r\n                path={route.path}\r\n                exact={route.exact}\r\n                strict={route.strict}\r\n                render={props => {\r\n                    console.log('-------------route.props----------', props)\r\n                    // pass the sub-routes down to keep nesting\r\n                    return (\r\n                        route.roles\r\n                            ? <AuthRoute routeProps={props} route={route} children={route.children}/>\r\n                            : <route.component {...props} children={route.children} />\r\n                    )\r\n                }}\r\n        />\r\n    )\r\n}\r\n\r\n// 需要授权路由\r\nconst AuthRoute = observer((props: any) => {\r\n    let [ userStore ] = useState(() => UserStore) as any\r\n    const userInfo = userStore.userInfo\r\n    const sid = jsCookie.get('SID')\r\n    const routeRoles = props.route.roles\r\n\r\n    if(!sid){\r\n        message.error('未登录')\r\n        return (<Redirect to={{pathname: '/login'}}/>)\r\n    }else{\r\n        const adminRoles = userInfo.roles\r\n        if(!userInfo.id){\r\n            console.log('权限路由，先获取登录信息', props.route.path)\r\n            userStore.checkAndGetUserInfo()\r\n            return null\r\n        }else if(adminRoles.includes('super') || adminRoles.some((item: string) => routeRoles.includes(item))){\r\n            console.log('权限路由，登录信息已获取', props.route.path)\r\n            return (\r\n                <props.route.component {...props.routeProps} children={props.children}/>\r\n            )\r\n        }else{\r\n            return (<Redirect to={{pathname: '/pageNotFound'}}/>)\r\n        }\r\n    }\r\n})\r\n\r\n// 没有对应路由\r\n// todo: 不能匹配到不存在的子路由，如 /about 有子路由 /about/about2，但是访问不存在的 /about/about3 时没有进入这里，需要在 /about 里面添加这个 NoMatchRoute 组件\r\nconst NoMatchRoute = () => {\r\n    let location = useLocation()\r\n\r\n    return (\r\n        <PageNotFound path={location.pathname}/>\r\n    )\r\n}\r\n\r\nconst allAuth = ['super', 'admin']\r\nconst superAuth = ['super']\r\n\r\nconst routes: RouteProps[] = [\r\n    {\r\n        redirect: '/home/me',\r\n        from: '/',\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: ContentLayout,\r\n        // exact: true, // 这样不会进入子路由\r\n        // strict: true,\r\n        children: [\r\n            {\r\n                redirect: '/home/me',\r\n                exact: true,\r\n                from: '/home'\r\n            },\r\n            {\r\n                path: '/home/admin',\r\n                component: AdminList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/about',\r\n                // exact: true,\r\n                component: About,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopCategory',\r\n                component: ShopCategoryList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopList',\r\n                component: ShopList,\r\n                roles: superAuth\r\n            },\r\n            {\r\n                path: '/home/shopDetail',\r\n                component: ShopManagement,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/goods',\r\n                component: GoodsList,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/goodsLabel',\r\n                component: GoodsLabelList,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                path: '/home/me',\r\n                // exact: true,\r\n                component: AdminIndex,\r\n                roles: allAuth\r\n            },\r\n            {\r\n                redirect: '/pageNotFound', // 随便一个不存在的一级路由，匹配404\r\n                exact: true,\r\n                from: '/home/*'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/test',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '*',\r\n        component: PageNotFound,\r\n    },\r\n]\r\n\r\n// 获取所有路由，含父路由\r\nfunction RouteTree2List(list: Array<any>) {\r\n    let  result: Array<any> = []\r\n    list.forEach(item => {\r\n        const temp = { ...item }\r\n        if(temp.children){\r\n            result = result.concat(RouteTree2List(temp.children))\r\n            temp.children = result\r\n        }\r\n        result.push(item)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst routeList = RouteTree2List(routes)\r\n\r\nexport { routes, RouterView, NoMatchRoute, routeList }\r\n","import {Switch, Route, HashRouter as Router} from 'react-router-dom'\r\nimport {NoMatchRoute, RouterView, routes} from \"../../router\";\r\nimport React from \"react\"\r\nimport $http from '../../http'\r\nimport styles from './home.module.less'\r\n\r\ninterface Props{\r\n    children: Array<any>\r\n}\r\n\r\nexport default function Home({ children }: Props) {\r\n    const onClick = () => {\r\n        $http.fetch('/shop/category_list', {}, { method: 'get' }).then( r => {\r\n            console.log(r)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <h1 onClick={onClick}>Home</h1>\r\n            <div className={styles.div1} />\r\n            <div className={styles.div2} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HashRouter, Switch } from 'react-router-dom'\r\nimport { routes, RouterView } from './router'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <HashRouter>\r\n              <Switch>\r\n                  {routes.map((route, i) => (\r\n                      <RouterView key={i} {...route}/>\r\n                  ))}\r\n              </Switch>\r\n          </HashRouter>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'mobx-react'\r\nimport { ConfigProvider } from 'antd'\r\nimport zhCN from 'antd/lib/locale/zh_CN'\r\nimport * as Store from \"@/store\"\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport 'antd/dist/antd.less'\r\nimport './index.less'\r\n\r\nmoment.locale('en')\r\n\r\nReactDOM.render(\r\n    <Provider {...Store}>\r\n        <ConfigProvider locale={zhCN}>\r\n            <App />\r\n        </ConfigProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number_input\":\"number_input--2sY-Y\",\"shop_manage_wrapper\":\"shop_manage_wrapper--MhxDl\",\"expanded_form\":\"expanded_form--25yT8\",\"expand_item_content\":\"expand_item_content--3OMk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img_preview\":\"img_preview--25MqK\",\"upload_action\":\"upload_action--K2bb5\",\"table_striped\":\"table_striped--29H9L\",\"picker_container\":\"picker_container--2hqnB\",\"ant-input\":\"ant-input--2WrCM\"};"],"sourceRoot":""}